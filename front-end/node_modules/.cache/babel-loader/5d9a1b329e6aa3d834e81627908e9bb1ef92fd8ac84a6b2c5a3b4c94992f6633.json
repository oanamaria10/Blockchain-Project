{"ast":null,"code":"import { Blob } from '@web3-storage/upload-client';\nimport { Blob as BlobCapabilities } from '@web3-storage/capabilities';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { Base } from '../base.js';\n/**\n * Client for interacting with the `blob/*` capabilities.\n */\nexport class BlobClient extends Base {\n  /**\n   * Store a Blob to the resource.\n   *\n   * Required delegated capabilities:\n   * - `space/blob/add`\n   *\n   * @param {Blob} blob - blob data.\n   * @param {import('../types.js').RequestOptions} [options]\n   */\n  async add(blob, options = {}) {\n    options = {\n      receiptsEndpoint: this._receiptsEndpoint.toString(),\n      connection: this._serviceConf.upload,\n      ...options\n    };\n    const conf = await this._invocationConfig([BlobCapabilities.add.can]);\n    const bytes = new Uint8Array(await blob.arrayBuffer());\n    const digest = await sha256.digest(bytes);\n    return {\n      digest,\n      ...(await Blob.add(conf, digest, bytes, options))\n    };\n  }\n  /**\n   * List blobs stored to the resource.\n   *\n   * Required delegated capabilities:\n   * - `space/blob/list`\n   *\n   * @param {import('../types.js').ListRequestOptions} [options]\n   */\n  async list(options = {}) {\n    const conf = await this._invocationConfig([BlobCapabilities.list.can]);\n    options.connection = this._serviceConf.upload;\n    return Blob.list(conf, options);\n  }\n  /**\n   * Remove a stored blob by multihash digest.\n   *\n   * Required delegated capabilities:\n   * - `space/blob/remove`\n   *\n   * @param {import('multiformats').MultihashDigest} digest - digest of blob to remove.\n   * @param {import('../types.js').RequestOptions} [options]\n   */\n  async remove(digest, options = {}) {\n    const conf = await this._invocationConfig([BlobCapabilities.remove.can]);\n    options.connection = this._serviceConf.upload;\n    return Blob.remove(conf, digest, options);\n  }\n  /**\n   * Gets a stored blob by multihash digest.\n   *\n   * @param {import('multiformats').MultihashDigest} digest - digest of blob to get.\n   * @param {import('../types.js').RequestOptions} [options]\n   */\n  async get(digest, options = {}) {\n    const conf = await this._invocationConfig([BlobCapabilities.get.can]);\n    options.connection = this._serviceConf.upload;\n    return Blob.get(conf, digest, options);\n  }\n}","map":{"version":3,"names":["Blob","BlobCapabilities","sha256","Base","BlobClient","add","blob","options","receiptsEndpoint","_receiptsEndpoint","toString","connection","_serviceConf","upload","conf","_invocationConfig","can","bytes","Uint8Array","arrayBuffer","digest","list","remove","get"],"sources":["../../../src/capability/blob.js"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,6BAA6B;AAClD,SAASA,IAAI,IAAIC,gBAAgB,QAAQ,4BAA4B;AACrE,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,IAAI,QAAQ,YAAY;AAEjC;;;AAGA,OAAM,MAAOC,UAAW,SAAQD,IAAI;EAClC;;;;;;;;;EASA,MAAME,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,EAAE;IAC1BA,OAAO,GAAG;MACRC,gBAAgB,EAAE,IAAI,CAACC,iBAAiB,CAACC,QAAQ,EAAE;MACnDC,UAAU,EAAE,IAAI,CAACC,YAAY,CAACC,MAAM;MACpC,GAAGN;KACJ;IACD,MAAMO,IAAI,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAACd,gBAAgB,CAACI,GAAG,CAACW,GAAG,CAAC,CAAC;IACrE,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAAC,MAAMZ,IAAI,CAACa,WAAW,EAAE,CAAC;IACtD,MAAMC,MAAM,GAAG,MAAMlB,MAAM,CAACkB,MAAM,CAACH,KAAK,CAAC;IACzC,OAAO;MAAEG,MAAM;MAAE,IAAI,MAAMpB,IAAI,CAACK,GAAG,CAACS,IAAI,EAAEM,MAAM,EAAEH,KAAK,EAAEV,OAAO,CAAC;IAAC,CAAE;EACtE;EAEA;;;;;;;;EAQA,MAAMc,IAAIA,CAACd,OAAO,GAAG,EAAE;IACrB,MAAMO,IAAI,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAACd,gBAAgB,CAACoB,IAAI,CAACL,GAAG,CAAC,CAAC;IACtET,OAAO,CAACI,UAAU,GAAG,IAAI,CAACC,YAAY,CAACC,MAAM;IAC7C,OAAOb,IAAI,CAACqB,IAAI,CAACP,IAAI,EAAEP,OAAO,CAAC;EACjC;EAEA;;;;;;;;;EASA,MAAMe,MAAMA,CAACF,MAAM,EAAEb,OAAO,GAAG,EAAE;IAC/B,MAAMO,IAAI,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAACd,gBAAgB,CAACqB,MAAM,CAACN,GAAG,CAAC,CAAC;IACxET,OAAO,CAACI,UAAU,GAAG,IAAI,CAACC,YAAY,CAACC,MAAM;IAC7C,OAAOb,IAAI,CAACsB,MAAM,CAACR,IAAI,EAAEM,MAAM,EAAEb,OAAO,CAAC;EAC3C;EAEA;;;;;;EAMA,MAAMgB,GAAGA,CAACH,MAAM,EAAEb,OAAO,GAAG,EAAE;IAC5B,MAAMO,IAAI,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAACd,gBAAgB,CAACsB,GAAG,CAACP,GAAG,CAAC,CAAC;IACrET,OAAO,CAACI,UAAU,GAAG,IAAI,CAACC,YAAY,CAACC,MAAM;IAC7C,OAAOb,IAAI,CAACuB,GAAG,CAACT,IAAI,EAAEM,MAAM,EAAEb,OAAO,CAAC;EACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}