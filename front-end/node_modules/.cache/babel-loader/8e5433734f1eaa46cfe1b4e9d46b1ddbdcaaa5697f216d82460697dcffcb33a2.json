{"ast":null,"code":"import * as API from '@web3-storage/access/types';\nimport { sha256, delegate, Delegation } from '@ucanto/core';\nimport { ed25519 } from '@ucanto/principal';\nimport * as Result from './result.js';\nimport { GrantedAccess } from '@web3-storage/access/access';\nimport { Base } from './base.js';\nexport class CouponAPI extends Base {\n  /**\n   * Redeems coupon from the the the archive. Throws an error if the coupon\n   * password is invalid or if provided archive is not a valid.\n   *\n   * @param {Uint8Array} archive\n   * @param {object} [options]\n   * @param {string} [options.password]\n   */\n  async redeem(archive, options = {}) {\n    const {\n      agent\n    } = this;\n    const coupon = Result.unwrap(await extract(archive));\n    return Result.unwrap(await redeem(coupon, {\n      ...options,\n      agent\n    }));\n  }\n  /**\n   * Issues a coupon for the given delegation.\n   *\n   * @param {Omit<CouponOptions, 'issuer'>} options\n   */\n  async issue({\n    proofs = [],\n    ...options\n  }) {\n    const {\n      agent\n    } = this;\n    return await issue({\n      ...options,\n      issuer: agent.issuer,\n      proofs: [...proofs, ...agent.proofs(options.capabilities)]\n    });\n  }\n}\n/**\n * Extracts coupon from the archive.\n *\n * @param {Uint8Array} archive\n * @returns {Promise<API.Result<Coupon, Error>>}\n */\nexport const extract = async archive => {\n  const {\n    ok,\n    error\n  } = await Delegation.extract(archive);\n  return ok ? Result.ok(new Coupon({\n    proofs: [ok]\n  })) : Result.error(error);\n};\n/**\n * Encodes coupon into an archive.\n *\n * @param {Model} coupon\n */\nexport const archive = async coupon => {\n  const [delegation] = coupon.proofs;\n  return await Delegation.archive(delegation);\n};\n/**\n * Issues a coupon for the given delegation.\n *\n * @typedef {Omit<import('@ucanto/interface').DelegationOptions<API.Capabilities>, 'audience'> & { password?: string }} CouponOptions\n * @param {CouponOptions} options\n */\nexport const issue = async ({\n  password = '',\n  ...options\n}) => {\n  const audience = await deriveSigner(password);\n  const delegation = await delegate({\n    ...options,\n    audience\n  });\n  return new Coupon({\n    proofs: [delegation]\n  });\n};\n/**\n * @typedef {object} Model\n * @property {[API.Delegation]} proofs\n */\n/**\n * Redeems granted access with the given agent from the given coupon.\n *\n * @param {Model} coupon\n * @param {object} options\n * @param {API.Agent} options.agent\n * @param {string} [options.password]\n * @returns {Promise<API.Result<GrantedAccess, Error>>}\n */\nexport const redeem = async (coupon, {\n  agent,\n  password = ''\n}) => {\n  const audience = await deriveSigner(password);\n  const [delegation] = coupon.proofs;\n  if (delegation.audience.did() !== audience.did()) {\n    return Result.error(new RangeError(password === '' ? 'Extracting account requires a password' : 'Provided password is invalid'));\n  } else {\n    const authorization = await delegate({\n      issuer: audience,\n      audience: agent,\n      capabilities: delegation.capabilities,\n      expiration: delegation.expiration,\n      notBefore: delegation.notBefore,\n      proofs: [delegation]\n    });\n    return Result.ok(new GrantedAccess({\n      agent,\n      proofs: [authorization]\n    }));\n  }\n};\n/**\n * @param {string} password\n */\nconst deriveSigner = async password => {\n  const {\n    digest\n  } = await sha256.digest(new TextEncoder().encode(password));\n  return await ed25519.Signer.derive(digest);\n};\nexport class Coupon {\n  /**\n   * @param {Model} model\n   */\n  constructor(model) {\n    this.model = model;\n  }\n  get proofs() {\n    return this.model.proofs;\n  }\n  /**\n   *\n   * @param {API.Agent} agent\n   * @param {object} [options]\n   * @param {string} [options.password]\n   */\n  redeem(agent, options = {}) {\n    return redeem(this, {\n      ...options,\n      agent\n    });\n  }\n  archive() {\n    return archive(this);\n  }\n}","map":{"version":3,"names":["API","sha256","delegate","Delegation","ed25519","Result","GrantedAccess","Base","CouponAPI","redeem","archive","options","agent","coupon","unwrap","extract","issue","proofs","issuer","capabilities","ok","error","Coupon","delegation","password","audience","deriveSigner","did","RangeError","authorization","expiration","notBefore","digest","TextEncoder","encode","Signer","derive","constructor","model"],"sources":["../../src/coupon.js"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}