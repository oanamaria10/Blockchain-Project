{"ast":null,"code":"'use strict';\n\n/* istanbul ignore file: only for Node 12 */\nconst {\n  kConnected,\n  kSize\n} = require('../core/symbols');\nclass CompatWeakRef {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0 ? undefined : this.value;\n  }\n}\nclass CompatFinalizer {\n  constructor(finalizer) {\n    this.finalizer = finalizer;\n  }\n  register(dispatcher, key) {\n    if (dispatcher.on) {\n      dispatcher.on('disconnect', () => {\n        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n          this.finalizer(key);\n        }\n      });\n    }\n  }\n}\nmodule.exports = function () {\n  // FIXME: remove workaround when the Node bug is fixed\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\n  if (process.env.NODE_V8_COVERAGE) {\n    return {\n      WeakRef: CompatWeakRef,\n      FinalizationRegistry: CompatFinalizer\n    };\n  }\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  };\n};","map":{"version":3,"names":["kConnected","kSize","require","CompatWeakRef","constructor","value","deref","undefined","CompatFinalizer","finalizer","register","dispatcher","key","on","module","exports","process","env","NODE_V8_COVERAGE","WeakRef","FinalizationRegistry","global"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/undici/lib/compat/dispatcher-weakref.js"],"sourcesContent":["'use strict'\n\n/* istanbul ignore file: only for Node 12 */\n\nconst { kConnected, kSize } = require('../core/symbols')\n\nclass CompatWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0\n      ? undefined\n      : this.value\n  }\n}\n\nclass CompatFinalizer {\n  constructor (finalizer) {\n    this.finalizer = finalizer\n  }\n\n  register (dispatcher, key) {\n    if (dispatcher.on) {\n      dispatcher.on('disconnect', () => {\n        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n          this.finalizer(key)\n        }\n      })\n    }\n  }\n}\n\nmodule.exports = function () {\n  // FIXME: remove workaround when the Node bug is fixed\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\n  if (process.env.NODE_V8_COVERAGE) {\n    return {\n      WeakRef: CompatWeakRef,\n      FinalizationRegistry: CompatFinalizer\n    }\n  }\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,MAAM;EAAEA,UAAU;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAExD,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAEC,KAAK,EAAE;IAClB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAC,KAAKA,CAAA,EAAI;IACP,OAAO,IAAI,CAACD,KAAK,CAACL,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAACK,KAAK,CAACJ,KAAK,CAAC,KAAK,CAAC,GAC1DM,SAAS,GACT,IAAI,CAACF,KAAK;EAChB;AACF;AAEA,MAAMG,eAAe,CAAC;EACpBJ,WAAWA,CAAEK,SAAS,EAAE;IACtB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EAEAC,QAAQA,CAAEC,UAAU,EAAEC,GAAG,EAAE;IACzB,IAAID,UAAU,CAACE,EAAE,EAAE;MACjBF,UAAU,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;QAChC,IAAIF,UAAU,CAACX,UAAU,CAAC,KAAK,CAAC,IAAIW,UAAU,CAACV,KAAK,CAAC,KAAK,CAAC,EAAE;UAC3D,IAAI,CAACQ,SAAS,CAACG,GAAG,CAAC;QACrB;MACF,CAAC,CAAC;IACJ;EACF;AACF;AAEAE,MAAM,CAACC,OAAO,GAAG,YAAY;EAC3B;EACA;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;IAChC,OAAO;MACLC,OAAO,EAAEhB,aAAa;MACtBiB,oBAAoB,EAAEZ;IACxB,CAAC;EACH;EACA,OAAO;IACLW,OAAO,EAAEE,MAAM,CAACF,OAAO,IAAIhB,aAAa;IACxCiB,oBAAoB,EAAEC,MAAM,CAACD,oBAAoB,IAAIZ;EACvD,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}