{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Desktop\\\\Blockchain\\\\Proiect\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport tokenAbi from \"./RealEstateToken.json\";\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\nimport Login from './Login'; // Import the Login component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealEstateTokenInteraction() {\n  _s();\n  const [tokenId, setTokenId] = useState('');\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [pay, setPay] = useState('');\n  const [tokenId1, setTokenId1] = useState('');\n  const [location, setLocation] = useState('');\n  const [price, setPrice] = useState('');\n  const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\n  const [signerIndex, setSignerIndex] = useState(null); // Use more descriptive state variable name\n\n  const [tokenContract, setTokenContract] = useState(null);\n  const [marketplaceContract, setMarketplaceContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login status\n  const [userTokens, setUserTokens] = useState([]); // Add state for user's tokens\n\n  useEffect(() => {\n    async function fetchAccountData() {\n      try {\n        const accounts = await provider.listAccounts();\n        setAccountData(accounts);\n      } catch (error) {\n        console.error('Error fetching account data:', error);\n      }\n    }\n    fetchAccountData();\n  }, [provider]);\n  useEffect(() => {\n    if (signerIndex !== null) {\n      const signer = provider.getSigner(signerIndex);\n      if (!tokenContract) {\n        const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n        const token = new ethers.Contract(tokenAddress, tokenAbi.abi, signer);\n        setTokenContract(token);\n      }\n      if (!marketplaceContract) {\n        const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n        const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi.abi, signer);\n        setMarketplaceContract(marketplace);\n      }\n    }\n  }, [signerIndex, provider, tokenContract, marketplaceContract]);\n  async function issueToken() {\n    try {\n      if (tokenContract) {\n        const issueTx = await tokenContract.issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\n        await issueTx.wait();\n        console.log(\"Token Issued Successfully!\");\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  async function handleLogin(address) {\n    try {\n      setIsLoggedIn(true);\n      setAccountAddress(address);\n      const balance = await provider.getBalance(address);\n      setAccountBalance(ethers.utils.formatEther(balance));\n      const index = accountData.indexOf(address);\n      setSignerIndex(index);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  }\n  async function buyToken() {\n    try {\n      if (marketplaceContract) {\n        const payValue = ethers.utils.parseEther(pay);\n        const buyTx = await marketplaceContract.buyToken(parseInt(tokenId1), {\n          value: payValue\n        });\n        await buyTx.wait();\n        console.log(\"Token bought successfully!\");\n        const updatedBalance = await provider.getBalance(accountAddress);\n        setAccountBalance(ethers.utils.formatEther(updatedBalance));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  async function fetchUserTokens() {\n    try {\n      if (tokenContract) {\n        const tokens = await tokenContract.viewAllTokens();\n        console.log(accountAddress);\n        const filteredTokens = tokens.filter(token => {\n          console.log(token.onwer);\n          tokenContract.isTokenOwner(accountAddress, token.owner);\n        }).map(token => ({\n          id: token.id.toNumber(),\n          location: token.location,\n          price: ethers.utils.formatEther(token.price),\n          owner: token.owner\n        }));\n        setUserTokens(filteredTokens);\n      }\n    } catch (error) {\n      console.error('Error fetching user tokens:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real Estate Token Interaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connected Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", accountBalance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Issue New Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        children: \"Issue Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId1,\n        onChange: e => setTokenId1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"How much will you pay:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pay,\n        onChange: e => setPay(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyToken,\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchUserTokens,\n        children: \"Show My Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userTokens.map(token => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Token ID: \", token.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", token.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", token.price, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, token.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(RealEstateTokenInteraction, \"d9zbvbK+6HPWfdB29PTN/RV0lbg=\");\n_c = RealEstateTokenInteraction;\nexport default RealEstateTokenInteraction;\nvar _c;\n$RefreshReg$(_c, \"RealEstateTokenInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","tokenAbi","marketplaceAbi","Login","jsxDEV","_jsxDEV","RealEstateTokenInteraction","_s","tokenId","setTokenId","accountAddress","setAccountAddress","accountBalance","setAccountBalance","pay","setPay","tokenId1","setTokenId1","location","setLocation","price","setPrice","provider","providers","JsonRpcProvider","signerIndex","setSignerIndex","tokenContract","setTokenContract","marketplaceContract","setMarketplaceContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","userTokens","setUserTokens","fetchAccountData","accounts","listAccounts","error","console","signer","getSigner","tokenAddress","token","Contract","abi","marketplaceAddress","marketplace","issueToken","issueTx","parseInt","utils","parseEther","wait","log","handleLogin","address","balance","getBalance","formatEther","index","indexOf","buyToken","payValue","buyTx","value","updatedBalance","fetchUserTokens","tokens","viewAllTokens","filteredTokens","filter","onwer","isTokenOwner","owner","map","id","toNumber","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport tokenAbi from \"./RealEstateToken.json\";\r\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\r\nimport Login from './Login'; // Import the Login component\r\nimport './App.css';\r\n\r\nfunction RealEstateTokenInteraction() {\r\n    const [tokenId, setTokenId] = useState('');\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [pay, setPay] = useState('');\r\n    const [tokenId1, setTokenId1] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\r\n    const [signerIndex, setSignerIndex] = useState(null); // Use more descriptive state variable name\r\n\r\n    const [tokenContract, setTokenContract] = useState(null);\r\n    const [marketplaceContract, setMarketplaceContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login status\r\n    const [userTokens, setUserTokens] = useState([]); // Add state for user's tokens\r\n\r\n    useEffect(() => {\r\n        async function fetchAccountData() {\r\n            try {\r\n                const accounts = await provider.listAccounts();\r\n                setAccountData(accounts);\r\n            } catch (error) {\r\n                console.error('Error fetching account data:', error);\r\n            }\r\n        }\r\n\r\n        fetchAccountData();\r\n    }, [provider]);\r\n\r\n    useEffect(() => {\r\n        if (signerIndex !== null) {\r\n            const signer = provider.getSigner(signerIndex);\r\n\r\n            if (!tokenContract) {\r\n                const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n                const token = new ethers.Contract(tokenAddress, tokenAbi.abi, signer);\r\n                setTokenContract(token);\r\n            }\r\n\r\n            if (!marketplaceContract) {\r\n                const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n                const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi.abi, signer);\r\n                setMarketplaceContract(marketplace);\r\n            }\r\n        }\r\n    }, [signerIndex, provider, tokenContract, marketplaceContract]);\r\n\r\n    async function issueToken() {\r\n        try {\r\n            if (tokenContract) {\r\n                const issueTx = await tokenContract.issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\r\n                await issueTx.wait();\r\n                console.log(\"Token Issued Successfully!\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async function handleLogin(address) {\r\n        try {\r\n            setIsLoggedIn(true);\r\n            setAccountAddress(address);\r\n            const balance = await provider.getBalance(address);\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n            const index = accountData.indexOf(address);\r\n            setSignerIndex(index);\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    }\r\n\r\n    async function buyToken() {\r\n        try {\r\n            if (marketplaceContract) {\r\n                const payValue = ethers.utils.parseEther(pay);\r\n                const buyTx = await marketplaceContract.buyToken(parseInt(tokenId1), { value: payValue });\r\n                await buyTx.wait();\r\n                console.log(\"Token bought successfully!\");\r\n\r\n                const updatedBalance = await provider.getBalance(accountAddress);\r\n                setAccountBalance(ethers.utils.formatEther(updatedBalance));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchUserTokens() {\r\n        try {\r\n            if (tokenContract) {\r\n                const tokens = await tokenContract.viewAllTokens();\r\n                console.log(accountAddress);\r\n                const filteredTokens = tokens.filter(token => { console.log(token.onwer); tokenContract.isTokenOwner(accountAddress, token.owner) })\r\n                    .map(token => ({\r\n                        id: token.id.toNumber(),\r\n                        location: token.location,\r\n                        price: ethers.utils.formatEther(token.price),\r\n                        owner: token.owner\r\n                    }));\r\n\r\n                setUserTokens(filteredTokens);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user tokens:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn ? (\r\n                <Login accountData={accountData} onLogin={handleLogin} />\r\n            ) : (\r\n                <div>\r\n                    <h1>Real Estate Token Interaction</h1>\r\n\r\n                    <div>\r\n                        <h2>Connected Account Information</h2>\r\n                        <p>Address: {accountAddress}</p>\r\n                        <p>Balance: {accountBalance} ETH</p>\r\n                    </div>\r\n\r\n                    <h2>Issue New Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId} onChange={(e) => setTokenId(e.target.value)} /><br />\r\n                    <label>Location:</label>\r\n                    <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} /><br />\r\n                    <label>Price (ETH):</label>\r\n                    <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} /><br />\r\n                    <button onClick={issueToken}>Issue Token</button>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Buy Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId1} onChange={(e) => setTokenId1(e.target.value)} /><br />\r\n                    <label>How much will you pay:</label>\r\n                    <input type=\"text\" value={pay} onChange={(e) => setPay(e.target.value)} /><br />\r\n                    <button onClick={buyToken}>Buy Token</button>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Your Tokens</h2>\r\n                    <button onClick={fetchUserTokens}>Show My Tokens</button>\r\n                    <ul>\r\n                        {userTokens.map((token) => (\r\n                            <li key={token.id}>\r\n                                <p>Token ID: {token.id}</p>\r\n                                <p>Location: {token.location}</p>\r\n                                <p>Price: {token.price} ETH</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealEstateTokenInteraction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}