{"ast":null,"code":"import * as API from './api.js';\n\n/**\n * Returns the base 2 logarithm of the given `n`, rounded down.\n *\n * @param {API.uint64} n\n * @returns {number}\n */\nexport const log2Floor = n => {\n  let result = 0n;\n  while (n >>= 1n) result++;\n  return Number(result);\n};\n\n/**\n * Return the integer logarithm with ceiling for 64 bit unsigned ints.\n *\n * @param {API.uint64} n\n */\nexport const log2Ceil = n => n <= 1n ? 0 : log2Floor(BigInt(n) - 1n) + 1;\n\n/**\n * @param {API.uint64} n\n */\nexport const trailingZeros64 = n => {\n  if (n === 0n) {\n    return 64;\n  }\n  let count = 0;\n  while ((n & 1n) === 0n) {\n    n >>= 1n;\n    count++;\n  }\n  return count;\n};\n\n/**\n * @param {API.uint64} value\n */\nexport const onesCount64 = value => {\n  let count = 0;\n  const mask = 1n;\n  for (let i = 0n; i < 64n; i++) {\n    if ((value & mask << i) !== 0n) {\n      count++;\n    }\n  }\n  return count;\n};\n\n/**\n * @param {API.uint64} n\n * @returns {API.uint64}\n */\nexport const pow2 = n => 1n << n;","map":{"version":3,"names":["API","log2Floor","n","result","Number","log2Ceil","BigInt","trailingZeros64","count","onesCount64","value","mask","i","pow2"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/data-segment/src/uint64.js"],"sourcesContent":["import * as API from './api.js'\n\n/**\n * Returns the base 2 logarithm of the given `n`, rounded down.\n *\n * @param {API.uint64} n\n * @returns {number}\n */\nexport const log2Floor = (n) => {\n  let result = 0n\n  while ((n >>= 1n)) result++\n  return Number(result)\n}\n\n/**\n * Return the integer logarithm with ceiling for 64 bit unsigned ints.\n *\n * @param {API.uint64} n\n */\nexport const log2Ceil = (n) => (n <= 1n ? 0 : log2Floor(BigInt(n) - 1n) + 1)\n\n/**\n * @param {API.uint64} n\n */\nexport const trailingZeros64 = (n) => {\n  if (n === 0n) {\n    return 64\n  }\n\n  let count = 0\n  while ((n & 1n) === 0n) {\n    n >>= 1n\n    count++\n  }\n\n  return count\n}\n\n/**\n * @param {API.uint64} value\n */\nexport const onesCount64 = (value) => {\n  let count = 0\n  const mask = 1n\n\n  for (let i = 0n; i < 64n; i++) {\n    if ((value & (mask << i)) !== 0n) {\n      count++\n    }\n  }\n\n  return count\n}\n\n/**\n * @param {API.uint64} n\n * @returns {API.uint64}\n */\nexport const pow2 = (n) => 1n << n\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,UAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAIC,CAAC,IAAK;EAC9B,IAAIC,MAAM,GAAG,EAAE;EACf,OAAQD,CAAC,KAAK,EAAE,EAAGC,MAAM,EAAE;EAC3B,OAAOC,MAAM,CAACD,MAAM,CAAC;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,QAAQ,GAAIH,CAAC,IAAMA,CAAC,IAAI,EAAE,GAAG,CAAC,GAAGD,SAAS,CAACK,MAAM,CAACJ,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAE;;AAE5E;AACA;AACA;AACA,OAAO,MAAMK,eAAe,GAAIL,CAAC,IAAK;EACpC,IAAIA,CAAC,KAAK,EAAE,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIM,KAAK,GAAG,CAAC;EACb,OAAO,CAACN,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;IACtBA,CAAC,KAAK,EAAE;IACRM,KAAK,EAAE;EACT;EAEA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EACpC,IAAIF,KAAK,GAAG,CAAC;EACb,MAAMG,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,EAAE,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC7B,IAAI,CAACF,KAAK,GAAIC,IAAI,IAAIC,CAAE,MAAM,EAAE,EAAE;MAChCJ,KAAK,EAAE;IACT;EACF;EAEA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,IAAI,GAAIX,CAAC,IAAK,EAAE,IAAIA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}