{"ast":null,"code":"'use strict';\n\nvar Test = require('../test');\nvar EVENT_FILE_PRE_REQUIRE = require('../suite').constants.EVENT_FILE_PRE_REQUIRE;\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function bddInterface(suite) {\n  var suites = [suite];\n  suite.on(EVENT_FILE_PRE_REQUIRE, function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function (title, fn) {\n      return common.suite.create({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe = context.xcontext = context.describe.skip = function (title, fn) {\n      return common.suite.skip({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function (title, fn) {\n      return common.suite.only({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function (title, fn) {\n      return common.test.only(mocha, context.it(title, fn));\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit = context.xspecify = context.it.skip = function (title) {\n      return context.it(title);\n    };\n  });\n};\nmodule.exports.description = 'BDD or RSpec style [default]';","map":{"version":3,"names":["Test","require","EVENT_FILE_PRE_REQUIRE","constants","module","exports","bddInterface","suite","suites","on","context","file","mocha","common","before","after","beforeEach","afterEach","run","options","delay","runWithSuite","describe","title","fn","create","xdescribe","xcontext","skip","only","it","specify","isPending","test","addTest","xit","xspecify","description"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/interfaces/bdd.js"],"sourcesContent":["'use strict';\n\nvar Test = require('../test');\nvar EVENT_FILE_PRE_REQUIRE =\n  require('../suite').constants.EVENT_FILE_PRE_REQUIRE;\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function bddInterface(suite) {\n  var suites = [suite];\n\n  suite.on(EVENT_FILE_PRE_REQUIRE, function (context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function (title, fn) {\n      return common.suite.create({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe =\n      context.xcontext =\n      context.describe.skip =\n        function (title, fn) {\n          return common.suite.skip({\n            title,\n            file,\n            fn\n          });\n        };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function (title, fn) {\n      return common.suite.only({\n        title,\n        file,\n        fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function (title, fn) {\n      return common.test.only(mocha, context.it(title, fn));\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit =\n      context.xspecify =\n      context.it.skip =\n        function (title) {\n          return context.it(title);\n        };\n  });\n};\n\nmodule.exports.description = 'BDD or RSpec style [default]';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}