{"ast":null,"code":"'use strict';\n\n/**\n * @module JSONStream\n */\n/**\n * Module dependencies.\n */\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n\n/**\n * Expose `JSONStream`.\n */\n\nexports = module.exports = JSONStream;\n\n/**\n * Constructs a new `JSONStream` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONStream(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var total = runner.total;\n  runner.once(EVENT_RUN_BEGIN, function () {\n    writeEvent(['start', {\n      total\n    }]);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    writeEvent(['pass', clean(test)]);\n  });\n  runner.on(EVENT_TEST_FAIL, function (test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    writeEvent(['fail', test]);\n  });\n  runner.once(EVENT_RUN_END, function () {\n    writeEvent(['end', self.stats]);\n  });\n}\n\n/**\n * Mocha event to be written to the output stream.\n * @typedef {Array} JSONStream~MochaEvent\n */\n\n/**\n * Writes Mocha event to reporter output stream.\n *\n * @private\n * @param {JSONStream~MochaEvent} event - Mocha event to be output.\n */\nfunction writeEvent(event) {\n  process.stdout.write(JSON.stringify(event) + '\\n');\n}\n\n/**\n * Returns an object literal representation of `test`\n * free of cyclic properties, etc.\n *\n * @private\n * @param {Test} test - Instance used as data source.\n * @return {Object} object containing pared-down test instance data\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed\n  };\n}\nJSONStream.description = 'newline delimited JSON events';","map":{"version":3,"names":["Base","require","constants","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_RUN_BEGIN","EVENT_RUN_END","exports","module","JSONStream","runner","options","call","self","total","once","writeEvent","on","test","clean","err","message","stack","stats","event","process","stdout","write","JSON","stringify","title","fullTitle","file","duration","currentRetry","speed","description"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/reporters/json-stream.js"],"sourcesContent":["'use strict';\n/**\n * @module JSONStream\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n\n/**\n * Expose `JSONStream`.\n */\n\nexports = module.exports = JSONStream;\n\n/**\n * Constructs a new `JSONStream` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONStream(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var total = runner.total;\n\n  runner.once(EVENT_RUN_BEGIN, function () {\n    writeEvent(['start', {total}]);\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    writeEvent(['pass', clean(test)]);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    writeEvent(['fail', test]);\n  });\n\n  runner.once(EVENT_RUN_END, function () {\n    writeEvent(['end', self.stats]);\n  });\n}\n\n/**\n * Mocha event to be written to the output stream.\n * @typedef {Array} JSONStream~MochaEvent\n */\n\n/**\n * Writes Mocha event to reporter output stream.\n *\n * @private\n * @param {JSONStream~MochaEvent} event - Mocha event to be output.\n */\nfunction writeEvent(event) {\n  process.stdout.write(JSON.stringify(event) + '\\n');\n}\n\n/**\n * Returns an object literal representation of `test`\n * free of cyclic properties, etc.\n *\n * @private\n * @param {Test} test - Instance used as data source.\n * @return {Object} object containing pared-down test instance data\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed\n  };\n}\n\nJSONStream.description = 'newline delimited JSON events';\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,SAAS;AAC9C,IAAIC,eAAe,GAAGD,SAAS,CAACC,eAAe;AAC/C,IAAIC,eAAe,GAAGF,SAAS,CAACE,eAAe;AAC/C,IAAIC,eAAe,GAAGH,SAAS,CAACG,eAAe;AAC/C,IAAIC,aAAa,GAAGJ,SAAS,CAACI,aAAa;;AAE3C;AACA;AACA;;AAEAC,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,UAAU;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACnCX,IAAI,CAACY,IAAI,CAAC,IAAI,EAAEF,MAAM,EAAEC,OAAO,CAAC;EAEhC,IAAIE,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAGJ,MAAM,CAACI,KAAK;EAExBJ,MAAM,CAACK,IAAI,CAACV,eAAe,EAAE,YAAY;IACvCW,UAAU,CAAC,CAAC,OAAO,EAAE;MAACF;IAAK,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;EAEFJ,MAAM,CAACO,EAAE,CAACd,eAAe,EAAE,UAAUe,IAAI,EAAE;IACzCF,UAAU,CAAC,CAAC,MAAM,EAAEG,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC;EAEFR,MAAM,CAACO,EAAE,CAACb,eAAe,EAAE,UAAUc,IAAI,EAAEE,GAAG,EAAE;IAC9CF,IAAI,GAAGC,KAAK,CAACD,IAAI,CAAC;IAClBA,IAAI,CAACE,GAAG,GAAGA,GAAG,CAACC,OAAO;IACtBH,IAAI,CAACI,KAAK,GAAGF,GAAG,CAACE,KAAK,IAAI,IAAI;IAC9BN,UAAU,CAAC,CAAC,MAAM,EAAEE,IAAI,CAAC,CAAC;EAC5B,CAAC,CAAC;EAEFR,MAAM,CAACK,IAAI,CAACT,aAAa,EAAE,YAAY;IACrCU,UAAU,CAAC,CAAC,KAAK,EAAEH,IAAI,CAACU,KAAK,CAAC,CAAC;EACjC,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASP,UAAUA,CAACQ,KAAK,EAAE;EACzBC,OAAO,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,GAAG,IAAI,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,KAAKA,CAACD,IAAI,EAAE;EACnB,OAAO;IACLY,KAAK,EAAEZ,IAAI,CAACY,KAAK;IACjBC,SAAS,EAAEb,IAAI,CAACa,SAAS,CAAC,CAAC;IAC3BC,IAAI,EAAEd,IAAI,CAACc,IAAI;IACfC,QAAQ,EAAEf,IAAI,CAACe,QAAQ;IACvBC,YAAY,EAAEhB,IAAI,CAACgB,YAAY,CAAC,CAAC;IACjCC,KAAK,EAAEjB,IAAI,CAACiB;EACd,CAAC;AACH;AAEA1B,UAAU,CAAC2B,WAAW,GAAG,+BAA+B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}