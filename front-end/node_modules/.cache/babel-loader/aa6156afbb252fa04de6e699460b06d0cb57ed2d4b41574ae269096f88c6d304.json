{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar parallelBatch = require('it-parallel-batch');\nvar options = require('./options.js');\nvar index = require('./dag-builder/index.js');\nvar treeBuilder = require('./tree-builder.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar parallelBatch__default = /*#__PURE__*/_interopDefaultLegacy(parallelBatch);\nasync function* importer(source, blockstore, options$1 = {}) {\n  const opts = options(options$1);\n  let dagBuilder;\n  if (typeof options$1.dagBuilder === 'function') {\n    dagBuilder = options$1.dagBuilder;\n  } else {\n    dagBuilder = index;\n  }\n  let treeBuilder$1;\n  if (typeof options$1.treeBuilder === 'function') {\n    treeBuilder$1 = options$1.treeBuilder;\n  } else {\n    treeBuilder$1 = treeBuilder;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder$1(parallelBatch__default[\"default\"](dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}\nexports.importer = importer;","map":{"version":3,"names":["Object","defineProperty","exports","value","parallelBatch","require","options","index","treeBuilder","_interopDefaultLegacy","e","parallelBatch__default","importer","source","blockstore","options$1","opts","dagBuilder","treeBuilder$1","candidates","Symbol","asyncIterator","iterator","entry","fileImportConcurrency","cid","path","unixfs","size"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar parallelBatch = require('it-parallel-batch');\nvar options = require('./options.js');\nvar index = require('./dag-builder/index.js');\nvar treeBuilder = require('./tree-builder.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar parallelBatch__default = /*#__PURE__*/_interopDefaultLegacy(parallelBatch);\n\nasync function* importer(source, blockstore, options$1 = {}) {\n  const opts = options(options$1);\n  let dagBuilder;\n  if (typeof options$1.dagBuilder === 'function') {\n    dagBuilder = options$1.dagBuilder;\n  } else {\n    dagBuilder = index;\n  }\n  let treeBuilder$1;\n  if (typeof options$1.treeBuilder === 'function') {\n    treeBuilder$1 = options$1.treeBuilder;\n  } else {\n    treeBuilder$1 = treeBuilder;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder$1(parallelBatch__default[\"default\"](dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}\n\nexports.importer = importer;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,aAAa,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAChD,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAc,CAAC;AACrC,IAAIE,KAAK,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAC7C,IAAIG,WAAW,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAE9C,SAASI,qBAAqBA,CAAEC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,SAAS,IAAIA,CAAC,GAAGA,CAAC,GAAG;IAAE,SAAS,EAAEA;EAAE,CAAC;AAAE;AAEjH,IAAIC,sBAAsB,GAAG,aAAaF,qBAAqB,CAACL,aAAa,CAAC;AAE9E,gBAAgBQ,QAAQA,CAACC,MAAM,EAAEC,UAAU,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAE;EAC3D,MAAMC,IAAI,GAAGV,OAAO,CAACS,SAAS,CAAC;EAC/B,IAAIE,UAAU;EACd,IAAI,OAAOF,SAAS,CAACE,UAAU,KAAK,UAAU,EAAE;IAC9CA,UAAU,GAAGF,SAAS,CAACE,UAAU;EACnC,CAAC,MAAM;IACLA,UAAU,GAAGV,KAAK;EACpB;EACA,IAAIW,aAAa;EACjB,IAAI,OAAOH,SAAS,CAACP,WAAW,KAAK,UAAU,EAAE;IAC/CU,aAAa,GAAGH,SAAS,CAACP,WAAW;EACvC,CAAC,MAAM;IACLU,aAAa,GAAGV,WAAW;EAC7B;EACA,IAAIW,UAAU;EACd,IAAIC,MAAM,CAACC,aAAa,IAAIR,MAAM,IAAIO,MAAM,CAACE,QAAQ,IAAIT,MAAM,EAAE;IAC/DM,UAAU,GAAGN,MAAM;EACrB,CAAC,MAAM;IACLM,UAAU,GAAG,CAACN,MAAM,CAAC;EACvB;EACA,WAAW,MAAMU,KAAK,IAAIL,aAAa,CAACP,sBAAsB,CAAC,SAAS,CAAC,CAACM,UAAU,CAACE,UAAU,EAAEL,UAAU,EAAEE,IAAI,CAAC,EAAEA,IAAI,CAACQ,qBAAqB,CAAC,EAAEV,UAAU,EAAEE,IAAI,CAAC,EAAE;IAClK,MAAM;MACJS,GAAG,EAAEF,KAAK,CAACE,GAAG;MACdC,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,MAAM,EAAEJ,KAAK,CAACI,MAAM;MACpBC,IAAI,EAAEL,KAAK,CAACK;IACd,CAAC;EACH;AACF;AAEA1B,OAAO,CAACU,QAAQ,GAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}