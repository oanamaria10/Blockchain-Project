{"ast":null,"code":"import { Hardfork } from './enums.js';\nvar Status;\n(function (Status) {\n  Status[\"Draft\"] = \"draft\";\n  Status[\"Review\"] = \"review\";\n  Status[\"Final\"] = \"final\";\n})(Status || (Status = {}));\nexport const EIPs = {\n  1153: {\n    comment: 'Transient storage opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      tstore: {\n        v: 100,\n        d: 'Base fee of the TSTORE opcode'\n      },\n      tload: {\n        v: 100,\n        d: 'Base fee of the TLOAD opcode'\n      }\n    }\n  },\n  1559: {\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2930],\n    gasConfig: {\n      baseFeeMaxChangeDenominator: {\n        v: 8,\n        d: 'Maximum base fee change denominator'\n      },\n      elasticityMultiplier: {\n        v: 2,\n        d: 'Maximum block gas target elasticity'\n      },\n      initialBaseFee: {\n        v: 1000000000,\n        d: 'Initial base fee on first EIP1559 block'\n      }\n    }\n  },\n  2315: {\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [],\n    gasPrices: {\n      beginsub: {\n        v: 2,\n        d: 'Base fee of the BEGINSUB opcode'\n      },\n      returnsub: {\n        v: 5,\n        d: 'Base fee of the RETURNSUB opcode'\n      },\n      jumpsub: {\n        v: 10,\n        d: 'Base fee of the JUMPSUB opcode'\n      }\n    }\n  },\n  2565: {\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Byzantium,\n    requiredEIPs: [],\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 3,\n        d: 'Gquaddivisor from modexp precompile for gas calculation'\n      }\n    }\n  },\n  2718: {\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: []\n  },\n  2929: {\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      coldsload: {\n        v: 2100,\n        d: 'Gas cost of the first read of storage from a given location (per transaction)'\n      },\n      coldaccountaccess: {\n        v: 2600,\n        d: 'Gas cost of the first read of a given address (per transaction)'\n      },\n      warmstorageread: {\n        v: 100,\n        d: \"Gas cost of reading storage locations which have already loaded 'cold'\"\n      },\n      sstoreCleanGasEIP2200: {\n        v: 2900,\n        d: 'Once per SSTORE operation from clean non-zero to something else'\n      },\n      sstoreNoopGasEIP2200: {\n        v: 100,\n        d: \"Once per SSTORE operation if the value doesn't change\"\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 100,\n        d: 'Once per SSTORE operation if a dirty value is changed'\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19900,\n        d: 'Once per SSTORE operation for resetting to the original zero value'\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4900,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value'\n      },\n      call: {\n        v: 0,\n        d: 'Base fee of the CALL opcode'\n      },\n      callcode: {\n        v: 0,\n        d: 'Base fee of the CALLCODE opcode'\n      },\n      delegatecall: {\n        v: 0,\n        d: 'Base fee of the DELEGATECALL opcode'\n      },\n      staticcall: {\n        v: 0,\n        d: 'Base fee of the STATICCALL opcode'\n      },\n      balance: {\n        v: 0,\n        d: 'Base fee of the BALANCE opcode'\n      },\n      extcodesize: {\n        v: 0,\n        d: 'Base fee of the EXTCODESIZE opcode'\n      },\n      extcodecopy: {\n        v: 0,\n        d: 'Base fee of the EXTCODECOPY opcode'\n      },\n      extcodehash: {\n        v: 0,\n        d: 'Base fee of the EXTCODEHASH opcode'\n      },\n      sload: {\n        v: 0,\n        d: 'Base fee of the SLOAD opcode'\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode'\n      }\n    }\n  },\n  2930: {\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [2718, 2929],\n    gasPrices: {\n      accessListStorageKeyCost: {\n        v: 1900,\n        d: 'Gas cost per storage key in an Access List transaction'\n      },\n      accessListAddressCost: {\n        v: 2400,\n        d: 'Gas cost per storage key in an Access List transaction'\n      }\n    }\n  },\n  3074: {\n    comment: 'AUTH and AUTHCALL opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-3074',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      auth: {\n        v: 3100,\n        d: 'Gas cost of the AUTH opcode'\n      },\n      authcall: {\n        v: 0,\n        d: 'Gas cost of the AUTHCALL opcode'\n      },\n      authcallValueTransfer: {\n        v: 6700,\n        d: 'Paid for CALL when the value transfer is non-zero'\n      }\n    }\n  },\n  3198: {\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      basefee: {\n        v: 2,\n        d: 'Gas cost of the BASEFEE opcode'\n      }\n    }\n  },\n  3529: {\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2929],\n    gasConfig: {\n      maxRefundQuotient: {\n        v: 5,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)'\n      }\n    },\n    gasPrices: {\n      selfdestructRefund: {\n        v: 0,\n        d: 'Refunded following a selfdestruct operation'\n      },\n      sstoreClearRefundEIP2200: {\n        v: 4800,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot'\n      }\n    }\n  },\n  3540: {\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3541]\n  },\n  3541: {\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: []\n  },\n  3554: {\n    comment: 'Difficulty Bomb Delay to December 1st 2021',\n    url: 'https://eips.ethereum.org/EIPS/eip-3554',\n    status: Status.Final,\n    minimumHardfork: Hardfork.MuirGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 9500000,\n        d: 'the amount of blocks to delay the difficulty bomb with'\n      }\n    }\n  },\n  3607: {\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: []\n  },\n  3651: {\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [2929]\n  },\n  3670: {\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {}\n  },\n  3675: {\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: []\n  },\n  3855: {\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      push0: {\n        v: 2,\n        d: 'Base fee of the PUSH0 opcode'\n      }\n    }\n  },\n  3860: {\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: Status.Review,\n    minimumHardfork: Hardfork.SpuriousDragon,\n    requiredEIPs: [],\n    gasPrices: {\n      initCodeWordCost: {\n        v: 2,\n        d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract'\n      }\n    },\n    vm: {\n      maxInitCodeSize: {\n        v: 49152,\n        d: 'Maximum length of initialization code when creating a contract'\n      }\n    }\n  },\n  4345: {\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 10700000,\n        d: 'the amount of blocks to delay the difficulty bomb with'\n      }\n    }\n  },\n  4399: {\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      prevrandao: {\n        v: 2,\n        d: 'Base fee of the PREVRANDAO opcode (previously DIFFICULTY)'\n      }\n    }\n  },\n  4788: {\n    comment: 'Beacon block root in the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-4788',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Cancun,\n    requiredEIPs: [],\n    gasPrices: {},\n    vm: {\n      historicalRootsLength: {\n        v: 8191,\n        d: 'The modulo parameter of the beaconroot ring buffer in the beaconroot statefull precompile'\n      }\n    }\n  },\n  4844: {\n    comment: 'Shard Blob Transactions',\n    url: 'https://eips.ethereum.org/EIPS/eip-4844',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [1559, 2718, 2930, 4895],\n    gasConfig: {\n      blobGasPerBlob: {\n        v: 131072,\n        d: 'The base fee for blob gas per blob'\n      },\n      targetBlobGasPerBlock: {\n        v: 393216,\n        d: 'The target blob gas consumed per block'\n      },\n      maxblobGasPerBlock: {\n        v: 786432,\n        d: 'The max blob gas allowable per block'\n      },\n      blobGasPriceUpdateFraction: {\n        v: 3338477,\n        d: 'The denominator used in the exponential when calculating a blob gas price'\n      }\n    },\n    gasPrices: {\n      simpleGasPerBlob: {\n        v: 12000,\n        d: 'The basic gas fee for each blob'\n      },\n      minBlobGasPrice: {\n        v: 1,\n        d: 'The minimum fee per blob gas'\n      },\n      kzgPointEvaluationGasPrecompilePrice: {\n        v: 50000,\n        d: 'The fee associated with the point evaluation precompile'\n      },\n      blobhash: {\n        v: 3,\n        d: 'Base fee of the BLOBHASH opcode'\n      }\n    },\n    sharding: {\n      blobCommitmentVersionKzg: {\n        v: 1,\n        d: 'The number indicated a versioned hash is a KZG commitment'\n      },\n      fieldElementsPerBlob: {\n        v: 4096,\n        d: 'The number of field elements allowed per blob'\n      }\n    }\n  },\n  4895: {\n    comment: 'Beacon chain push withdrawals as operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-4895',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: []\n  },\n  5133: {\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.GrayGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 11400000,\n        d: 'the amount of blocks to delay the difficulty bomb with'\n      }\n    }\n  },\n  5656: {\n    comment: 'MCOPY - Memory copying instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-5656',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Shanghai,\n    requiredEIPs: [],\n    gasPrices: {\n      mcopy: {\n        v: 3,\n        d: 'Base fee of the MCOPY opcode'\n      }\n    }\n  },\n  6780: {\n    comment: 'SELFDESTRUCT only in same transaction',\n    url: 'https://eips.ethereum.org/EIPS/eip-6780',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: []\n  },\n  6800: {\n    comment: 'Ethereum state using a unified verkle tree (experimental)',\n    url: 'https://github.com/ethereum/EIPs/pull/6800',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n      tx: {\n        v: 34300,\n        d: 'Per transaction. NOTE: Not payable on data of calls between transactions'\n      }\n    },\n    vm: {},\n    pow: {}\n  },\n  7516: {\n    comment: 'BLOBBASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-7516',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [4844],\n    gasPrices: {\n      blobbasefee: {\n        v: 2,\n        d: 'Gas cost of the BLOBBASEFEE opcode'\n      }\n    }\n  }\n};","map":{"version":3,"names":["Hardfork","Status","EIPs","comment","url","status","Review","minimumHardfork","Chainstart","requiredEIPs","gasPrices","tstore","v","d","tload","Final","Berlin","gasConfig","baseFeeMaxChangeDenominator","elasticityMultiplier","initialBaseFee","Draft","Istanbul","beginsub","returnsub","jumpsub","Byzantium","modexpGquaddivisor","coldsload","coldaccountaccess","warmstorageread","sstoreCleanGasEIP2200","sstoreNoopGasEIP2200","sstoreDirtyGasEIP2200","sstoreInitRefundEIP2200","sstoreCleanRefundEIP2200","call","callcode","delegatecall","staticcall","balance","extcodesize","extcodecopy","extcodehash","sload","sstore","accessListStorageKeyCost","accessListAddressCost","London","auth","authcall","authcallValueTransfer","basefee","maxRefundQuotient","selfdestructRefund","sstoreClearRefundEIP2200","MuirGlacier","pow","difficultyBombDelay","vm","push0","SpuriousDragon","initCodeWordCost","maxInitCodeSize","prevrandao","Cancun","historicalRootsLength","Paris","blobGasPerBlob","targetBlobGasPerBlock","maxblobGasPerBlock","blobGasPriceUpdateFraction","simpleGasPerBlob","minBlobGasPrice","kzgPointEvaluationGasPrecompilePrice","blobhash","sharding","blobCommitmentVersionKzg","fieldElementsPerBlob","GrayGlacier","Shanghai","mcopy","tx","blobbasefee"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@nomicfoundation\\ethereumjs-common\\src\\eips.ts"],"sourcesContent":["import { Hardfork } from './enums.js'\n\nimport type { EIPConfig } from './types.js'\n\ntype EIPsDict = {\n  [key: string]: EIPConfig\n}\n\nenum Status {\n  Draft = 'draft',\n  Review = 'review',\n  Final = 'final',\n}\n\nexport const EIPs: EIPsDict = {\n  1153: {\n    comment: 'Transient storage opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      tstore: {\n        v: 100,\n        d: 'Base fee of the TSTORE opcode',\n      },\n      tload: {\n        v: 100,\n        d: 'Base fee of the TLOAD opcode',\n      },\n    },\n  },\n  1559: {\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2930],\n    gasConfig: {\n      baseFeeMaxChangeDenominator: {\n        v: 8,\n        d: 'Maximum base fee change denominator',\n      },\n      elasticityMultiplier: {\n        v: 2,\n        d: 'Maximum block gas target elasticity',\n      },\n      initialBaseFee: {\n        v: 1000000000,\n        d: 'Initial base fee on first EIP1559 block',\n      },\n    },\n  },\n  2315: {\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [],\n    gasPrices: {\n      beginsub: {\n        v: 2,\n        d: 'Base fee of the BEGINSUB opcode',\n      },\n      returnsub: {\n        v: 5,\n        d: 'Base fee of the RETURNSUB opcode',\n      },\n      jumpsub: {\n        v: 10,\n        d: 'Base fee of the JUMPSUB opcode',\n      },\n    },\n  },\n  2565: {\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Byzantium,\n    requiredEIPs: [],\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 3,\n        d: 'Gquaddivisor from modexp precompile for gas calculation',\n      },\n    },\n  },\n  2718: {\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  2929: {\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      coldsload: {\n        v: 2100,\n        d: 'Gas cost of the first read of storage from a given location (per transaction)',\n      },\n      coldaccountaccess: {\n        v: 2600,\n        d: 'Gas cost of the first read of a given address (per transaction)',\n      },\n      warmstorageread: {\n        v: 100,\n        d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n      },\n      sstoreCleanGasEIP2200: {\n        v: 2900,\n        d: 'Once per SSTORE operation from clean non-zero to something else',\n      },\n      sstoreNoopGasEIP2200: {\n        v: 100,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 100,\n        d: 'Once per SSTORE operation if a dirty value is changed',\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19900,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4900,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      call: {\n        v: 0,\n        d: 'Base fee of the CALL opcode',\n      },\n      callcode: {\n        v: 0,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      delegatecall: {\n        v: 0,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n      staticcall: {\n        v: 0,\n        d: 'Base fee of the STATICCALL opcode',\n      },\n      balance: {\n        v: 0,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      extcodesize: {\n        v: 0,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 0,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      extcodehash: {\n        v: 0,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      sload: {\n        v: 0,\n        d: 'Base fee of the SLOAD opcode',\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode',\n      },\n    },\n  },\n  2930: {\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [2718, 2929],\n    gasPrices: {\n      accessListStorageKeyCost: {\n        v: 1900,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n      accessListAddressCost: {\n        v: 2400,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n    },\n  },\n  3074: {\n    comment: 'AUTH and AUTHCALL opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-3074',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      auth: {\n        v: 3100,\n        d: 'Gas cost of the AUTH opcode',\n      },\n      authcall: {\n        v: 0,\n        d: 'Gas cost of the AUTHCALL opcode',\n      },\n      authcallValueTransfer: {\n        v: 6700,\n        d: 'Paid for CALL when the value transfer is non-zero',\n      },\n    },\n  },\n  3198: {\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      basefee: {\n        v: 2,\n        d: 'Gas cost of the BASEFEE opcode',\n      },\n    },\n  },\n  3529: {\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2929],\n    gasConfig: {\n      maxRefundQuotient: {\n        v: 5,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n      },\n    },\n    gasPrices: {\n      selfdestructRefund: {\n        v: 0,\n        d: 'Refunded following a selfdestruct operation',\n      },\n      sstoreClearRefundEIP2200: {\n        v: 4800,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n    },\n  },\n  3540: {\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3541],\n  },\n  3541: {\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [],\n  },\n  3554: {\n    comment: 'Difficulty Bomb Delay to December 1st 2021',\n    url: 'https://eips.ethereum.org/EIPS/eip-3554',\n    status: Status.Final,\n    minimumHardfork: Hardfork.MuirGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 9500000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  3607: {\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  3651: {\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [2929],\n  },\n  3670: {\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n  },\n  3675: {\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  3855: {\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      push0: {\n        v: 2,\n        d: 'Base fee of the PUSH0 opcode',\n      },\n    },\n  },\n  3860: {\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: Status.Review,\n    minimumHardfork: Hardfork.SpuriousDragon,\n    requiredEIPs: [],\n    gasPrices: {\n      initCodeWordCost: {\n        v: 2,\n        d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n      },\n    },\n    vm: {\n      maxInitCodeSize: {\n        v: 49152,\n        d: 'Maximum length of initialization code when creating a contract',\n      },\n    },\n  },\n  4345: {\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 10700000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  4399: {\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      prevrandao: {\n        v: 2,\n        d: 'Base fee of the PREVRANDAO opcode (previously DIFFICULTY)',\n      },\n    },\n  },\n  4788: {\n    comment: 'Beacon block root in the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-4788',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Cancun,\n    requiredEIPs: [],\n    gasPrices: {},\n    vm: {\n      historicalRootsLength: {\n        v: 8191,\n        d: 'The modulo parameter of the beaconroot ring buffer in the beaconroot statefull precompile',\n      },\n    },\n  },\n  4844: {\n    comment: 'Shard Blob Transactions',\n    url: 'https://eips.ethereum.org/EIPS/eip-4844',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [1559, 2718, 2930, 4895],\n    gasConfig: {\n      blobGasPerBlob: {\n        v: 131072,\n        d: 'The base fee for blob gas per blob',\n      },\n      targetBlobGasPerBlock: {\n        v: 393216,\n        d: 'The target blob gas consumed per block',\n      },\n      maxblobGasPerBlock: {\n        v: 786432,\n        d: 'The max blob gas allowable per block',\n      },\n      blobGasPriceUpdateFraction: {\n        v: 3338477,\n        d: 'The denominator used in the exponential when calculating a blob gas price',\n      },\n    },\n    gasPrices: {\n      simpleGasPerBlob: {\n        v: 12000,\n        d: 'The basic gas fee for each blob',\n      },\n      minBlobGasPrice: {\n        v: 1,\n        d: 'The minimum fee per blob gas',\n      },\n      kzgPointEvaluationGasPrecompilePrice: {\n        v: 50000,\n        d: 'The fee associated with the point evaluation precompile',\n      },\n      blobhash: {\n        v: 3,\n        d: 'Base fee of the BLOBHASH opcode',\n      },\n    },\n    sharding: {\n      blobCommitmentVersionKzg: {\n        v: 1,\n        d: 'The number indicated a versioned hash is a KZG commitment',\n      },\n      fieldElementsPerBlob: {\n        v: 4096,\n        d: 'The number of field elements allowed per blob',\n      },\n    },\n  },\n  4895: {\n    comment: 'Beacon chain push withdrawals as operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-4895',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [],\n  },\n  5133: {\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.GrayGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 11400000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  5656: {\n    comment: 'MCOPY - Memory copying instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-5656',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Shanghai,\n    requiredEIPs: [],\n    gasPrices: {\n      mcopy: {\n        v: 3,\n        d: 'Base fee of the MCOPY opcode',\n      },\n    },\n  },\n  6780: {\n    comment: 'SELFDESTRUCT only in same transaction',\n    url: 'https://eips.ethereum.org/EIPS/eip-6780',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  6800: {\n    comment: 'Ethereum state using a unified verkle tree (experimental)',\n    url: 'https://github.com/ethereum/EIPs/pull/6800',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasConfig: {},\n    gasPrices: {\n      tx: {\n        v: 34300,\n        d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n      },\n    },\n    vm: {},\n    pow: {},\n  },\n  7516: {\n    comment: 'BLOBBASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-7516',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [4844],\n    gasPrices: {\n      blobbasefee: {\n        v: 2,\n        d: 'Gas cost of the BLOBBASEFEE opcode',\n      },\n    },\n  },\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}