{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\nvar fromString = require('uint8arrays/from-string');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield fromString.fromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nmodule.exports = validateChunks;","map":{"version":3,"names":["errCode","require","fromString","_interopDefaultLegacy","e","errCode__default","validateChunks","source","content","length","undefined","Error","String","toString","Array","isArray","Uint8Array","from","module","exports"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/validate-chunks.js"],"sourcesContent":["'use strict';\n\nvar errCode = require('err-code');\nvar fromString = require('uint8arrays/from-string');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield fromString.fromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\n\nmodule.exports = validateChunks;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACjC,IAAIC,UAAU,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAEnD,SAASE,qBAAqBA,CAAEC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,SAAS,IAAIA,CAAC,GAAGA,CAAC,GAAG;IAAE,SAAS,EAAEA;EAAE,CAAC;AAAE;AAEjH,IAAIC,gBAAgB,GAAG,aAAaF,qBAAqB,CAACH,OAAO,CAAC;AAElE,gBAAgBM,cAAcA,CAACC,MAAM,EAAE;EACrC,WAAW,MAAMC,OAAO,IAAID,MAAM,EAAE;IAClC,IAAIC,OAAO,CAACC,MAAM,KAAKC,SAAS,EAAE;MAChC,MAAML,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAIM,KAAK,CAAC,qBAAqB,CAAC,EAAE,qBAAqB,CAAC;IAC5F;IACA,IAAI,OAAOH,OAAO,KAAK,QAAQ,IAAIA,OAAO,YAAYI,MAAM,EAAE;MAC5D,MAAMV,UAAU,CAACA,UAAU,CAACM,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC;IACjD,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACP,OAAO,CAAC,EAAE;MACjC,MAAMQ,UAAU,CAACC,IAAI,CAACT,OAAO,CAAC;IAChC,CAAC,MAAM,IAAIA,OAAO,YAAYQ,UAAU,EAAE;MACxC,MAAMR,OAAO;IACf,CAAC,MAAM;MACL,MAAMH,gBAAgB,CAAC,SAAS,CAAC,CAAC,IAAIM,KAAK,CAAC,qBAAqB,CAAC,EAAE,qBAAqB,CAAC;IAC5F;EACF;AACF;AAEAO,MAAM,CAACC,OAAO,GAAGb,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}