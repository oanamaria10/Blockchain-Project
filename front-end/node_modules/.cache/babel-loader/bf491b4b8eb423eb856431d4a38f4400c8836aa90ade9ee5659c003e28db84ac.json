{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst HelpPrinter_1 = require(\"../internal/cli/HelpPrinter\");\nconst constants_1 = require(\"../internal/constants\");\nconst config_env_1 = require(\"../internal/core/config/config-env\");\nconst errors_1 = require(\"../internal/core/errors\");\nconst errors_list_1 = require(\"../internal/core/errors-list\");\nconst hardhat_params_1 = require(\"../internal/core/params/hardhat-params\");\nconst task_names_1 = require(\"./task-names\");\n(0, config_env_1.task)(task_names_1.TASK_HELP, \"Prints this message\").addOptionalPositionalParam(\"scopeOrTask\", \"An optional scope or task to print more info about\").addOptionalPositionalParam(\"task\", \"An optional task to print more info about\").setAction(async ({\n  scopeOrTask,\n  task: taskName\n}, {\n  tasks,\n  scopes,\n  version\n}) => {\n  const helpPrinter = new HelpPrinter_1.HelpPrinter(constants_1.HARDHAT_NAME, constants_1.HARDHAT_EXECUTABLE_NAME, version, hardhat_params_1.HARDHAT_PARAM_DEFINITIONS, tasks, scopes);\n  if (scopeOrTask === undefined) {\n    // no params, print global help\n    helpPrinter.printGlobalHelp();\n    return;\n  }\n  const taskDefinition = tasks[scopeOrTask];\n  if (taskDefinition !== undefined) {\n    // the first param is a valid task\n    helpPrinter.printTaskHelp(tasks[scopeOrTask]);\n    return;\n  }\n  const scopeDefinition = scopes[scopeOrTask];\n  if (scopeDefinition === undefined) {\n    // if the first parameter is neither a task nor a scope,\n    // we don't know what the user was trying to print,\n    // so we assume that it's an unrecognized task\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.ARGUMENTS.UNRECOGNIZED_TASK, {\n      task: scopeOrTask\n    });\n  }\n  if (taskName === undefined) {\n    // if the second parameter is not present, print scope help\n    helpPrinter.printScopeHelp(scopeDefinition);\n    return;\n  }\n  const scopedTaskDefinition = scopeDefinition.tasks[taskName];\n  if (scopedTaskDefinition === undefined) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.ARGUMENTS.UNRECOGNIZED_SCOPED_TASK, {\n      scope: scopeOrTask,\n      task: taskName\n    });\n  }\n  helpPrinter.printTaskHelp(scopedTaskDefinition);\n});","map":{"version":3,"names":["HelpPrinter_1","require","constants_1","config_env_1","errors_1","errors_list_1","hardhat_params_1","task_names_1","task","TASK_HELP","addOptionalPositionalParam","setAction","scopeOrTask","taskName","tasks","scopes","version","helpPrinter","HelpPrinter","HARDHAT_NAME","HARDHAT_EXECUTABLE_NAME","HARDHAT_PARAM_DEFINITIONS","undefined","printGlobalHelp","taskDefinition","printTaskHelp","scopeDefinition","HardhatError","ERRORS","ARGUMENTS","UNRECOGNIZED_TASK","printScopeHelp","scopedTaskDefinition","UNRECOGNIZED_SCOPED_TASK","scope"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\builtin-tasks\\help.ts"],"sourcesContent":["import { HelpPrinter } from \"../internal/cli/HelpPrinter\";\nimport { HARDHAT_EXECUTABLE_NAME, HARDHAT_NAME } from \"../internal/constants\";\nimport { task } from \"../internal/core/config/config-env\";\nimport { HardhatError } from \"../internal/core/errors\";\nimport { ERRORS } from \"../internal/core/errors-list\";\nimport { HARDHAT_PARAM_DEFINITIONS } from \"../internal/core/params/hardhat-params\";\n\nimport { TASK_HELP } from \"./task-names\";\n\ntask(TASK_HELP, \"Prints this message\")\n  .addOptionalPositionalParam(\n    \"scopeOrTask\",\n    \"An optional scope or task to print more info about\"\n  )\n  .addOptionalPositionalParam(\n    \"task\",\n    \"An optional task to print more info about\"\n  )\n  .setAction(\n    async (\n      { scopeOrTask, task: taskName }: { scopeOrTask?: string; task?: string },\n      { tasks, scopes, version }\n    ) => {\n      const helpPrinter = new HelpPrinter(\n        HARDHAT_NAME,\n        HARDHAT_EXECUTABLE_NAME,\n        version,\n        HARDHAT_PARAM_DEFINITIONS,\n        tasks,\n        scopes\n      );\n\n      if (scopeOrTask === undefined) {\n        // no params, print global help\n        helpPrinter.printGlobalHelp();\n        return;\n      }\n\n      const taskDefinition = tasks[scopeOrTask];\n      if (taskDefinition !== undefined) {\n        // the first param is a valid task\n        helpPrinter.printTaskHelp(tasks[scopeOrTask]);\n        return;\n      }\n\n      const scopeDefinition = scopes[scopeOrTask];\n      if (scopeDefinition === undefined) {\n        // if the first parameter is neither a task nor a scope,\n        // we don't know what the user was trying to print,\n        // so we assume that it's an unrecognized task\n        throw new HardhatError(ERRORS.ARGUMENTS.UNRECOGNIZED_TASK, {\n          task: scopeOrTask,\n        });\n      }\n\n      if (taskName === undefined) {\n        // if the second parameter is not present, print scope help\n        helpPrinter.printScopeHelp(scopeDefinition);\n        return;\n      }\n\n      const scopedTaskDefinition = scopeDefinition.tasks[taskName];\n      if (scopedTaskDefinition === undefined) {\n        throw new HardhatError(ERRORS.ARGUMENTS.UNRECOGNIZED_SCOPED_TASK, {\n          scope: scopeOrTask,\n          task: taskName,\n        });\n      }\n\n      helpPrinter.printTaskHelp(scopedTaskDefinition);\n    }\n  );\n"],"mappings":";;;;;AAAA,MAAAA,aAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,QAAA,GAAAH,OAAA;AACA,MAAAI,aAAA,GAAAJ,OAAA;AACA,MAAAK,gBAAA,GAAAL,OAAA;AAEA,MAAAM,YAAA,GAAAN,OAAA;AAEA,IAAAE,YAAA,CAAAK,IAAI,EAACD,YAAA,CAAAE,SAAS,EAAE,qBAAqB,CAAC,CACnCC,0BAA0B,CACzB,aAAa,EACb,oDAAoD,CACrD,CACAA,0BAA0B,CACzB,MAAM,EACN,2CAA2C,CAC5C,CACAC,SAAS,CACR,OACE;EAAEC,WAAW;EAAEJ,IAAI,EAAEK;AAAQ,CAA2C,EACxE;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAO,CAAE,KACxB;EACF,MAAMC,WAAW,GAAG,IAAIjB,aAAA,CAAAkB,WAAW,CACjChB,WAAA,CAAAiB,YAAY,EACZjB,WAAA,CAAAkB,uBAAuB,EACvBJ,OAAO,EACPV,gBAAA,CAAAe,yBAAyB,EACzBP,KAAK,EACLC,MAAM,CACP;EAED,IAAIH,WAAW,KAAKU,SAAS,EAAE;IAC7B;IACAL,WAAW,CAACM,eAAe,EAAE;IAC7B;;EAGF,MAAMC,cAAc,GAAGV,KAAK,CAACF,WAAW,CAAC;EACzC,IAAIY,cAAc,KAAKF,SAAS,EAAE;IAChC;IACAL,WAAW,CAACQ,aAAa,CAACX,KAAK,CAACF,WAAW,CAAC,CAAC;IAC7C;;EAGF,MAAMc,eAAe,GAAGX,MAAM,CAACH,WAAW,CAAC;EAC3C,IAAIc,eAAe,KAAKJ,SAAS,EAAE;IACjC;IACA;IACA;IACA,MAAM,IAAIlB,QAAA,CAAAuB,YAAY,CAACtB,aAAA,CAAAuB,MAAM,CAACC,SAAS,CAACC,iBAAiB,EAAE;MACzDtB,IAAI,EAAEI;KACP,CAAC;;EAGJ,IAAIC,QAAQ,KAAKS,SAAS,EAAE;IAC1B;IACAL,WAAW,CAACc,cAAc,CAACL,eAAe,CAAC;IAC3C;;EAGF,MAAMM,oBAAoB,GAAGN,eAAe,CAACZ,KAAK,CAACD,QAAQ,CAAC;EAC5D,IAAImB,oBAAoB,KAAKV,SAAS,EAAE;IACtC,MAAM,IAAIlB,QAAA,CAAAuB,YAAY,CAACtB,aAAA,CAAAuB,MAAM,CAACC,SAAS,CAACI,wBAAwB,EAAE;MAChEC,KAAK,EAAEtB,WAAW;MAClBJ,IAAI,EAAEK;KACP,CAAC;;EAGJI,WAAW,CAACQ,aAAa,CAACO,oBAAoB,CAAC;AACjD,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}