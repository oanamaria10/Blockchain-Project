{"ast":null,"code":"import * as API from './types.js';\nimport * as Provider from '@web3-storage/capabilities/provider';\nexport const {\n  Provider: ProviderDID,\n  AccountDID\n} = Provider;\n/**\n * Provisions specified `space` with the specified `account`. It is expected\n * that delegation from the account authorizing agent is either stored in the\n * agent proofs or provided explicitly.\n *\n * @template {Record<string, any>} [S=API.Service]\n * @param {API.Agent<S>} agent\n * @param {object} input\n * @param {API.AccountDID} input.account - Account provisioning the space.\n * @param {API.SpaceDID} input.consumer - Space been provisioned.\n * @param {API.ProviderDID} [input.provider] - Provider been provisioned.\n * @param {API.Delegation[]} [input.proofs] - Delegation from the account\n * authorizing agent to call `provider/add` capability.\n */\nexport const add = async (agent, {\n  account,\n  consumer,\n  provider = ( /** @type {API.ProviderDID} */agent.connection.id.did()),\n  proofs\n}) => {\n  if (!ProviderDID.is(provider)) {\n    throw new Error(`Unable to determine provider from agent.connection.id did ${provider}. expected a did:web:`);\n  }\n  const {\n    out\n  } = await agent.invokeAndExecute(Provider.add, {\n    with: account,\n    nb: {\n      provider,\n      consumer\n    },\n    proofs\n  });\n  return out;\n};","map":{"version":3,"names":["API","Provider","ProviderDID","AccountDID","add","agent","account","consumer","provider","connection","id","did","proofs","is","Error","out","invokeAndExecute","with","nb"],"sources":["../../src/provider.js"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,YAAY;AACjC,OAAO,KAAKC,QAAQ,MAAM,qCAAqC;AAE/D,OAAO,MAAM;EAAEA,QAAQ,EAAEC,WAAW;EAAEC;AAAU,CAAE,GAAGF,QAAQ;AAE7D;;;;;;;;;;;;;;AAcA,OAAO,MAAMG,GAAG,GAAG,MAAAA,CACjBC,KAAK,EACL;EACEC,OAAO;EACPC,QAAQ;EACRC,QAAQ,KAAG,8BAAgCH,KAAK,CAACI,UAAU,CAACC,EAAE,CAACC,GAAG,EAAE,CAAC;EACrEC;AAAM,CACP,KACC;EACF,IAAI,CAACV,WAAW,CAACW,EAAE,CAACL,QAAQ,CAAC,EAAE;IAC7B,MAAM,IAAIM,KAAK,CACb,6DAA6DN,QAAQ,uBAAuB,CAC7F;;EAGH,MAAM;IAAEO;EAAG,CAAE,GAAG,MAAMV,KAAK,CAACW,gBAAgB,CAACf,QAAQ,CAACG,GAAG,EAAE;IACzDa,IAAI,EAAEX,OAAO;IACbY,EAAE,EAAE;MACFV,QAAQ;MACRD;KACD;IACDK;GACD,CAAC;EAEF,OAAOG,GAAG;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}