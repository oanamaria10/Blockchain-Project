{"ast":null,"code":"import express from 'express';\nimport multer from 'multer';\nimport fs from 'fs';\nimport axios from 'axios';\nimport FormData from 'form-data';\nconst app = express();\nconst upload = multer({\n  dest: 'uploads/'\n}); // Save files to 'uploads/' folder\n\n// Replace with your Web3.Storage API token\nconst WEB3_STORAGE_API_KEY = 'z6MkkipjA1gWSEpAerXN91c1nwqjfeeJ5aetK8hpfYVwyKgy';\napp.post('/upload', upload.single('file'), async (req, res) => {\n  if (!req.file) {\n    return res.status(400).json({\n      error: 'No file uploaded.'\n    });\n  }\n  try {\n    // Create a form data object for the file\n    const form = new FormData();\n    form.append('file', fs.createReadStream(req.file.path));\n\n    // Send the file to the new Web3.Storage API\n    const response = await axios.post('https://api.web3.storage/upload', form, {\n      headers: {\n        ...form.getHeaders(),\n        Authorization: `Bearer ${WEB3_STORAGE_API_KEY}`\n      }\n    });\n\n    // Respond with the CID and URL\n    res.json({\n      cid: response.data.cid,\n      url: `https://${response.data.cid}.ipfs.w3s.link`\n    });\n  } catch (err) {\n    console.error('Error uploading to Web3.Storage:', err);\n    res.status(500).json({\n      error: 'Failed to upload file.',\n      details: err.message\n    });\n  }\n});\napp.listen(5000, () => {\n  console.log('Server running on http://localhost:5000');\n});","map":{"version":3,"names":["express","multer","fs","axios","FormData","app","upload","dest","WEB3_STORAGE_API_KEY","post","single","req","res","file","status","json","error","form","append","createReadStream","path","response","headers","getHeaders","Authorization","cid","data","url","err","console","details","message","listen","log"],"sources":["C:/FACULTATE/Proiect/front-end/src/uploadFile.js"],"sourcesContent":["import express from 'express';\r\nimport multer from 'multer';\r\nimport fs from 'fs';\r\nimport axios from 'axios';\r\nimport FormData from 'form-data';\r\n\r\nconst app = express();\r\nconst upload = multer({ dest: 'uploads/' }); // Save files to 'uploads/' folder\r\n\r\n// Replace with your Web3.Storage API token\r\nconst WEB3_STORAGE_API_KEY = 'z6MkkipjA1gWSEpAerXN91c1nwqjfeeJ5aetK8hpfYVwyKgy';\r\n\r\napp.post('/upload', upload.single('file'), async (req, res) => {\r\n  if (!req.file) {\r\n    return res.status(400).json({ error: 'No file uploaded.' });\r\n  }\r\n\r\n  try {\r\n    // Create a form data object for the file\r\n    const form = new FormData();\r\n    form.append('file', fs.createReadStream(req.file.path));\r\n\r\n    // Send the file to the new Web3.Storage API\r\n    const response = await axios.post('https://api.web3.storage/upload', form, {\r\n      headers: {\r\n        ...form.getHeaders(),\r\n        Authorization: `Bearer ${WEB3_STORAGE_API_KEY}`,\r\n      },\r\n    });\r\n\r\n    // Respond with the CID and URL\r\n    res.json({\r\n      cid: response.data.cid,\r\n      url: `https://${response.data.cid}.ipfs.w3s.link`,\r\n    });\r\n  } catch (err) {\r\n    console.error('Error uploading to Web3.Storage:', err);\r\n    res.status(500).json({ error: 'Failed to upload file.', details: err.message });\r\n  }\r\n});\r\n\r\napp.listen(5000, () => {\r\n  console.log('Server running on http://localhost:5000');\r\n});\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,MAAMM,MAAM,GAAGL,MAAM,CAAC;EAAEM,IAAI,EAAE;AAAW,CAAC,CAAC,CAAC,CAAC;;AAE7C;AACA,MAAMC,oBAAoB,GAAG,kDAAkD;AAE/EH,GAAG,CAACI,IAAI,CAAC,SAAS,EAAEH,MAAM,CAACI,MAAM,CAAC,MAAM,CAAC,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC7D,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE;IACb,OAAOD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAoB,CAAC,CAAC;EAC7D;EAEA,IAAI;IACF;IACA,MAAMC,IAAI,GAAG,IAAIb,QAAQ,CAAC,CAAC;IAC3Ba,IAAI,CAACC,MAAM,CAAC,MAAM,EAAEhB,EAAE,CAACiB,gBAAgB,CAACR,GAAG,CAACE,IAAI,CAACO,IAAI,CAAC,CAAC;;IAEvD;IACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACM,IAAI,CAAC,iCAAiC,EAAEQ,IAAI,EAAE;MACzEK,OAAO,EAAE;QACP,GAAGL,IAAI,CAACM,UAAU,CAAC,CAAC;QACpBC,aAAa,EAAG,UAAShB,oBAAqB;MAChD;IACF,CAAC,CAAC;;IAEF;IACAI,GAAG,CAACG,IAAI,CAAC;MACPU,GAAG,EAAEJ,QAAQ,CAACK,IAAI,CAACD,GAAG;MACtBE,GAAG,EAAG,WAAUN,QAAQ,CAACK,IAAI,CAACD,GAAI;IACpC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACb,KAAK,CAAC,kCAAkC,EAAEY,GAAG,CAAC;IACtDhB,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE,wBAAwB;MAAEc,OAAO,EAAEF,GAAG,CAACG;IAAQ,CAAC,CAAC;EACjF;AACF,CAAC,CAAC;AAEF1B,GAAG,CAAC2B,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBH,OAAO,CAACI,GAAG,CAAC,yCAAyC,CAAC;AACxD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}