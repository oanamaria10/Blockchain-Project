{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Desktop\\\\Blockchain\\\\Proiect\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport tokenAbi from \"./RealEstateToken.json\";\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\nimport Login from './Login'; // Import the Login component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealEstateTokenInteraction() {\n  _s();\n  const [tokenId, setTokenId] = useState('');\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [pay, setPay] = useState('');\n  const [tokenId1, setTokenId1] = useState('');\n  const [location, setLocation] = useState('');\n  const [price, setPrice] = useState('');\n  const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\n  const [signerIndex, setSignerIndex] = useState(null); // Use more descriptive state variable name\n\n  const [tokenContract, setTokenContract] = useState(null);\n  const [marketplaceContract, setMarketplaceContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login status\n\n  useEffect(() => {\n    async function fetchAccountData() {\n      try {\n        const accounts = await provider.listAccounts();\n        setAccountData(accounts);\n      } catch (error) {\n        console.error('Error fetching account data:', error);\n      }\n    }\n    fetchAccountData();\n  }, [provider]);\n  useEffect(() => {\n    if (signerIndex !== null) {\n      const signer = provider.getSigner(signerIndex);\n      if (!tokenContract) {\n        const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n        const token = new ethers.Contract(tokenAddress, tokenAbi.abi, signer);\n        setTokenContract(token);\n      }\n      if (!marketplaceContract) {\n        const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n        const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi.abi, signer);\n        setMarketplaceContract(marketplace);\n      }\n    }\n  }, [signerIndex, provider, tokenContract, marketplaceContract]);\n  async function issueToken() {\n    try {\n      if (tokenContract) {\n        const issueTx = await tokenContract.issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\n        await issueTx.wait();\n        console.log(\"Token Issued Successfully!\");\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  async function handleLogin(address) {\n    try {\n      setIsLoggedIn(true);\n      setAccountAddress(address);\n      const balance = await provider.getBalance(address);\n      setAccountBalance(ethers.utils.formatEther(balance));\n      const index = accountData.indexOf(address);\n      setSignerIndex(index);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  }\n  async function buyToken() {\n    try {\n      if (marketplaceContract) {\n        const payValue = ethers.utils.parseEther(pay);\n        const buyTx = await marketplaceContract.buyToken(parseInt(tokenId1), {\n          value: payValue\n        });\n        await buyTx.wait();\n        console.log(\"Token bought successfully!\");\n        const updatedBalance = await provider.getBalance(accountAddress);\n        setAccountBalance(ethers.utils.formatEther(updatedBalance));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real Estate Token Interaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connected Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", accountBalance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Request New Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        children: \"Issue Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId1,\n        onChange: e => setTokenId1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"How much will you pay:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pay,\n        onChange: e => setPay(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyToken,\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(RealEstateTokenInteraction, \"Vxs5P34eQCKTfqyRNOhRitXIhhk=\");\n_c = RealEstateTokenInteraction;\nexport default RealEstateTokenInteraction;\nvar _c;\n$RefreshReg$(_c, \"RealEstateTokenInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","tokenAbi","marketplaceAbi","Login","jsxDEV","_jsxDEV","RealEstateTokenInteraction","_s","tokenId","setTokenId","accountAddress","setAccountAddress","accountBalance","setAccountBalance","pay","setPay","tokenId1","setTokenId1","location","setLocation","price","setPrice","provider","providers","JsonRpcProvider","signerIndex","setSignerIndex","tokenContract","setTokenContract","marketplaceContract","setMarketplaceContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","fetchAccountData","accounts","listAccounts","error","console","signer","getSigner","tokenAddress","token","Contract","abi","marketplaceAddress","marketplace","issueToken","issueTx","parseInt","utils","parseEther","wait","log","handleLogin","address","balance","getBalance","formatEther","index","indexOf","buyToken","payValue","buyTx","value","updatedBalance","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport tokenAbi from \"./RealEstateToken.json\";\r\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\r\nimport Login from './Login'; // Import the Login component\r\nimport './App.css';\r\n\r\nfunction RealEstateTokenInteraction() {\r\n    const [tokenId, setTokenId] = useState('');\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [pay, setPay] = useState('');\r\n    const [tokenId1, setTokenId1] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\r\n    const [signerIndex, setSignerIndex] = useState(null); // Use more descriptive state variable name\r\n\r\n    const [tokenContract, setTokenContract] = useState(null);\r\n    const [marketplaceContract, setMarketplaceContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login status\r\n\r\n    useEffect(() => {\r\n        async function fetchAccountData() {\r\n            try {\r\n                const accounts = await provider.listAccounts();\r\n                setAccountData(accounts);\r\n            } catch (error) {\r\n                console.error('Error fetching account data:', error);\r\n            }\r\n        }\r\n\r\n        fetchAccountData();\r\n    }, [provider]);\r\n\r\n    useEffect(() => {\r\n        if (signerIndex !== null) {\r\n            const signer = provider.getSigner(signerIndex);\r\n\r\n            if (!tokenContract) {\r\n                const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n                const token = new ethers.Contract(tokenAddress, tokenAbi.abi, signer);\r\n                setTokenContract(token);\r\n            }\r\n\r\n            if (!marketplaceContract) {\r\n                const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n                const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi.abi, signer);\r\n                setMarketplaceContract(marketplace);\r\n            }\r\n        }\r\n    }, [signerIndex, provider, tokenContract, marketplaceContract]);\r\n\r\n    async function issueToken() {\r\n        try {\r\n            if (tokenContract) {\r\n                const issueTx = await tokenContract.issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\r\n                await issueTx.wait();\r\n                console.log(\"Token Issued Successfully!\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async function handleLogin(address) {\r\n        try {\r\n            setIsLoggedIn(true);\r\n            setAccountAddress(address);\r\n            const balance = await provider.getBalance(address);\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n            const index = accountData.indexOf(address);\r\n            setSignerIndex(index);\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    }\r\n\r\n    async function buyToken() {\r\n        try {\r\n            if (marketplaceContract) {\r\n                const payValue = ethers.utils.parseEther(pay);\r\n                const buyTx = await marketplaceContract.buyToken(parseInt(tokenId1), { value: payValue });\r\n                await buyTx.wait();\r\n                console.log(\"Token bought successfully!\");\r\n\r\n                const updatedBalance = await provider.getBalance(accountAddress);\r\n                setAccountBalance(ethers.utils.formatEther(updatedBalance));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn ? (\r\n                <Login accountData={accountData} onLogin={handleLogin} />\r\n            ) : (\r\n                <div>\r\n                    <h1>Real Estate Token Interaction</h1>\r\n\r\n                    <div>\r\n                        <h2>Connected Account Information</h2>\r\n                        <p>Address: {accountAddress}</p>\r\n                        <p>Balance: {accountBalance} ETH</p>\r\n                    </div>\r\n\r\n                    <h2>Request New Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId} onChange={(e) => setTokenId(e.target.value)} /><br />\r\n                    <label>Location:</label>\r\n                    <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} /><br />\r\n                    <label>Price (ETH):</label>\r\n                    <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} /><br />\r\n                    <button onClick={issueToken}>Issue Token</button>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Buy Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId1} onChange={(e) => setTokenId1(e.target.value)} /><br />\r\n                    <label>How much will you pay:</label>\r\n                    <input type=\"text\" value={pay} onChange={(e) => setPay(e.target.value)} /><br />\r\n                    <button onClick={buyToken}>Buy Token</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealEstateTokenInteraction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}