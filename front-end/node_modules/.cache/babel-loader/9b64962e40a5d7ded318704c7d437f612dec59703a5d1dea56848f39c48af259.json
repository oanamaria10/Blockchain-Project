{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar decoder = require('./decoder.js');\nclass CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(decoder.bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(decoder.asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {\n    version,\n    roots\n  } = await decoder$1.header();\n  const blocks = [];\n  for await (const block of decoder$1.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nconst __browser = true;\nexports.CarReader = CarReader;\nexports.__browser = __browser;","map":{"version":3,"names":["Object","defineProperty","exports","value","decoder","require","CarReader","constructor","version","roots","blocks","_version","_roots","_blocks","_keys","map","b","cid","toString","getRoots","has","key","indexOf","get","index","undefined","block","cids","fromBytes","bytes","Uint8Array","TypeError","decodeReaderComplete","bytesReader","fromIterable","asyncIterable","Symbol","asyncIterator","asyncIterableReader","reader","decoder$1","createDecoder","header","push","__browser"],"sources":["C:/FACULTATE/Proiect/node_modules/@ipld/car/cjs/lib/reader-browser.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar decoder = require('./decoder.js');\n\nclass CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(decoder.bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(decoder.asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder$1 = decoder.createDecoder(reader);\n  const {version, roots} = await decoder$1.header();\n  const blocks = [];\n  for await (const block of decoder$1.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nconst __browser = true;\n\nexports.CarReader = CarReader;\nexports.__browser = __browser;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AAErC,MAAMC,SAAS,CAAC;EACdC,WAAWA,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAClC,IAAI,CAACC,QAAQ,GAAGH,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGH,KAAK;IACnB,IAAI,CAACI,OAAO,GAAGH,MAAM;IACrB,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;EAChD;EACA,IAAIV,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACG,QAAQ;EACtB;EACA,MAAMQ,QAAQA,CAAA,EAAG;IACf,OAAO,IAAI,CAACP,MAAM;EACpB;EACA,MAAMQ,GAAGA,CAACC,GAAG,EAAE;IACb,OAAO,IAAI,CAACP,KAAK,CAACQ,OAAO,CAACD,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD;EACA,MAAMK,GAAGA,CAACF,GAAG,EAAE;IACb,MAAMG,KAAK,GAAG,IAAI,CAACV,KAAK,CAACQ,OAAO,CAACD,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC;IAChD,OAAOM,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAACX,OAAO,CAACW,KAAK,CAAC,GAAGC,SAAS;EACrD;EACA,OAAOf,MAAMA,CAAA,EAAG;IACd,KAAK,MAAMgB,KAAK,IAAI,IAAI,CAACb,OAAO,EAAE;MAChC,MAAMa,KAAK;IACb;EACF;EACA,OAAOC,IAAIA,CAAA,EAAG;IACZ,KAAK,MAAMD,KAAK,IAAI,IAAI,CAACb,OAAO,EAAE;MAChC,MAAMa,KAAK,CAACT,GAAG;IACjB;EACF;EACA,aAAaW,SAASA,CAACC,KAAK,EAAE;IAC5B,IAAI,EAAEA,KAAK,YAAYC,UAAU,CAAC,EAAE;MAClC,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;IAC1D;IACA,OAAOC,oBAAoB,CAAC5B,OAAO,CAAC6B,WAAW,CAACJ,KAAK,CAAC,CAAC;EACzD;EACA,aAAaK,YAAYA,CAACC,aAAa,EAAE;IACvC,IAAI,CAACA,aAAa,IAAI,EAAE,OAAOA,aAAa,CAACC,MAAM,CAACC,aAAa,CAAC,KAAK,UAAU,CAAC,EAAE;MAClF,MAAM,IAAIN,SAAS,CAAC,2CAA2C,CAAC;IAClE;IACA,OAAOC,oBAAoB,CAAC5B,OAAO,CAACkC,mBAAmB,CAACH,aAAa,CAAC,CAAC;EACzE;AACF;AACA,eAAeH,oBAAoBA,CAACO,MAAM,EAAE;EAC1C,MAAMC,SAAS,GAAGpC,OAAO,CAACqC,aAAa,CAACF,MAAM,CAAC;EAC/C,MAAM;IAAC/B,OAAO;IAAEC;EAAK,CAAC,GAAG,MAAM+B,SAAS,CAACE,MAAM,CAAC,CAAC;EACjD,MAAMhC,MAAM,GAAG,EAAE;EACjB,WAAW,MAAMgB,KAAK,IAAIc,SAAS,CAAC9B,MAAM,CAAC,CAAC,EAAE;IAC5CA,MAAM,CAACiC,IAAI,CAACjB,KAAK,CAAC;EACpB;EACA,OAAO,IAAIpB,SAAS,CAACE,OAAO,EAAEC,KAAK,EAAEC,MAAM,CAAC;AAC9C;AACA,MAAMkC,SAAS,GAAG,IAAI;AAEtB1C,OAAO,CAACI,SAAS,GAAGA,SAAS;AAC7BJ,OAAO,CAAC0C,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}