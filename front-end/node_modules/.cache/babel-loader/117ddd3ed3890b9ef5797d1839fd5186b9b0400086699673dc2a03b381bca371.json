{"ast":null,"code":"import * as ED25519 from '@ucanto/principal/ed25519';\nimport { delegate, Schema, UCAN, error, fail, DID } from '@ucanto/core';\nimport * as BIP39 from '@scure/bip39';\nimport { wordlist } from '@scure/bip39/wordlists/english';\nimport * as API from './types.js';\nimport * as Access from './access.js';\nimport * as Provider from './provider.js';\n/**\n * Data model for the (owned) space.\n *\n * @typedef {object} Model\n * @property {ED25519.EdSigner} signer\n * @property {string} name\n * @property {API.Agent} [agent]\n */\n/**\n * Generates a new space.\n *\n * @param {object} options\n * @param {string} options.name\n * @param {API.Agent} [options.agent]\n */\nexport const generate = async ({\n  name,\n  agent\n}) => {\n  const {\n    signer\n  } = await ED25519.generate();\n  return new OwnedSpace({\n    signer,\n    name,\n    agent\n  });\n};\n/**\n * Recovers space from the saved mnemonic.\n *\n * @param {string} mnemonic\n * @param {object} options\n * @param {string} options.name - Name to give to the recovered space.\n * @param {API.Agent} [options.agent]\n */\nexport const fromMnemonic = async (mnemonic, {\n  name,\n  agent\n}) => {\n  const secret = BIP39.mnemonicToEntropy(mnemonic, wordlist);\n  const signer = await ED25519.derive(secret);\n  return new OwnedSpace({\n    signer,\n    name,\n    agent\n  });\n};\n/**\n * Turns (owned) space into a BIP39 mnemonic that later can be used to recover\n * the space using `fromMnemonic` function.\n *\n * @param {object} space\n * @param {ED25519.EdSigner} space.signer\n */\nexport const toMnemonic = ({\n  signer\n}) => {\n  /** @type {Uint8Array} */\n  // @ts-expect-error - Field is defined but not in the interface\n  const secret = signer.secret;\n  return BIP39.entropyToMnemonic(secret, wordlist);\n};\n/**\n * Creates a (UCAN) delegation that gives full access to the space to the\n * specified `account`. At the moment we only allow `did:mailto` principal\n * to be used as an `account`.\n *\n * @param {Model} space\n * @param {API.AccountDID} account\n */\nexport const createRecovery = (space, account) => createAuthorization(space, {\n  audience: DID.parse(account),\n  access: Access.accountAccess,\n  expiration: Infinity\n});\n// Default authorization session is valid for 1 year\nexport const SESSION_LIFETIME = 60 * 60 * 24 * 365;\n/**\n * Creates (UCAN) delegation that gives specified `agent` an access to\n * specified ability (passed as `access.can` field) on this space.\n * Optionally, you can specify `access.expiration` field to set the\n * expiration time for the authorization. By default the authorization\n * is valid for 1 year and gives access to all capabilities on the space\n * that are needed to use the space.\n *\n * @param {Model} space\n * @param {object} options\n * @param {API.Principal} options.audience\n * @param {API.Access} [options.access]\n * @param {API.UTCUnixTimestamp} [options.expiration]\n */\nexport const createAuthorization = async ({\n  signer,\n  name\n}, {\n  audience,\n  access = Access.spaceAccess,\n  expiration = UCAN.now() + SESSION_LIFETIME\n}) => {\n  return await delegate({\n    issuer: signer,\n    audience: audience,\n    capabilities: toCapabilities({\n      [signer.did()]: access\n    }),\n    ...(expiration ? {\n      expiration\n    } : {}),\n    facts: [{\n      space: {\n        name\n      }\n    }]\n  });\n};\n/**\n * @param {Record<API.Resource, API.Access>} allow\n * @returns {API.Capabilities}\n */\nconst toCapabilities = allow => {\n  const capabilities = [];\n  for (const [subject, access] of Object.entries(allow)) {\n    const entries = /** @type {[API.Ability, API.Unit][]} */Object.entries(access);\n    for (const [can, details] of entries) {\n      if (details) {\n        capabilities.push({\n          can,\n          with: subject\n        });\n      }\n    }\n  }\n  return /** @type {API.Capabilities} */capabilities;\n};\n/**\n * Represents an owned space, meaning a space for which we have a private key\n * and consequently have full authority over.\n */\nexport class OwnedSpace {\n  /**\n   * @param {Model} model\n   */\n  constructor(model) {\n    this.model = model;\n  }\n  get signer() {\n    return this.model.signer;\n  }\n  get name() {\n    return this.model.name;\n  }\n  did() {\n    return this.signer.did();\n  }\n  /**\n   * Creates a renamed version of this space.\n   *\n   * @param {string} name\n   */\n  withName(name) {\n    return new OwnedSpace({\n      signer: this.signer,\n      name\n    });\n  }\n  /**\n   * Saves account in the agent store so it can be accessed across sessions.\n   *\n   * @param {object} input\n   * @param {API.Agent} [input.agent]\n   * @returns {Promise<API.Result<API.Unit, Error>>}\n   */\n  async save({\n    agent = this.model.agent\n  } = {}) {\n    if (!agent) {\n      return fail('Please provide an agent to save the space into');\n    }\n    const proof = await createAuthorization(this, {\n      audience: agent\n    });\n    await agent.importSpaceFromDelegation(proof);\n    await agent.setCurrentSpace(this.did());\n    return {\n      ok: {}\n    };\n  }\n  /**\n   * @param {Authorization} authorization\n   * @param {object} options\n   * @param {API.Agent} [options.agent]\n   */\n  provision({\n    proofs\n  }, {\n    agent = this.model.agent\n  } = {}) {\n    if (!agent) {\n      return fail('Please provide an agent to save the space into');\n    }\n    return provision(this, {\n      proofs,\n      agent\n    });\n  }\n  /**\n   * Creates a (UCAN) delegation that gives full access to the space to the\n   * specified `account`. At the moment we only allow `did:mailto` principal\n   * to be used as an `account`.\n   *\n   * @param {API.AccountDID} account\n   */\n  async createRecovery(account) {\n    return createRecovery(this, account);\n  }\n  /**\n   * Creates (UCAN) delegation that gives specified `agent` an access to\n   * specified ability (passed as `access.can` field) on the this space.\n   * Optionally, you can specify `access.expiration` field to set the\n   *\n   * @param {API.Principal} principal\n   * @param {object} [input]\n   * @param {API.Access} [input.access]\n   * @param {API.UCAN.UTCUnixTimestamp} [input.expiration]\n   */\n  createAuthorization(principal, input) {\n    return createAuthorization(this, {\n      ...input,\n      audience: principal\n    });\n  }\n  /**\n   * Derives BIP39 mnemonic that can be used to recover the space.\n   *\n   * @returns {string}\n   */\n  toMnemonic() {\n    return toMnemonic(this);\n  }\n}\nconst SpaceDID = Schema.did({\n  method: 'key'\n});\n/**\n * Creates a (shared) space from given delegation.\n *\n * @param {API.Delegation} delegation\n */\nexport const fromDelegation = delegation => {\n  const result = SpaceDID.read(delegation.capabilities[0].with);\n  if (result.error) {\n    throw Object.assign(new Error(`Invalid delegation, expected capabilities[0].with to be DID, ${result.error}`), {\n      cause: result.error\n    });\n  }\n  /** @type {{name?:string}} */\n  const meta = delegation.facts[0]?.space ?? {};\n  return new SharedSpace({\n    id: result.ok,\n    delegation,\n    meta\n  });\n};\n/**\n * @typedef {object} Authorization\n * @property {API.Delegation[]} proofs\n *\n * @typedef {object} Space\n * @property {() => API.SpaceDID} did\n */\n/**\n * @param {Space} space\n * @param {object} options\n * @param {API.Delegation[]} options.proofs\n * @param {API.Agent} options.agent\n */\nexport const provision = async (space, {\n  proofs,\n  agent\n}) => {\n  const [capability] = proofs[0].capabilities;\n  const {\n    ok: account,\n    error: reason\n  } = Provider.AccountDID.read(capability.with);\n  if (reason) {\n    return error(reason);\n  }\n  return await Provider.add(agent, {\n    consumer: space.did(),\n    account,\n    proofs\n  });\n};\n/**\n * Represents a shared space, meaning a space for which we have a delegation\n * and consequently have limited authority over.\n */\nexport class SharedSpace {\n  /**\n   * @typedef {object} SharedSpaceModel\n   * @property {API.SpaceDID} id\n   * @property {API.Delegation} delegation\n   * @property {{name?:string}} meta\n   * @property {API.Agent} [agent]\n   *\n   * @param {SharedSpaceModel} model\n   */\n  constructor(model) {\n    this.model = model;\n  }\n  get delegation() {\n    return this.model.delegation;\n  }\n  get meta() {\n    return this.model.meta;\n  }\n  get name() {\n    return this.meta.name ?? '';\n  }\n  did() {\n    return this.model.id;\n  }\n  /**\n   * @param {string} name\n   */\n  withName(name) {\n    return new SharedSpace({\n      ...this.model,\n      meta: {\n        ...this.meta,\n        name\n      }\n    });\n  }\n}","map":{"version":3,"names":["ED25519","delegate","Schema","UCAN","error","fail","DID","BIP39","wordlist","API","Access","Provider","generate","name","agent","signer","OwnedSpace","fromMnemonic","mnemonic","secret","mnemonicToEntropy","derive","toMnemonic","entropyToMnemonic","createRecovery","space","account","createAuthorization","audience","parse","access","accountAccess","expiration","Infinity","SESSION_LIFETIME","spaceAccess","now","issuer","capabilities","toCapabilities","did","facts","allow","subject","Object","entries","can","details","push","with","constructor","model","withName","save","proof","importSpaceFromDelegation","setCurrentSpace","ok","provision","proofs","principal","input","SpaceDID","method","fromDelegation","delegation","result","read","assign","Error","cause","meta","SharedSpace","id","capability","reason","AccountDID","add","consumer"],"sources":["../../src/space.js"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,2BAA2B;AACpD,SAASC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AACvE,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,OAAO,KAAKC,GAAG,MAAM,YAAY;AACjC,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAEzC;;;;;;;;AASA;;;;;;;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAO;EAAEC,IAAI;EAAEC;AAAK,CAAE,KAAI;EAChD,MAAM;IAAEC;EAAM,CAAE,GAAG,MAAMf,OAAO,CAACY,QAAQ,EAAE;EAE3C,OAAO,IAAII,UAAU,CAAC;IAAED,MAAM;IAAEF,IAAI;IAAEC;EAAK,CAAE,CAAC;AAChD,CAAC;AAED;;;;;;;;AAQA,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAE;EAAEL,IAAI;EAAEC;AAAK,CAAE,KAAI;EAC9D,MAAMK,MAAM,GAAGZ,KAAK,CAACa,iBAAiB,CAACF,QAAQ,EAAEV,QAAQ,CAAC;EAC1D,MAAMO,MAAM,GAAG,MAAMf,OAAO,CAACqB,MAAM,CAACF,MAAM,CAAC;EAC3C,OAAO,IAAIH,UAAU,CAAC;IAAED,MAAM;IAAEF,IAAI;IAAEC;EAAK,CAAE,CAAC;AAChD,CAAC;AAED;;;;;;;AAOA,OAAO,MAAMQ,UAAU,GAAGA,CAAC;EAAEP;AAAM,CAAE,KAAI;EACvC;EACA;EACA,MAAMI,MAAM,GAAGJ,MAAM,CAACI,MAAM;EAE5B,OAAOZ,KAAK,CAACgB,iBAAiB,CAACJ,MAAM,EAAEX,QAAQ,CAAC;AAClD,CAAC;AAED;;;;;;;;AAQA,OAAO,MAAMgB,cAAc,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAC3CC,mBAAmB,CAACF,KAAK,EAAE;EACzBG,QAAQ,EAAEtB,GAAG,CAACuB,KAAK,CAACH,OAAO,CAAC;EAC5BI,MAAM,EAAEpB,MAAM,CAACqB,aAAa;EAC5BC,UAAU,EAAEC;CACb,CAAC;AAEJ;AACA,OAAO,MAAMC,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG;AAElD;;;;;;;;;;;;;;AAcA,OAAO,MAAMP,mBAAmB,GAAG,MAAAA,CACjC;EAAEZ,MAAM;EAAEF;AAAI,CAAE,EAChB;EACEe,QAAQ;EACRE,MAAM,GAAGpB,MAAM,CAACyB,WAAW;EAC3BH,UAAU,GAAG7B,IAAI,CAACiC,GAAG,EAAE,GAAGF;AAAgB,CAC3C,KACC;EACF,OAAO,MAAMjC,QAAQ,CAAC;IACpBoC,MAAM,EAAEtB,MAAM;IACda,QAAQ,EAAEA,QAAQ;IAClBU,YAAY,EAAEC,cAAc,CAAC;MAC3B,CAACxB,MAAM,CAACyB,GAAG,EAAE,GAAGV;KACjB,CAAC;IACF,IAAIE,UAAU,GAAG;MAAEA;IAAU,CAAE,GAAG,EAAE,CAAC;IACrCS,KAAK,EAAE,CAAC;MAAEhB,KAAK,EAAE;QAAEZ;MAAI;IAAE,CAAE;GAC5B,CAAC;AACJ,CAAC;AAED;;;;AAIA,MAAM0B,cAAc,GAAIG,KAAK,IAAI;EAC/B,MAAMJ,YAAY,GAAG,EAAE;EACvB,KAAK,MAAM,CAACK,OAAO,EAAEb,MAAM,CAAC,IAAIc,MAAM,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;IACrD,MAAMG,OAAO,GAAG,wCACdD,MAAM,CAACC,OAAO,CAACf,MAAM,CACtB;IAED,KAAK,MAAM,CAACgB,GAAG,EAAEC,OAAO,CAAC,IAAIF,OAAO,EAAE;MACpC,IAAIE,OAAO,EAAE;QACXT,YAAY,CAACU,IAAI,CAAC;UAAEF,GAAG;UAAEG,IAAI,EAAEN;QAAO,CAAE,CAAC;;;;EAK/C,OAAO,+BAAiCL,YAAY;AACtD,CAAC;AAED;;;;AAIA,OAAM,MAAOtB,UAAU;EACrB;;;EAGAkC,YAAYC,KAAK;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA,IAAIpC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACoC,KAAK,CAACpC,MAAM;EAC1B;EAEA,IAAIF,IAAIA,CAAA;IACN,OAAO,IAAI,CAACsC,KAAK,CAACtC,IAAI;EACxB;EAEA2B,GAAGA,CAAA;IACD,OAAO,IAAI,CAACzB,MAAM,CAACyB,GAAG,EAAE;EAC1B;EAEA;;;;;EAKAY,QAAQA,CAACvC,IAAI;IACX,OAAO,IAAIG,UAAU,CAAC;MAAED,MAAM,EAAE,IAAI,CAACA,MAAM;MAAEF;IAAI,CAAE,CAAC;EACtD;EAEA;;;;;;;EAOA,MAAMwC,IAAIA,CAAC;IAAEvC,KAAK,GAAG,IAAI,CAACqC,KAAK,CAACrC;EAAK,CAAE,GAAG,EAAE;IAC1C,IAAI,CAACA,KAAK,EAAE;MACV,OAAOT,IAAI,CAAC,gDAAgD,CAAC;;IAG/D,MAAMiD,KAAK,GAAG,MAAM3B,mBAAmB,CAAC,IAAI,EAAE;MAAEC,QAAQ,EAAEd;IAAK,CAAE,CAAC;IAClE,MAAMA,KAAK,CAACyC,yBAAyB,CAACD,KAAK,CAAC;IAC5C,MAAMxC,KAAK,CAAC0C,eAAe,CAAC,IAAI,CAAChB,GAAG,EAAE,CAAC;IAEvC,OAAO;MAAEiB,EAAE,EAAE;IAAE,CAAE;EACnB;EAEA;;;;;EAKAC,SAASA,CAAC;IAAEC;EAAM,CAAE,EAAE;IAAE7C,KAAK,GAAG,IAAI,CAACqC,KAAK,CAACrC;EAAK,CAAE,GAAG,EAAE;IACrD,IAAI,CAACA,KAAK,EAAE;MACV,OAAOT,IAAI,CAAC,gDAAgD,CAAC;;IAG/D,OAAOqD,SAAS,CAAC,IAAI,EAAE;MAAEC,MAAM;MAAE7C;IAAK,CAAE,CAAC;EAC3C;EAEA;;;;;;;EAOA,MAAMU,cAAcA,CAACE,OAAO;IAC1B,OAAOF,cAAc,CAAC,IAAI,EAAEE,OAAO,CAAC;EACtC;EAEA;;;;;;;;;;EAUAC,mBAAmBA,CAACiC,SAAS,EAAEC,KAAK;IAClC,OAAOlC,mBAAmB,CAAC,IAAI,EAAE;MAAE,GAAGkC,KAAK;MAAEjC,QAAQ,EAAEgC;IAAS,CAAE,CAAC;EACrE;EAEA;;;;;EAKAtC,UAAUA,CAAA;IACR,OAAOA,UAAU,CAAC,IAAI,CAAC;EACzB;;AAGF,MAAMwC,QAAQ,GAAG5D,MAAM,CAACsC,GAAG,CAAC;EAAEuB,MAAM,EAAE;AAAK,CAAE,CAAC;AAE9C;;;;;AAKA,OAAO,MAAMC,cAAc,GAAIC,UAAU,IAAI;EAC3C,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,CAACF,UAAU,CAAC3B,YAAY,CAAC,CAAC,CAAC,CAACW,IAAI,CAAC;EAC7D,IAAIiB,MAAM,CAAC9D,KAAK,EAAE;IAChB,MAAMwC,MAAM,CAACwB,MAAM,CACjB,IAAIC,KAAK,CACP,gEAAgEH,MAAM,CAAC9D,KAAK,EAAE,CAC/E,EACD;MACEkE,KAAK,EAAEJ,MAAM,CAAC9D;KACf,CACF;;EAGH;EACA,MAAMmE,IAAI,GAAGN,UAAU,CAACxB,KAAK,CAAC,CAAC,CAAC,EAAEhB,KAAK,IAAI,EAAE;EAE7C,OAAO,IAAI+C,WAAW,CAAC;IAAEC,EAAE,EAAEP,MAAM,CAACT,EAAE;IAAEQ,UAAU;IAAEM;EAAI,CAAE,CAAC;AAC7D,CAAC;AAED;;;;;;;AAQA;;;;;;AAMA,OAAO,MAAMb,SAAS,GAAG,MAAAA,CAAOjC,KAAK,EAAE;EAAEkC,MAAM;EAAE7C;AAAK,CAAE,KAAI;EAC1D,MAAM,CAAC4D,UAAU,CAAC,GAAGf,MAAM,CAAC,CAAC,CAAC,CAACrB,YAAY;EAE3C,MAAM;IAAEmB,EAAE,EAAE/B,OAAO;IAAEtB,KAAK,EAAEuE;EAAM,CAAE,GAAGhE,QAAQ,CAACiE,UAAU,CAACT,IAAI,CAC7DO,UAAU,CAACzB,IAAI,CAChB;EACD,IAAI0B,MAAM,EAAE;IACV,OAAOvE,KAAK,CAACuE,MAAM,CAAC;;EAGtB,OAAO,MAAMhE,QAAQ,CAACkE,GAAG,CAAC/D,KAAK,EAAE;IAC/BgE,QAAQ,EAAErD,KAAK,CAACe,GAAG,EAAE;IACrBd,OAAO;IACPiC;GACD,CAAC;AACJ,CAAC;AAED;;;;AAIA,OAAM,MAAOa,WAAW;EACtB;;;;;;;;;EASAtB,YAAYC,KAAK;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA,IAAIc,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACd,KAAK,CAACc,UAAU;EAC9B;EAEA,IAAIM,IAAIA,CAAA;IACN,OAAO,IAAI,CAACpB,KAAK,CAACoB,IAAI;EACxB;EAEA,IAAI1D,IAAIA,CAAA;IACN,OAAO,IAAI,CAAC0D,IAAI,CAAC1D,IAAI,IAAI,EAAE;EAC7B;EAEA2B,GAAGA,CAAA;IACD,OAAO,IAAI,CAACW,KAAK,CAACsB,EAAE;EACtB;EAEA;;;EAGArB,QAAQA,CAACvC,IAAI;IACX,OAAO,IAAI2D,WAAW,CAAC;MACrB,GAAG,IAAI,CAACrB,KAAK;MACboB,IAAI,EAAE;QAAE,GAAG,IAAI,CAACA,IAAI;QAAE1D;MAAI;KAC3B,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}