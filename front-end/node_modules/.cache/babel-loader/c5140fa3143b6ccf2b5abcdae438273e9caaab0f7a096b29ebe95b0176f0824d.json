{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport campaignAbi from './Campaign.json';\nimport donationTokenAbi from './DonationToken.json';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CampaignInteraction() {\n  _s();\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [donationAmount, setDonationAmount] = useState('');\n  const [targetAmount, setTargetAmount] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalDonations, setTotalDonations] = useState(0);\n  const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\n  const [signerIndex, setSignerIndex] = useState(null);\n  const [isTargetReached, setIsTargetReached] = useState(false);\n  const [campaignContract, setCampaignContract] = useState(null);\n  const [donationTokenContract, setDonationTokenContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isContractsLoaded, setIsContractsLoaded] = useState(false);\n  const [showThankYouPopup, setShowThankYouPopup] = useState(false);\n  const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false); // State for account info popup\n\n  useEffect(() => {\n    async function fetchAccountData() {\n      try {\n        const accounts = await provider.listAccounts();\n        setAccountData(accounts || []);\n      } catch (error) {\n        alert('Error fetching account data: ' + error.message);\n      }\n    }\n    fetchAccountData();\n  }, [provider]);\n  useEffect(() => {\n    async function initializeContracts() {\n      if (signerIndex !== null && provider) {\n        const signer = provider.getSigner(signerIndex);\n        try {\n          const campaignAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n          const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\n          setCampaignContract(campaign);\n          const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n          const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\n          setDonationTokenContract(donationToken);\n          setIsContractsLoaded(true);\n        } catch (error) {\n          alert('Error initializing contracts: ' + error.message);\n        }\n      }\n    }\n    initializeContracts();\n  }, [signerIndex, provider]);\n  async function handleLogin(address) {\n    try {\n      setIsLoggedIn(true);\n      setAccountAddress(address);\n      const balance = await provider.getBalance(address);\n      setAccountBalance(ethers.utils.formatEther(balance));\n      const index = accountData.indexOf(address);\n      if (index === -1) {\n        alert(\"Address not found in accountData.\");\n      } else {\n        setSignerIndex(index);\n        alert(\"Logged in successfully.\");\n      }\n    } catch (error) {\n      alert('Error during login: ' + error.message);\n    }\n  }\n  async function handleLogout() {\n    setIsLoggedIn(false);\n    setAccountAddress('');\n    setAccountBalance('');\n    setSignerIndex(null);\n    setCampaignContract(null);\n    setDonationTokenContract(null);\n    setTotalDonations(0);\n    setTargetAmount('');\n    setDonationAmount('');\n    setProgress(0);\n    alert(\"You have logged out successfully.\");\n  }\n  async function donate() {\n    try {\n      if (!isContractsLoaded || !campaignContract) {\n        alert(\"Contracts are still loading. Please wait.\");\n        return;\n      }\n      if (!ethers.utils.isAddress(accountAddress)) {\n        alert(\"Invalid account address.\");\n        return;\n      }\n      if (donationAmount && parseFloat(donationAmount) > 0) {\n        const donationValue = ethers.utils.parseEther(donationAmount);\n        const balance = await provider.getBalance(accountAddress);\n        if (balance.lt(donationValue)) {\n          alert(\"Insufficient balance for the donation.\");\n          return;\n        }\n        const donationTx = await campaignContract.donate({\n          value: donationValue\n        });\n        await donationTx.wait();\n        const updatedBalance = await provider.getBalance(accountAddress);\n        setAccountBalance(ethers.utils.formatEther(updatedBalance));\n        const currentTotalDonations = await campaignContract.totalDonations();\n        const currentTargetAmount = await campaignContract.targetAmount();\n        setTotalDonations(ethers.utils.formatEther(currentTotalDonations));\n        setTargetAmount(ethers.utils.formatEther(currentTargetAmount));\n        const currentProgress = parseFloat(currentTotalDonations) * 100 / parseFloat(currentTargetAmount);\n        setProgress(currentProgress || 0);\n        if (parseFloat(currentTotalDonations) >= parseFloat(currentTargetAmount)) {\n          setIsTargetReached(true);\n        }\n        setShowThankYouPopup(true);\n      } else {\n        alert(\"Please enter a valid donation amount.\");\n      }\n    } catch (error) {\n      alert('An error occurred while making the donation. Please check the console for details.');\n    }\n  }\n  async function setCampaignTarget() {\n    try {\n      if (campaignContract && parseFloat(targetAmount) > 0) {\n        const campaignOwner = await campaignContract.owner();\n        if (accountAddress !== campaignOwner) {\n          alert(\"Only the campaign owner can set the target amount.\");\n          return;\n        }\n        const targetValue = ethers.utils.parseEther(targetAmount);\n        const currentTotalDonations = await campaignContract.totalDonations();\n        if (targetValue.lte(currentTotalDonations)) {\n          alert(\"Target amount must be greater than total donations.\");\n          return;\n        }\n        const setTargetTx = await campaignContract.setTargetAmount(targetValue);\n        await setTargetTx.wait();\n        alert(\"Target amount set successfully!\");\n      } else {\n        alert(\"Please enter a valid target amount.\");\n      }\n    } catch (error) {\n      alert('An error occurred while setting the target amount. Please check the console for details.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin,\n      placeholder: \"Enter address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"campaign-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Support Our Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Empowering Children for a Brighter Future\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-info-button\",\n          onClick: () => setShowAccountInfoPopup(true),\n          children: \"Show Account Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), showAccountInfoPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowAccountInfoPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account: \", accountAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: \", accountBalance, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campaign-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Campaign Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Donations: \", totalDonations, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), targetAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Target Amount: \", targetAmount, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", progress.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Make a Donation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: donationAmount,\n          onChange: e => setDonationAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: donate,\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), showThankYouPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Thank You!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your generosity makes a difference. Thank you for your support!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowThankYouPopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }, this), isTargetReached && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"celebration\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 Target Reached! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"We have reached our goal, thanks to your kindness and support!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n_s(CampaignInteraction, \"xmqO3QRUTQD/JauvF/em2+JS4J0=\");\n_c = CampaignInteraction;\nexport default CampaignInteraction;\nvar _c;\n$RefreshReg$(_c, \"CampaignInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","campaignAbi","donationTokenAbi","Login","jsxDEV","_jsxDEV","CampaignInteraction","_s","accountAddress","setAccountAddress","accountBalance","setAccountBalance","donationAmount","setDonationAmount","targetAmount","setTargetAmount","progress","setProgress","totalDonations","setTotalDonations","provider","providers","JsonRpcProvider","signerIndex","setSignerIndex","isTargetReached","setIsTargetReached","campaignContract","setCampaignContract","donationTokenContract","setDonationTokenContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","isContractsLoaded","setIsContractsLoaded","showThankYouPopup","setShowThankYouPopup","showAccountInfoPopup","setShowAccountInfoPopup","fetchAccountData","accounts","listAccounts","error","alert","message","initializeContracts","signer","getSigner","campaignAddress","campaign","Contract","abi","donationTokenAddress","donationToken","handleLogin","address","balance","getBalance","utils","formatEther","index","indexOf","handleLogout","donate","isAddress","parseFloat","donationValue","parseEther","lt","donationTx","value","wait","updatedBalance","currentTotalDonations","currentTargetAmount","currentProgress","setCampaignTarget","campaignOwner","owner","targetValue","lte","setTargetTx","className","children","onLogin","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","max","type","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport campaignAbi from './Campaign.json';\r\nimport donationTokenAbi from './DonationToken.json';\r\nimport Login from './Login';\r\nimport './App.css';\r\n\r\nfunction CampaignInteraction() {\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [donationAmount, setDonationAmount] = useState('');\r\n    const [targetAmount, setTargetAmount] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [totalDonations, setTotalDonations] = useState(0);\r\n    const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\r\n    const [signerIndex, setSignerIndex] = useState(null);\r\n    const [isTargetReached, setIsTargetReached] = useState(false);\r\n    const [campaignContract, setCampaignContract] = useState(null);\r\n    const [donationTokenContract, setDonationTokenContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isContractsLoaded, setIsContractsLoaded] = useState(false);\r\n    const [showThankYouPopup, setShowThankYouPopup] = useState(false);\r\n    const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false);  // State for account info popup\r\n\r\n    useEffect(() => {\r\n        async function fetchAccountData() {\r\n            try {\r\n                const accounts = await provider.listAccounts();\r\n                setAccountData(accounts || []);\r\n            } catch (error) {\r\n                alert('Error fetching account data: ' + error.message);\r\n            }\r\n        }\r\n        fetchAccountData();\r\n    }, [provider]);\r\n\r\n    useEffect(() => {\r\n        async function initializeContracts() {\r\n            if (signerIndex !== null && provider) {\r\n                const signer = provider.getSigner(signerIndex);\r\n\r\n                try {\r\n                    const campaignAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n                    const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\r\n                    setCampaignContract(campaign);\r\n\r\n                    const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n                    const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\r\n                    setDonationTokenContract(donationToken);\r\n\r\n                    setIsContractsLoaded(true);\r\n                } catch (error) {\r\n                    alert('Error initializing contracts: ' + error.message);\r\n                }\r\n            }\r\n        }\r\n        initializeContracts();\r\n    }, [signerIndex, provider]);\r\n\r\n    async function handleLogin(address) {\r\n        try {\r\n            setIsLoggedIn(true);\r\n            setAccountAddress(address);\r\n            const balance = await provider.getBalance(address);\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n\r\n            const index = accountData.indexOf(address);\r\n            if (index === -1) {\r\n                alert(\"Address not found in accountData.\");\r\n            } else {\r\n                setSignerIndex(index);\r\n                alert(\"Logged in successfully.\");\r\n            }\r\n        } catch (error) {\r\n            alert('Error during login: ' + error.message);\r\n        }\r\n    }\r\n\r\n    async function handleLogout() {\r\n        setIsLoggedIn(false);\r\n        setAccountAddress('');\r\n        setAccountBalance('');\r\n        setSignerIndex(null);\r\n        setCampaignContract(null);\r\n        setDonationTokenContract(null);\r\n        setTotalDonations(0);\r\n        setTargetAmount('');\r\n        setDonationAmount('');\r\n        setProgress(0);\r\n        alert(\"You have logged out successfully.\");\r\n    }\r\n\r\n    async function donate() {\r\n        try {\r\n            if (!isContractsLoaded || !campaignContract) {\r\n                alert(\"Contracts are still loading. Please wait.\");\r\n                return;\r\n            }\r\n            if (!ethers.utils.isAddress(accountAddress)) {\r\n                alert(\"Invalid account address.\");\r\n                return;\r\n            }\r\n\r\n            if (donationAmount && parseFloat(donationAmount) > 0) {\r\n                const donationValue = ethers.utils.parseEther(donationAmount);\r\n\r\n                const balance = await provider.getBalance(accountAddress);\r\n                if (balance.lt(donationValue)) {\r\n                    alert(\"Insufficient balance for the donation.\");\r\n                    return;\r\n                }\r\n\r\n                const donationTx = await campaignContract.donate({ value: donationValue });\r\n                await donationTx.wait();\r\n\r\n                const updatedBalance = await provider.getBalance(accountAddress);\r\n                setAccountBalance(ethers.utils.formatEther(updatedBalance));\r\n\r\n                const currentTotalDonations = await campaignContract.totalDonations();\r\n                const currentTargetAmount = await campaignContract.targetAmount();\r\n\r\n                setTotalDonations(ethers.utils.formatEther(currentTotalDonations));\r\n                setTargetAmount(ethers.utils.formatEther(currentTargetAmount));\r\n\r\n                const currentProgress = (parseFloat(currentTotalDonations) * 100) / parseFloat(currentTargetAmount);\r\n                setProgress(currentProgress || 0);\r\n\r\n                if (parseFloat(currentTotalDonations) >= parseFloat(currentTargetAmount)) {\r\n                    setIsTargetReached(true);\r\n                }\r\n\r\n                setShowThankYouPopup(true);\r\n            } else {\r\n                alert(\"Please enter a valid donation amount.\");\r\n            }\r\n        } catch (error) {\r\n            alert('An error occurred while making the donation. Please check the console for details.');\r\n        }\r\n    }\r\n\r\n    async function setCampaignTarget() {\r\n        try {\r\n            if (campaignContract && parseFloat(targetAmount) > 0) {\r\n                const campaignOwner = await campaignContract.owner();\r\n\r\n                if (accountAddress !== campaignOwner) {\r\n                    alert(\"Only the campaign owner can set the target amount.\");\r\n                    return;\r\n                }\r\n\r\n                const targetValue = ethers.utils.parseEther(targetAmount);\r\n\r\n                const currentTotalDonations = await campaignContract.totalDonations();\r\n                if (targetValue.lte(currentTotalDonations)) {\r\n                    alert(\"Target amount must be greater than total donations.\");\r\n                    return;\r\n                }\r\n\r\n                const setTargetTx = await campaignContract.setTargetAmount(targetValue);\r\n                await setTargetTx.wait();\r\n\r\n                alert(\"Target amount set successfully!\");\r\n            } else {\r\n                alert(\"Please enter a valid target amount.\");\r\n            }\r\n        } catch (error) {\r\n            alert('An error occurred while setting the target amount. Please check the console for details.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"campaign-container\">\r\n            {!isLoggedIn ? (\r\n                <Login accountData={accountData} onLogin={handleLogin} placeholder=\"Enter address\" />\r\n            ) : (\r\n                <div>\r\n                    <header className=\"campaign-header\">\r\n                        <h1>Support Our Campaign</h1>\r\n                        <h4>Empowering Children for a Brighter Future</h4>\r\n                    </header>\r\n\r\n                    <div className=\"account-info\">\r\n                        <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n                        <button className=\"show-info-button\" onClick={() => setShowAccountInfoPopup(true)}>Show Account Info</button>\r\n                    </div>\r\n\r\n                    {/* Account Info Popup */}\r\n                    {showAccountInfoPopup && (\r\n                        <div className=\"popup\">\r\n                            <div className=\"popup-content\">\r\n                                <button className=\"close-popup-button\" onClick={() => setShowAccountInfoPopup(false)}>X</button>\r\n                                <h3>Account Information</h3>\r\n                                <p>Account: {accountAddress}</p>\r\n                                <p>Balance: {accountBalance} ETH</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"campaign-progress\">\r\n                        <h2>Campaign Progress</h2>\r\n                        <p>Total Donations: {totalDonations} ETH</p>\r\n                        {targetAmount && <p>Target Amount: {targetAmount} ETH</p>}\r\n                        <p>Progress: {progress.toFixed(2)}%</p>\r\n                        <progress value={progress} max=\"100\"></progress>\r\n                    </div>\r\n\r\n                    <div className=\"donation-section\">\r\n                        <h2>Make a Donation</h2>\r\n                        <label>Amount (ETH):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={donationAmount}\r\n                            onChange={(e) => setDonationAmount(e.target.value)}\r\n                        />\r\n                        <button onClick={donate}>Donate</button>\r\n                    </div>\r\n\r\n                    {showThankYouPopup && (\r\n                        <div className=\"popup\">\r\n                            <div className=\"popup-content\">\r\n                                <h2>Thank You!</h2>\r\n                                <p>Your generosity makes a difference. Thank you for your support!</p>\r\n                                <button onClick={() => setShowThankYouPopup(false)}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {isTargetReached && (\r\n                        <div className=\"celebration\">\r\n                            <h2>🎉 Target Reached! 🎉</h2>\r\n                            <p>We have reached our goal, thanks to your kindness and support!</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CampaignInteraction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}