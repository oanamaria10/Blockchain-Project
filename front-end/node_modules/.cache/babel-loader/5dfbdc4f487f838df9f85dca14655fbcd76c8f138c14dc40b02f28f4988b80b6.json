{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport campaignAbi from './Campaign.json';\nimport donationTokenAbi from './DonationToken.json'; // Import the DonationToken ABI\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CampaignInteraction() {\n  _s();\n  console.log(\"Campaign ABI: \", campaignAbi);\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [donationAmount, setDonationAmount] = useState('');\n  const [targetAmount, setTargetAmount] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalDonations, setTotalDonations] = useState(0);\n  const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\n  const [signerIndex, setSignerIndex] = useState(null);\n  const [campaignContract, setCampaignContract] = useState(null);\n  const [donationTokenContract, setDonationTokenContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isContractsLoaded, setIsContractsLoaded] = useState(false);\n  useEffect(() => {\n    async function fetchAccountData() {\n      try {\n        const accounts = await provider.listAccounts();\n        setAccountData(accounts || []);\n      } catch (error) {\n        console.error('Error fetching account data:', error);\n      }\n    }\n    fetchAccountData();\n  }, [provider]);\n  useEffect(() => {\n    async function initializeContracts() {\n      if (signerIndex !== null && provider) {\n        const signer = provider.getSigner(signerIndex);\n        try {\n          // Initialize Campaign Contract\n          const campaignAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"; // Replace with deployed address\n          const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\n          setCampaignContract(campaign);\n          console.log(\"Campaign contract initialized:\", campaign);\n\n          // Initialize Donation Token Contract\n          const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Replace with deployed address\n          const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\n          setDonationTokenContract(donationToken);\n          console.log(\"Donation token contract initialized:\", donationToken);\n          setIsContractsLoaded(true);\n        } catch (error) {\n          console.error(\"Error initializing contracts:\", error);\n        }\n      }\n    }\n    initializeContracts();\n  }, [signerIndex, provider]);\n  useEffect(() => {\n    console.log(\"Campaign Contract State Updated:\", campaignContract);\n  }, [campaignContract]);\n  async function handleLogin(address) {\n    try {\n      setIsLoggedIn(true);\n      setAccountAddress(address);\n      const balance = await provider.getBalance(address);\n      setAccountBalance(ethers.utils.formatEther(balance));\n      const index = accountData.indexOf(address);\n      if (index === -1) {\n        console.log(\"Address not found in accountData.\");\n      } else {\n        setSignerIndex(index);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  }\n  async function donate() {\n    try {\n      if (!isContractsLoaded || !campaignContract) {\n        alert(\"Contracts are still loading. Please wait.\");\n        return;\n      }\n      if (!ethers.utils.isAddress(accountAddress)) {\n        throw new Error(\"Invalid account address.\");\n      }\n      if (donationAmount && parseFloat(donationAmount) > 0) {\n        const donationValue = ethers.utils.parseEther(donationAmount);\n        const balance = await provider.getBalance(accountAddress);\n        if (balance.lt(donationValue)) {\n          alert(\"Insufficient balance for the donation.\");\n          return;\n        }\n        console.log(\"Sending donation...\");\n        const donationTx = await campaignContract.donate(1, {\n          value: donationValue\n        });\n        await donationTx.wait();\n        console.log(\"Donation successful!\");\n        const updatedBalance = await provider.getBalance(accountAddress);\n        setAccountBalance(ethers.utils.formatEther(updatedBalance));\n        const currentTotalDonations = await campaignContract.totalDonations();\n        const currentTargetAmount = await campaignContract.targetAmount();\n        setTotalDonations(ethers.utils.formatEther(currentTotalDonations));\n        setTargetAmount(ethers.utils.formatEther(currentTargetAmount));\n        const currentProgress = parseFloat(currentTotalDonations) * 100 / parseFloat(currentTargetAmount);\n        setProgress(currentProgress);\n      } else {\n        alert(\"Please enter a valid donation amount.\");\n      }\n    } catch (error) {\n      console.error('Error making donation:', error);\n    }\n  }\n  async function setCampaignTarget() {\n    try {\n      if (campaignContract && parseFloat(targetAmount) > 0) {\n        const targetValue = ethers.utils.parseEther(targetAmount);\n        const currentTotalDonations = await campaignContract.totalDonations();\n        if (targetValue.lte(currentTotalDonations)) {\n          alert(\"Target amount must be greater than total donations.\");\n          return;\n        }\n        const setTargetTx = await campaignContract.setTargetAmount(targetValue);\n        await setTargetTx.wait();\n        console.log(\"Target amount set successfully!\");\n      } else {\n        alert(\"Please enter a valid target amount.\");\n      }\n    } catch (error) {\n      console.error('Error setting target amount:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Campaign Interaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connected Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", accountBalance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Campaign Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Donations: \", totalDonations, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Target Amount: \", targetAmount, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", progress.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Donate to the Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Donation Amount (ETH or Tokens):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: donationAmount,\n        onChange: e => setDonationAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 119\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: donate,\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Campaign Target (Owner only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Target Amount (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: targetAmount,\n        onChange: e => setTargetAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setCampaignTarget,\n        children: \"Set Target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(CampaignInteraction, \"pLZIP7qjrY6Xlib+5KE+ApfQlX4=\");\n_c = CampaignInteraction;\nexport default CampaignInteraction;\nvar _c;\n$RefreshReg$(_c, \"CampaignInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","campaignAbi","donationTokenAbi","Login","jsxDEV","_jsxDEV","CampaignInteraction","_s","console","log","accountAddress","setAccountAddress","accountBalance","setAccountBalance","donationAmount","setDonationAmount","targetAmount","setTargetAmount","progress","setProgress","totalDonations","setTotalDonations","provider","providers","JsonRpcProvider","signerIndex","setSignerIndex","campaignContract","setCampaignContract","donationTokenContract","setDonationTokenContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","isContractsLoaded","setIsContractsLoaded","fetchAccountData","accounts","listAccounts","error","initializeContracts","signer","getSigner","campaignAddress","campaign","Contract","abi","donationTokenAddress","donationToken","handleLogin","address","balance","getBalance","utils","formatEther","index","indexOf","donate","alert","isAddress","Error","parseFloat","donationValue","parseEther","lt","donationTx","value","wait","updatedBalance","currentTotalDonations","currentTargetAmount","currentProgress","setCampaignTarget","targetValue","lte","setTargetTx","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport campaignAbi from './Campaign.json';\r\nimport donationTokenAbi from './DonationToken.json'; // Import the DonationToken ABI\r\nimport Login from './Login';\r\nimport './App.css';\r\n\r\nfunction CampaignInteraction() {\r\n    console.log(\"Campaign ABI: \", campaignAbi);\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [donationAmount, setDonationAmount] = useState('');\r\n    const [targetAmount, setTargetAmount] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [totalDonations, setTotalDonations] = useState(0);\r\n    const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\r\n    const [signerIndex, setSignerIndex] = useState(null);\r\n\r\n    const [campaignContract, setCampaignContract] = useState(null);\r\n    const [donationTokenContract, setDonationTokenContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isContractsLoaded, setIsContractsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchAccountData() {\r\n            try {\r\n                const accounts = await provider.listAccounts();\r\n                setAccountData(accounts || []);\r\n            } catch (error) {\r\n                console.error('Error fetching account data:', error);\r\n            }\r\n        }\r\n        fetchAccountData();\r\n    }, [provider]);\r\n\r\n    useEffect(() => {\r\n        async function initializeContracts() {\r\n            if (signerIndex !== null && provider) {\r\n                const signer = provider.getSigner(signerIndex);\r\n\r\n                try {\r\n                    // Initialize Campaign Contract\r\n                    const campaignAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"; // Replace with deployed address\r\n                    const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\r\n                    setCampaignContract(campaign);\r\n                    console.log(\"Campaign contract initialized:\", campaign);\r\n\r\n                    // Initialize Donation Token Contract\r\n                    const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Replace with deployed address\r\n                    const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\r\n                    setDonationTokenContract(donationToken);\r\n                    console.log(\"Donation token contract initialized:\", donationToken);\r\n\r\n                    setIsContractsLoaded(true);\r\n                } catch (error) {\r\n                    console.error(\"Error initializing contracts:\", error);\r\n                }\r\n            }\r\n        }\r\n        initializeContracts();\r\n    }, [signerIndex, provider]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Campaign Contract State Updated:\", campaignContract);\r\n    }, [campaignContract]);\r\n\r\n    async function handleLogin(address) {\r\n        try {\r\n            setIsLoggedIn(true);\r\n            setAccountAddress(address);\r\n            const balance = await provider.getBalance(address);\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n\r\n            const index = accountData.indexOf(address);\r\n            if (index === -1) {\r\n                console.log(\"Address not found in accountData.\");\r\n            } else {\r\n                setSignerIndex(index);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    }\r\n\r\n    async function donate() {\r\n        try {\r\n            if (!isContractsLoaded || !campaignContract) {\r\n                alert(\"Contracts are still loading. Please wait.\");\r\n                return;\r\n            }\r\n            if (!ethers.utils.isAddress(accountAddress)) {\r\n                throw new Error(\"Invalid account address.\");\r\n            }\r\n\r\n            if (donationAmount && parseFloat(donationAmount) > 0) {\r\n                const donationValue = ethers.utils.parseEther(donationAmount);\r\n\r\n                const balance = await provider.getBalance(accountAddress);\r\n                if (balance.lt(donationValue)) {\r\n                    alert(\"Insufficient balance for the donation.\");\r\n                    return;\r\n                }\r\n\r\n                console.log(\"Sending donation...\");\r\n                const donationTx = await campaignContract.donate(1, { value: donationValue });\r\n                await donationTx.wait();\r\n                console.log(\"Donation successful!\");\r\n\r\n                const updatedBalance = await provider.getBalance(accountAddress);\r\n                setAccountBalance(ethers.utils.formatEther(updatedBalance));\r\n\r\n                const currentTotalDonations = await campaignContract.totalDonations();\r\n                const currentTargetAmount = await campaignContract.targetAmount();\r\n\r\n                setTotalDonations(ethers.utils.formatEther(currentTotalDonations));\r\n                setTargetAmount(ethers.utils.formatEther(currentTargetAmount));\r\n\r\n                const currentProgress = (parseFloat(currentTotalDonations) * 100) / parseFloat(currentTargetAmount);\r\n                setProgress(currentProgress);\r\n            } else {\r\n                alert(\"Please enter a valid donation amount.\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error making donation:', error);\r\n        }\r\n    }\r\n\r\n    async function setCampaignTarget() {\r\n        try {\r\n            if (campaignContract && parseFloat(targetAmount) > 0) {\r\n                const targetValue = ethers.utils.parseEther(targetAmount);\r\n\r\n                const currentTotalDonations = await campaignContract.totalDonations();\r\n                if (targetValue.lte(currentTotalDonations)) {\r\n                    alert(\"Target amount must be greater than total donations.\");\r\n                    return;\r\n                }\r\n\r\n                const setTargetTx = await campaignContract.setTargetAmount(targetValue);\r\n                await setTargetTx.wait();\r\n\r\n                console.log(\"Target amount set successfully!\");\r\n            } else {\r\n                alert(\"Please enter a valid target amount.\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error setting target amount:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn ? (\r\n                <Login accountData={accountData} onLogin={handleLogin} />\r\n            ) : (\r\n                <div>\r\n                    <h1>Campaign Interaction</h1>\r\n\r\n                    <div>\r\n                        <h2>Connected Account Information</h2>\r\n                        <p>Address: {accountAddress}</p>\r\n                        <p>Balance: {accountBalance} ETH</p>\r\n                    </div>\r\n\r\n                    <h2>Campaign Progress</h2>\r\n                    <p>Total Donations: {totalDonations} ETH</p>\r\n                    <p>Target Amount: {targetAmount} ETH</p>\r\n                    <p>Progress: {progress.toFixed(2)}%</p>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Donate to the Campaign</h2>\r\n                    <label>Donation Amount (ETH or Tokens):</label>\r\n                    <input type=\"number\" value={donationAmount} onChange={(e) => setDonationAmount(e.target.value)} /><br />\r\n                    <button onClick={donate}>Donate</button>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Set Campaign Target (Owner only)</h2>\r\n                    <label>Target Amount (ETH):</label>\r\n                    <input type=\"number\" value={targetAmount} onChange={(e) => setTargetAmount(e.target.value)} /><br />\r\n                    <button onClick={setCampaignTarget}>Set Target</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CampaignInteraction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}