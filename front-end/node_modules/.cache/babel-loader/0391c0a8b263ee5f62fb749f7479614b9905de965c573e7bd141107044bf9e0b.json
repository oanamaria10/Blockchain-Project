{"ast":null,"code":"'use strict';\n\nvar mergeOptions = require('merge-options');\nvar sha2 = require('multiformats/hashes/sha2');\nvar murmur3 = require('@multiformats/murmur3');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar mergeOptions__default = /*#__PURE__*/_interopDefaultLegacy(mergeOptions);\nasync function hamtHashFn(buf) {\n  return (await murmur3.murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha2.sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nvar defaultOptions$1 = (options = {}) => {\n  const defaults = mergeOptions__default[\"default\"].bind({\n    ignoreUndefined: true\n  });\n  return defaults(defaultOptions, options);\n};\nmodule.exports = defaultOptions$1;","map":{"version":3,"names":["mergeOptions","require","sha2","murmur3","_interopDefaultLegacy","e","mergeOptions__default","hamtHashFn","buf","murmur3128","encode","slice","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","sha256","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hidden","timeout","undefined","hamtHashCode","hamtBucketBits","defaultOptions$1","options","defaults","bind","ignoreUndefined","module","exports"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/options.js"],"sourcesContent":["'use strict';\n\nvar mergeOptions = require('merge-options');\nvar sha2 = require('multiformats/hashes/sha2');\nvar murmur3 = require('@multiformats/murmur3');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar mergeOptions__default = /*#__PURE__*/_interopDefaultLegacy(mergeOptions);\n\nasync function hamtHashFn(buf) {\n  return (await murmur3.murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha2.sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nvar defaultOptions$1 = (options = {}) => {\n  const defaults = mergeOptions__default[\"default\"].bind({ ignoreUndefined: true });\n  return defaults(defaultOptions, options);\n};\n\nmodule.exports = defaultOptions$1;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,IAAI,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC9C,IAAIE,OAAO,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAE9C,SAASG,qBAAqBA,CAAEC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,SAAS,IAAIA,CAAC,GAAGA,CAAC,GAAG;IAAE,SAAS,EAAEA;EAAE,CAAC;AAAE;AAEjH,IAAIC,qBAAqB,GAAG,aAAaF,qBAAqB,CAACJ,YAAY,CAAC;AAE5E,eAAeO,UAAUA,CAACC,GAAG,EAAE;EAC7B,OAAO,CAAC,MAAML,OAAO,CAACM,UAAU,CAACC,MAAM,CAACF,GAAG,CAAC,EAAEG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;AACrE;AACA,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,OAAO;EAChBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,sBAAsB,EAAE,IAAI;EAC5BC,MAAM,EAAEjB,IAAI,CAACkB,MAAM;EACnBC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAEA,CAAA,KAAM,MAAM,CACtB,CAAC;EACDC,mBAAmB,EAAE,IAAI;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,iBAAiB;EAC7BC,kBAAkB,EAAE,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,iBAAiB,EAAE,KAAK;EACxBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEC,SAAS;EAClB/B,UAAU;EACVgC,YAAY,EAAE,EAAE;EAChBC,cAAc,EAAE;AAClB,CAAC;AACD,IAAIC,gBAAgB,GAAGA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;EACvC,MAAMC,QAAQ,GAAGrC,qBAAqB,CAAC,SAAS,CAAC,CAACsC,IAAI,CAAC;IAAEC,eAAe,EAAE;EAAK,CAAC,CAAC;EACjF,OAAOF,QAAQ,CAAC9B,cAAc,EAAE6B,OAAO,CAAC;AAC1C,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}