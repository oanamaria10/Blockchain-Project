{"ast":null,"code":"'use strict';\n\nvar dir = require('./dir.js');\nvar index = require('./file/index.js');\nvar errCode = require('err-code');\nvar rabin = require('../chunker/rabin.js');\nvar fixedSize = require('../chunker/fixed-size.js');\nvar validateChunks = require('./validate-chunks.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => index(file, blockstore, options);\n    } else if (entry.path) {\n      const dir$1 = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dir(dir$1, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nmodule.exports = dagBuilder;","map":{"version":3,"names":["dir","require","index","errCode","rabin","fixedSize","validateChunks","_interopDefaultLegacy","e","errCode__default","isIterable","thing","Symbol","iterator","isAsyncIterable","asyncIterator","contentAsAsyncIterable","content","Uint8Array","Error","dagBuilder","source","blockstore","options","entry","path","substring","wrapWithDirectory","split","filter","join","chunker","chunkValidator","file","mtime","mode","dir$1","module","exports"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/index.js"],"sourcesContent":["'use strict';\n\nvar dir = require('./dir.js');\nvar index = require('./file/index.js');\nvar errCode = require('err-code');\nvar rabin = require('../chunker/rabin.js');\nvar fixedSize = require('../chunker/fixed-size.js');\nvar validateChunks = require('./validate-chunks.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode__default[\"default\"](new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => index(file, blockstore, options);\n    } else if (entry.path) {\n      const dir$1 = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dir(dir$1, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\n\nmodule.exports = dagBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}