{"ast":null,"code":"'use strict';\n\n/**\n * @module Spec\n */\n/**\n * Module dependencies.\n */\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Constructs a new `Spec` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Spec(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var indents = 0;\n  var n = 0;\n  function indent() {\n    return Array(indents).join('  ');\n  }\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.consoleLog();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    ++indents;\n    Base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n  });\n  runner.on(EVENT_SUITE_END, function () {\n    --indents;\n    if (indents === 1) {\n      Base.consoleLog();\n    }\n  });\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    var fmt = indent() + color('pending', '  - %s');\n    Base.consoleLog(fmt, test.title);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    var fmt;\n    if (test.speed === 'fast') {\n      fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s');\n      Base.consoleLog(fmt, test.title);\n    } else {\n      fmt = indent() + color('checkmark', '  ' + Base.symbols.ok) + color('pass', ' %s') + color(test.speed, ' (%dms)');\n      Base.consoleLog(fmt, test.title, test.duration);\n    }\n  });\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    Base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n  runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Spec, Base);\nSpec.description = 'hierarchical & verbose [default]';","map":{"version":3,"names":["Base","require","constants","EVENT_RUN_BEGIN","EVENT_RUN_END","EVENT_SUITE_BEGIN","EVENT_SUITE_END","EVENT_TEST_FAIL","EVENT_TEST_PASS","EVENT_TEST_PENDING","inherits","color","exports","module","Spec","runner","options","call","self","indents","n","indent","Array","join","on","consoleLog","suite","title","test","fmt","speed","symbols","ok","duration","once","epilogue","bind","description"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/reporters/spec.js"],"sourcesContent":["'use strict';\n/**\n * @module Spec\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Constructs a new `Spec` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Spec(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var indents = 0;\n  var n = 0;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.consoleLog();\n  });\n\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    ++indents;\n    Base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n  });\n\n  runner.on(EVENT_SUITE_END, function () {\n    --indents;\n    if (indents === 1) {\n      Base.consoleLog();\n    }\n  });\n\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    var fmt = indent() + color('pending', '  - %s');\n    Base.consoleLog(fmt, test.title);\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    var fmt;\n    if (test.speed === 'fast') {\n      fmt =\n        indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s');\n      Base.consoleLog(fmt, test.title);\n    } else {\n      fmt =\n        indent() +\n        color('checkmark', '  ' + Base.symbols.ok) +\n        color('pass', ' %s') +\n        color(test.speed, ' (%dms)');\n      Base.consoleLog(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    Base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Spec, Base);\n\nSpec.description = 'hierarchical & verbose [default]';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}