{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDifferenceInSeconds = exports.timestampSecondsToDate = exports.dateToTimestampSeconds = exports.parseDateString = void 0;\nfunction parseDateString(str) {\n  return new Date(str);\n}\nexports.parseDateString = parseDateString;\nfunction dateToTimestampSeconds(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\nexports.dateToTimestampSeconds = dateToTimestampSeconds;\nfunction timestampSecondsToDate(timestamp) {\n  return new Date(timestamp * 1000);\n}\nexports.timestampSecondsToDate = timestampSecondsToDate;\nfunction getDifferenceInSeconds(a, b) {\n  return Math.floor((a.valueOf() - b.valueOf()) / 1000);\n}\nexports.getDifferenceInSeconds = getDifferenceInSeconds;","map":{"version":3,"names":["parseDateString","str","Date","exports","dateToTimestampSeconds","date","Math","floor","valueOf","timestampSecondsToDate","timestamp","getDifferenceInSeconds","a","b"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\util\\date.ts"],"sourcesContent":["export function parseDateString(str: string): Date {\n  return new Date(str);\n}\n\nexport function dateToTimestampSeconds(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function timestampSecondsToDate(timestamp: number): Date {\n  return new Date(timestamp * 1000);\n}\n\nexport function getDifferenceInSeconds(a: Date, b: Date): number {\n  return Math.floor((a.valueOf() - b.valueOf()) / 1000);\n}\n"],"mappings":";;;;;;AAAA,SAAgBA,eAAeA,CAACC,GAAW;EACzC,OAAO,IAAIC,IAAI,CAACD,GAAG,CAAC;AACtB;AAFAE,OAAA,CAAAH,eAAA,GAAAA,eAAA;AAIA,SAAgBI,sBAAsBA,CAACC,IAAU;EAC/C,OAAOC,IAAI,CAACC,KAAK,CAACF,IAAI,CAACG,OAAO,EAAE,GAAG,IAAI,CAAC;AAC1C;AAFAL,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAIA,SAAgBK,sBAAsBA,CAACC,SAAiB;EACtD,OAAO,IAAIR,IAAI,CAACQ,SAAS,GAAG,IAAI,CAAC;AACnC;AAFAP,OAAA,CAAAM,sBAAA,GAAAA,sBAAA;AAIA,SAAgBE,sBAAsBA,CAACC,CAAO,EAAEC,CAAO;EACrD,OAAOP,IAAI,CAACC,KAAK,CAAC,CAACK,CAAC,CAACJ,OAAO,EAAE,GAAGK,CAAC,CAACL,OAAO,EAAE,IAAI,IAAI,CAAC;AACvD;AAFAL,OAAA,CAAAQ,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}