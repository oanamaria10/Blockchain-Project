{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\uploadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { create } from '@web3-storage/w3up-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadFile = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [cid, setCid] = useState('');\n\n  // Handle file input change\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Handle file upload\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    setUploading(true);\n    try {\n      // Create Web3 Storage client\n      const client = await create();\n\n      // Create a space and register (if needed)\n      const space = await client.createSpace('my-awesome-space');\n      await client.setCurrentSpace(space.did());\n\n      // Register space with your email (replace with your email)\n      await client.registerSpace('your-email@example.com');\n\n      // Upload the file\n      const fileToUpload = new File([file], file.name, {\n        type: file.type\n      });\n      const cid = await client.storeDirectory([fileToUpload]);\n      setCid(cid);\n      alert(`File uploaded successfully! CID: ${cid}`);\n    } catch (error) {\n      console.error('Error uploading file: ', error);\n      alert('Upload failed');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload File to Web3.Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), cid && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"File uploaded! View it on IPFS:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://${cid}.ipfs.w3s.link`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadFile, \"YS1ANnanioJ/c2vGLZi7Tbp7ISM=\");\n_c = UploadFile;\nexport default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","create","jsxDEV","_jsxDEV","UploadFile","_s","file","setFile","uploading","setUploading","cid","setCid","handleFileChange","e","target","files","handleUpload","alert","client","space","createSpace","setCurrentSpace","did","registerSpace","fileToUpload","File","name","type","storeDirectory","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","disabled","href","rel","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/uploadFile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { create } from '@web3-storage/w3up-client';\r\n\r\nconst UploadFile = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [cid, setCid] = useState('');\r\n\r\n  // Handle file input change\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  // Handle file upload\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      alert('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      // Create Web3 Storage client\r\n      const client = await create();\r\n\r\n      // Create a space and register (if needed)\r\n      const space = await client.createSpace('my-awesome-space');\r\n      await client.setCurrentSpace(space.did());\r\n\r\n      // Register space with your email (replace with your email)\r\n      await client.registerSpace('your-email@example.com');\r\n\r\n      // Upload the file\r\n      const fileToUpload = new File([file], file.name, { type: file.type });\r\n      const cid = await client.storeDirectory([fileToUpload]);\r\n\r\n      setCid(cid);\r\n      alert(`File uploaded successfully! CID: ${cid}`);\r\n    } catch (error) {\r\n      console.error('Error uploading file: ', error);\r\n      alert('Upload failed');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload File to Web3.Storage</h1>\r\n\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={uploading}>\r\n        {uploading ? 'Uploading...' : 'Upload File'}\r\n      </button>\r\n\r\n      {cid && (\r\n        <div>\r\n          <p>File uploaded! View it on IPFS:</p>\r\n          <a href={`https://${cid}.ipfs.w3s.link`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View File\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAElC;EACA,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,IAAI,EAAE;MACTW,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEAR,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMS,MAAM,GAAG,MAAMjB,MAAM,CAAC,CAAC;;MAE7B;MACA,MAAMkB,KAAK,GAAG,MAAMD,MAAM,CAACE,WAAW,CAAC,kBAAkB,CAAC;MAC1D,MAAMF,MAAM,CAACG,eAAe,CAACF,KAAK,CAACG,GAAG,CAAC,CAAC,CAAC;;MAEzC;MACA,MAAMJ,MAAM,CAACK,aAAa,CAAC,wBAAwB,CAAC;;MAEpD;MACA,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAACnB,IAAI,CAAC,EAAEA,IAAI,CAACoB,IAAI,EAAE;QAAEC,IAAI,EAAErB,IAAI,CAACqB;MAAK,CAAC,CAAC;MACrE,MAAMjB,GAAG,GAAG,MAAMQ,MAAM,CAACU,cAAc,CAAC,CAACJ,YAAY,CAAC,CAAC;MAEvDb,MAAM,CAACD,GAAG,CAAC;MACXO,KAAK,CAAE,oCAAmCP,GAAI,EAAC,CAAC;IAClD,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CZ,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,SAAS;MACRR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpChC,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACS,QAAQ,EAAExB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDhC,OAAA;MAAQkC,OAAO,EAAErB,YAAa;MAACsB,QAAQ,EAAE9B,SAAU;MAAAuB,QAAA,EAChDvB,SAAS,GAAG,cAAc,GAAG;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAERzB,GAAG,iBACFP,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtChC,OAAA;QAAGoC,IAAI,EAAG,WAAU7B,GAAI,gBAAgB;QAACI,MAAM,EAAC,QAAQ;QAAC0B,GAAG,EAAC,qBAAqB;QAAAT,QAAA,EAAC;MAEnF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA/DID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAiEhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}