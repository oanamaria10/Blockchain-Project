{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oana\\\\Desktop\\\\Blockchain\\\\Blockchain-Project\\\\front-end\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(null);\n  const [provider, setProvider] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', handleChainChanged);\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', handleChainChanged);\n      }\n    };\n  }, []);\n  async function connectWallet() {\n    if (!window.ethereum) {\n      setErrorMessage(\"Please install MetaMask!\");\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      await web3Provider.send(\"eth_requestAccounts\", []);\n      const signer = web3Provider.getSigner();\n      const address = await signer.getAddress();\n      const balance = await web3Provider.getBalance(address);\n      const formattedBalance = ethers.utils.formatEther(balance);\n      setProvider(web3Provider);\n      setAccountAddress(address);\n      setAccountBalance(formattedBalance);\n      onLogin(true, address, formattedBalance);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n      setErrorMessage(error.message);\n    }\n  }\n  async function handleAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      disconnectWallet();\n    } else {\n      const address = accounts[0];\n      setAccountAddress(address);\n      fetchBalance(address);\n      onLogin(true, address, accountBalance);\n    }\n  }\n  async function handleChainChanged() {\n    window.location.reload();\n  }\n  async function fetchBalance(address) {\n    if (!provider) return;\n    const balance = await provider.getBalance(address);\n    setAccountBalance(ethers.utils.formatEther(balance));\n  }\n  function disconnectWallet() {\n    setAccountAddress(null);\n    setAccountBalance(null);\n    setErrorMessage(null);\n    setProvider(null);\n    onLogin(false, null, null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!accountAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect with MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", accountAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", accountBalance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"1V/l5yREl5m9eRlj7c2CziwoXcs=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Login","onLogin","_s","errorMessage","setErrorMessage","accountAddress","setAccountAddress","accountBalance","setAccountBalance","provider","setProvider","window","ethereum","on","handleAccountsChanged","handleChainChanged","removeListener","connectWallet","web3Provider","providers","Web3Provider","send","signer","getSigner","address","getAddress","balance","getBalance","formattedBalance","utils","formatEther","error","console","message","accounts","length","disconnectWallet","fetchBalance","location","reload","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/front-end/src/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [accountAddress, setAccountAddress] = useState(null);\r\n    const [accountBalance, setAccountBalance] = useState(null);\r\n    const [provider, setProvider] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n            window.ethereum.on('chainChanged', handleChainChanged);\r\n        }\r\n\r\n        return () => {\r\n            if (window.ethereum) {\r\n                window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n                window.ethereum.removeListener('chainChanged', handleChainChanged);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    async function connectWallet() {\r\n        if (!window.ethereum) {\r\n            setErrorMessage(\"Please install MetaMask!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            await web3Provider.send(\"eth_requestAccounts\", []);\r\n\r\n            const signer = web3Provider.getSigner();\r\n            const address = await signer.getAddress();\r\n            const balance = await web3Provider.getBalance(address);\r\n            const formattedBalance = ethers.utils.formatEther(balance);\r\n\r\n            setProvider(web3Provider);\r\n            setAccountAddress(address);\r\n            setAccountBalance(formattedBalance);\r\n\r\n            onLogin(true, address, formattedBalance);\r\n        } catch (error) {\r\n            console.error(\"Error connecting to wallet:\", error);\r\n            setErrorMessage(error.message);\r\n        }\r\n    }\r\n\r\n    async function handleAccountsChanged(accounts) {\r\n        if (accounts.length === 0) {\r\n            disconnectWallet();\r\n        } else {\r\n            const address = accounts[0];\r\n            setAccountAddress(address);\r\n            fetchBalance(address);\r\n            onLogin(true, address, accountBalance);\r\n        }\r\n    }\r\n\r\n    async function handleChainChanged() {\r\n        window.location.reload();\r\n    }\r\n\r\n    async function fetchBalance(address) {\r\n        if (!provider) return;\r\n        const balance = await provider.getBalance(address);\r\n        setAccountBalance(ethers.utils.formatEther(balance));\r\n    }\r\n\r\n    function disconnectWallet() {\r\n        setAccountAddress(null);\r\n        setAccountBalance(null);\r\n        setErrorMessage(null);\r\n        setProvider(null);\r\n        onLogin(false, null, null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!accountAddress ? (\r\n                <button onClick={connectWallet}>Connect with MetaMask</button>\r\n            ) : (\r\n                <div>\r\n                    <h3>Address: {accountAddress}</h3>\r\n                    <h3>Balance: {accountBalance} ETH</h3>\r\n                    <button onClick={disconnectWallet}>Disconnect</button>\r\n                </div>\r\n            )}\r\n            {errorMessage && <h3 style={{ color: \"red\" }}>{errorMessage}</h3>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}