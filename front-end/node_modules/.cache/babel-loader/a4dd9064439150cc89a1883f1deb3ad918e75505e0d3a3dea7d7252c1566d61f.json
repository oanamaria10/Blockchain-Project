{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\uploadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { create } from '@web3-storage/w3up-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3StorageUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [cid, setCid] = useState('');\n  const [spaceName, setSpaceName] = useState('my-awesome-space'); // Example space name\n  const [email, setEmail] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const initializeClient = async () => {\n    try {\n      setStatus('Initializing client...');\n      const client = await create(); // Create the Web3.Storage client\n\n      if (email) {\n        await client.login(email); // Log in if email is provided\n        setIsLoggedIn(true);\n        setStatus('Logged in successfully!');\n      } else {\n        setStatus('Please provide a valid email to login.');\n      }\n    } catch (error) {\n      console.error('Error initializing client:', error);\n      setStatus('Error initializing client');\n    }\n  };\n  const createAndProvisionSpace = async client => {\n    try {\n      setStatus('Creating and provisioning space...');\n      const space = await client.createSpace(spaceName); // Create a new space with the given name\n\n      // Provision the space (this requires an account and login)\n      const myAccount = await client.login(email); // Log in using email (if necessary)\n      await myAccount.provision(space.did()); // Provision the space\n\n      // Save the space in the client's state store\n      await space.save();\n      await client.setCurrentSpace(space.did()); // Set this space as the current space\n\n      setStatus(`Space ${spaceName} created and provisioned successfully!`);\n      return space;\n    } catch (error) {\n      console.error('Error creating and provisioning space:', error);\n      setStatus('Error creating and provisioning space');\n    }\n  };\n  const uploadFile = async () => {\n    if (!file) {\n      setStatus('Please select a file to upload.');\n      return;\n    }\n    try {\n      setStatus('Uploading file...');\n      const client = await create(); // Initialize Web3.Storage client\n      const space = await createAndProvisionSpace(client); // Create & provision space\n\n      // Upload the file to Web3.Storage\n      const fileCid = await client.uploadFile(file);\n      setCid(fileCid); // Store the CID of the uploaded file\n\n      setStatus(`File uploaded successfully! CID: ${fileCid}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setStatus('Error uploading file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File to Web3.Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeClient,\n        children: \"Initialize and Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Status: Logged in successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), cid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File CID: \", cid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Web3StorageUpload, \"CZc0sJAvkrwfxJlP04avC1/hD8g=\");\n_c = Web3StorageUpload;\nexport default Web3StorageUpload;\nvar _c;\n$RefreshReg$(_c, \"Web3StorageUpload\");","map":{"version":3,"names":["React","useState","create","jsxDEV","_jsxDEV","Web3StorageUpload","_s","file","setFile","status","setStatus","cid","setCid","spaceName","setSpaceName","email","setEmail","isLoggedIn","setIsLoggedIn","handleFileChange","event","target","files","initializeClient","client","login","error","console","createAndProvisionSpace","space","createSpace","myAccount","provision","did","save","setCurrentSpace","uploadFile","fileCid","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","onClick","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/uploadFile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { create } from '@web3-storage/w3up-client';\r\n\r\nconst Web3StorageUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [cid, setCid] = useState('');\r\n  const [spaceName, setSpaceName] = useState('my-awesome-space'); // Example space name\r\n  const [email, setEmail] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const initializeClient = async () => {\r\n    try {\r\n      setStatus('Initializing client...');\r\n      const client = await create(); // Create the Web3.Storage client\r\n\r\n      if (email) {\r\n        await client.login(email); // Log in if email is provided\r\n        setIsLoggedIn(true);\r\n        setStatus('Logged in successfully!');\r\n      } else {\r\n        setStatus('Please provide a valid email to login.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing client:', error);\r\n      setStatus('Error initializing client');\r\n    }\r\n  };\r\n\r\n  const createAndProvisionSpace = async (client) => {\r\n    try {\r\n      setStatus('Creating and provisioning space...');\r\n\r\n      const space = await client.createSpace(spaceName); // Create a new space with the given name\r\n\r\n      // Provision the space (this requires an account and login)\r\n      const myAccount = await client.login(email); // Log in using email (if necessary)\r\n      await myAccount.provision(space.did()); // Provision the space\r\n\r\n      // Save the space in the client's state store\r\n      await space.save();\r\n      await client.setCurrentSpace(space.did()); // Set this space as the current space\r\n\r\n      setStatus(`Space ${spaceName} created and provisioned successfully!`);\r\n      return space;\r\n    } catch (error) {\r\n      console.error('Error creating and provisioning space:', error);\r\n      setStatus('Error creating and provisioning space');\r\n    }\r\n  };\r\n\r\n  const uploadFile = async () => {\r\n    if (!file) {\r\n      setStatus('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Uploading file...');\r\n\r\n      const client = await create(); // Initialize Web3.Storage client\r\n      const space = await createAndProvisionSpace(client); // Create & provision space\r\n\r\n      // Upload the file to Web3.Storage\r\n      const fileCid = await client.uploadFile(file);\r\n      setCid(fileCid); // Store the CID of the uploaded file\r\n\r\n      setStatus(`File uploaded successfully! CID: ${fileCid}`);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setStatus('Error uploading file');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload File to Web3.Storage</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button onClick={initializeClient}>Initialize and Log In</button>\r\n        {isLoggedIn && <p>Status: Logged in successfully</p>}\r\n      </div>\r\n\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={uploadFile}>Upload File</button>\r\n      </div>\r\n\r\n      <p>{status}</p>\r\n      {cid && <p>File CID: {cid}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Web3StorageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}