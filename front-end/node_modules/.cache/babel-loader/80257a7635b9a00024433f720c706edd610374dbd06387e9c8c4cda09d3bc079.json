{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { bindReporter } from './lib/bindReporter';\nimport { getFirstHidden } from './lib/getFirstHidden';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nexport var getFID = function (onReport) {\n  var metric = initMetric('FID');\n  var firstHidden = getFirstHidden();\n  var entryHandler = function (entry) {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < firstHidden.timeStamp) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      metric.isFinal = true;\n      report();\n    }\n  };\n  var po = observe('first-input', entryHandler);\n  var report = bindReporter(onReport, metric, po);\n  if (po) {\n    onHidden(function () {\n      po.takeRecords().map(entryHandler);\n      po.disconnect();\n    }, true);\n  } else {\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      window.perfMetrics.onFirstInputDelay(function (value, event) {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (event.timeStamp < firstHidden.timeStamp) {\n          metric.value = value;\n          metric.isFinal = true;\n          metric.entries = [{\n            entryType: 'first-input',\n            name: event.type,\n            target: event.target,\n            cancelable: event.cancelable,\n            startTime: event.timeStamp,\n            processingStart: event.timeStamp + value\n          }];\n          report();\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["bindReporter","getFirstHidden","initMetric","observe","onHidden","getFID","onReport","metric","firstHidden","entryHandler","entry","startTime","timeStamp","value","processingStart","entries","push","isFinal","report","po","takeRecords","map","disconnect","window","perfMetrics","onFirstInputDelay","event","entryType","name","type","target","cancelable"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@sentry\\tracing\\src\\browser\\web-vitals\\getFID.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getFirstHidden } from './lib/getFirstHidden';\nimport { initMetric } from './lib/initMetric';\nimport { observe, PerformanceEntryHandler } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { ReportHandler } from './types';\n\ninterface FIDPolyfillCallback {\n  (value: number, event: Event): void;\n}\n\ninterface FIDPolyfill {\n  onFirstInputDelay: (onReport: FIDPolyfillCallback) => void;\n}\n\ndeclare global {\n  interface Window {\n    perfMetrics: FIDPolyfill;\n  }\n}\n\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  cancelable?: boolean;\n  target?: Element;\n}\n\nexport const getFID = (onReport: ReportHandler): void => {\n  const metric = initMetric('FID');\n  const firstHidden = getFirstHidden();\n\n  const entryHandler = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < firstHidden.timeStamp) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      metric.isFinal = true;\n      report();\n    }\n  };\n\n  const po = observe('first-input', entryHandler as PerformanceEntryHandler);\n  const report = bindReporter(onReport, metric, po);\n\n  if (po) {\n    onHidden(() => {\n      po.takeRecords().map(entryHandler as PerformanceEntryHandler);\n      po.disconnect();\n    }, true);\n  } else {\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      window.perfMetrics.onFirstInputDelay((value: number, event: Event) => {\n        // Only report if the page wasn't hidden prior to the first input.\n        if (event.timeStamp < firstHidden.timeStamp) {\n          metric.value = value;\n          metric.isFinal = true;\n          metric.entries = [\n            {\n              entryType: 'first-input',\n              name: event.type,\n              target: event.target,\n              cancelable: event.cancelable,\n              startTime: event.timeStamp,\n              processingStart: event.timeStamp + value,\n            } as PerformanceEventTiming,\n          ];\n          report();\n        }\n      });\n    }\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,QAAiC,eAAe;AAChE,SAASC,QAAQ,QAAQ,gBAAgB;AAwBzC,OAAO,IAAMC,MAAM,GAAG,SAAAA,CAACC,QAAuB;EAC5C,IAAMC,MAAM,GAAGL,UAAU,CAAC,KAAK,CAAC;EAChC,IAAMM,WAAW,GAAGP,cAAc,EAAE;EAEpC,IAAMQ,YAAY,GAAG,SAAAA,CAACC,KAA6B;IACjD;IACA,IAAIA,KAAK,CAACC,SAAS,GAAGH,WAAW,CAACI,SAAS,EAAE;MAC3CL,MAAM,CAACM,KAAK,GAAGH,KAAK,CAACI,eAAe,GAAGJ,KAAK,CAACC,SAAS;MACtDJ,MAAM,CAACQ,OAAO,CAACC,IAAI,CAACN,KAAK,CAAC;MAC1BH,MAAM,CAACU,OAAO,GAAG,IAAI;MACrBC,MAAM,EAAE;;EAEZ,CAAC;EAED,IAAMC,EAAE,GAAGhB,OAAO,CAAC,aAAa,EAAEM,YAAuC,CAAC;EAC1E,IAAMS,MAAM,GAAGlB,YAAY,CAACM,QAAQ,EAAEC,MAAM,EAAEY,EAAE,CAAC;EAEjD,IAAIA,EAAE,EAAE;IACNf,QAAQ,CAAC;MACPe,EAAE,CAACC,WAAW,EAAE,CAACC,GAAG,CAACZ,YAAuC,CAAC;MAC7DU,EAAE,CAACG,UAAU,EAAE;IACjB,CAAC,EAAE,IAAI,CAAC;GACT,MAAM;IACL,IAAIC,MAAM,CAACC,WAAW,IAAID,MAAM,CAACC,WAAW,CAACC,iBAAiB,EAAE;MAC9DF,MAAM,CAACC,WAAW,CAACC,iBAAiB,CAAC,UAACZ,KAAa,EAAEa,KAAY;QAC/D;QACA,IAAIA,KAAK,CAACd,SAAS,GAAGJ,WAAW,CAACI,SAAS,EAAE;UAC3CL,MAAM,CAACM,KAAK,GAAGA,KAAK;UACpBN,MAAM,CAACU,OAAO,GAAG,IAAI;UACrBV,MAAM,CAACQ,OAAO,GAAG,CACf;YACEY,SAAS,EAAE,aAAa;YACxBC,IAAI,EAAEF,KAAK,CAACG,IAAI;YAChBC,MAAM,EAAEJ,KAAK,CAACI,MAAM;YACpBC,UAAU,EAAEL,KAAK,CAACK,UAAU;YAC5BpB,SAAS,EAAEe,KAAK,CAACd,SAAS;YAC1BE,eAAe,EAAEY,KAAK,CAACd,SAAS,GAAGC;WACV,CAC5B;UACDK,MAAM,EAAE;;MAEZ,CAAC,CAAC;;;AAGR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}