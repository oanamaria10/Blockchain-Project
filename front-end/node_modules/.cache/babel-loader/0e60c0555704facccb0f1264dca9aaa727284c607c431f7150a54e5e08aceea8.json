{"ast":null,"code":"/**\n * Number of bits per byte\n */\nconst BITS_PER_BYTE = 8;\n\n/**\n * The number of Frs per Block.\n */\nexport const FRS_PER_QUAD = 4;\nexport const LEAFS_PER_QUAD = /** @type {4n} */BigInt(FRS_PER_QUAD);\n\n/**\n * The amount of bits in an Fr when not padded.\n */\nexport const IN_BITS_FR = 254;\n/**\n * The amount of bits in an Fr when padded.\n */\nexport const OUT_BITS_FR = 256;\nexport const IN_BYTES_PER_QUAD = /** @type {127} */\nFRS_PER_QUAD * IN_BITS_FR / BITS_PER_BYTE;\nexport const OUT_BYTES_PER_QUAD = /** @type {128} */\nFRS_PER_QUAD * OUT_BITS_FR / BITS_PER_BYTE;\nexport const PADDED_BYTES_PER_QUAD = /** @type {127n} */\nBigInt(IN_BYTES_PER_QUAD);\nexport const EXPANDED_BYTES_PER_QUAD = /** @type {128n} */\nBigInt(OUT_BYTES_PER_QUAD);\nexport const BYTES_PER_FR = /** @type {32} */\nOUT_BYTES_PER_QUAD / FRS_PER_QUAD;\nexport const FR_RATIO = IN_BITS_FR / OUT_BITS_FR;\n\n/**\n * Size of a node in the merkle tree.\n */\nexport const NODE_SIZE = /** @type {32} */\nOUT_BYTES_PER_QUAD / FRS_PER_QUAD;\nexport const EXPANDED_BYTES_PER_NODE = /** @type {32n} */BigInt(NODE_SIZE);\n\n/**\n * The smallest amount of data for which FR32 padding has a defined result.\n * Silently upgrading 2 leaves to 4 would break the symmetry so we require\n * an extra byte and the rest can be 0 padded to expand to 4 leaves.\n */\nexport const MIN_PAYLOAD_SIZE = 2 * NODE_SIZE + 1;","map":{"version":3,"names":["BITS_PER_BYTE","FRS_PER_QUAD","LEAFS_PER_QUAD","BigInt","IN_BITS_FR","OUT_BITS_FR","IN_BYTES_PER_QUAD","OUT_BYTES_PER_QUAD","PADDED_BYTES_PER_QUAD","EXPANDED_BYTES_PER_QUAD","BYTES_PER_FR","FR_RATIO","NODE_SIZE","EXPANDED_BYTES_PER_NODE","MIN_PAYLOAD_SIZE"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/data-segment/src/constant.js"],"sourcesContent":["/**\n * Number of bits per byte\n */\nconst BITS_PER_BYTE = 8\n\n/**\n * The number of Frs per Block.\n */\nexport const FRS_PER_QUAD = 4\n\nexport const LEAFS_PER_QUAD = /** @type {4n} */ (BigInt(FRS_PER_QUAD))\n\n/**\n * The amount of bits in an Fr when not padded.\n */\nexport const IN_BITS_FR = 254\n/**\n * The amount of bits in an Fr when padded.\n */\nexport const OUT_BITS_FR = 256\n\nexport const IN_BYTES_PER_QUAD =\n  /** @type {127} */\n  ((FRS_PER_QUAD * IN_BITS_FR) / BITS_PER_BYTE)\n\nexport const OUT_BYTES_PER_QUAD =\n  /** @type {128} */\n  ((FRS_PER_QUAD * OUT_BITS_FR) / BITS_PER_BYTE)\n\nexport const PADDED_BYTES_PER_QUAD = /** @type {127n} */ (\n  BigInt(IN_BYTES_PER_QUAD)\n)\n\nexport const EXPANDED_BYTES_PER_QUAD = /** @type {128n} */ (\n  BigInt(OUT_BYTES_PER_QUAD)\n)\n\nexport const BYTES_PER_FR =\n  /** @type {32} */\n  OUT_BYTES_PER_QUAD / FRS_PER_QUAD\n\nexport const FR_RATIO = IN_BITS_FR / OUT_BITS_FR\n\n/**\n * Size of a node in the merkle tree.\n */\nexport const NODE_SIZE =\n  /** @type {32} */\n  (OUT_BYTES_PER_QUAD / FRS_PER_QUAD)\n\nexport const EXPANDED_BYTES_PER_NODE = /** @type {32n} */ (BigInt(NODE_SIZE))\n\n/**\n * The smallest amount of data for which FR32 padding has a defined result.\n * Silently upgrading 2 leaves to 4 would break the symmetry so we require\n * an extra byte and the rest can be 0 padded to expand to 4 leaves.\n */\nexport const MIN_PAYLOAD_SIZE = 2 * NODE_SIZE + 1\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,aAAa,GAAG,CAAC;;AAEvB;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAE7B,OAAO,MAAMC,cAAc,GAAG,iBAAmBC,MAAM,CAACF,YAAY,CAAE;;AAEtE;AACA;AACA;AACA,OAAO,MAAMG,UAAU,GAAG,GAAG;AAC7B;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,GAAG;AAE9B,OAAO,MAAMC,iBAAiB,GAC5B;AACEL,YAAY,GAAGG,UAAU,GAAIJ,aAAc;AAE/C,OAAO,MAAMO,kBAAkB,GAC7B;AACEN,YAAY,GAAGI,WAAW,GAAIL,aAAc;AAEhD,OAAO,MAAMQ,qBAAqB,GAAG;AACnCL,MAAM,CAACG,iBAAiB,CACzB;AAED,OAAO,MAAMG,uBAAuB,GAAG;AACrCN,MAAM,CAACI,kBAAkB,CAC1B;AAED,OAAO,MAAMG,YAAY,GACvB;AACAH,kBAAkB,GAAGN,YAAY;AAEnC,OAAO,MAAMU,QAAQ,GAAGP,UAAU,GAAGC,WAAW;;AAEhD;AACA;AACA;AACA,OAAO,MAAMO,SAAS,GACpB;AACCL,kBAAkB,GAAGN,YAAa;AAErC,OAAO,MAAMY,uBAAuB,GAAG,kBAAoBV,MAAM,CAACS,SAAS,CAAE;;AAE7E;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,gBAAgB,GAAG,CAAC,GAAGF,SAAS,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}