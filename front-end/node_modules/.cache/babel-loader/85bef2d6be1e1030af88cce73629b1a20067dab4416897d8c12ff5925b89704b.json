{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSuccessfulJsonResponse = exports.isValidJsonResponse = exports.isValidJsonRequest = exports.parseJsonResponse = void 0;\nconst errors_1 = require(\"../core/errors\");\nconst errors_list_1 = require(\"../core/errors-list\");\nfunction parseJsonResponse(text) {\n  try {\n    const json = JSON.parse(text);\n    const responses = Array.isArray(json) ? json : [json];\n    for (const response of responses) {\n      if (!isValidJsonResponse(response)) {\n        // We are sending the proper error inside the catch part of the statement.\n        // We just need to raise anything here.\n        // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error\n        throw new Error();\n      }\n    }\n    return json;\n  } catch {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.NETWORK.INVALID_JSON_RESPONSE, {\n      response: text\n    });\n  }\n}\nexports.parseJsonResponse = parseJsonResponse;\nfunction isValidJsonRequest(payload) {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n  if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\") {\n    return false;\n  }\n  if (typeof payload.method !== \"string\") {\n    return false;\n  }\n  if (payload.params !== undefined && !Array.isArray(payload.params)) {\n    return false;\n  }\n  return true;\n}\nexports.isValidJsonRequest = isValidJsonRequest;\nfunction isValidJsonResponse(payload) {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n  if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\" && payload.id !== null) {\n    return false;\n  }\n  if (payload.id === null && payload.error === undefined) {\n    return false;\n  }\n  if (payload.result === undefined && payload.error === undefined) {\n    return false;\n  }\n  if (payload.error !== undefined) {\n    if (typeof payload.error.code !== \"number\") {\n      return false;\n    }\n    if (typeof payload.error.message !== \"string\") {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isValidJsonResponse = isValidJsonResponse;\nfunction isSuccessfulJsonResponse(payload) {\n  return \"result\" in payload;\n}\nexports.isSuccessfulJsonResponse = isSuccessfulJsonResponse;","map":{"version":3,"names":["errors_1","require","errors_list_1","parseJsonResponse","text","json","JSON","parse","responses","Array","isArray","response","isValidJsonResponse","Error","HardhatError","ERRORS","NETWORK","INVALID_JSON_RESPONSE","exports","isValidJsonRequest","payload","jsonrpc","id","method","params","undefined","error","result","code","message","isSuccessfulJsonResponse"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\util\\jsonrpc.ts"],"sourcesContent":["import { HardhatError } from \"../core/errors\";\nimport { ERRORS } from \"../core/errors-list\";\n\nexport interface JsonRpcRequest {\n  jsonrpc: string;\n  method: string;\n  params: any[];\n  id: number | string;\n}\n\nexport interface SuccessfulJsonRpcResponse {\n  jsonrpc: string;\n  id: number | string;\n  result: any;\n}\n\nexport interface FailedJsonRpcResponse {\n  jsonrpc: string;\n  id: number | string | null;\n  error: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\nexport type JsonRpcResponse = SuccessfulJsonRpcResponse | FailedJsonRpcResponse;\n\nexport function parseJsonResponse(\n  text: string\n): JsonRpcResponse | JsonRpcResponse[] {\n  try {\n    const json = JSON.parse(text);\n\n    const responses = Array.isArray(json) ? json : [json];\n    for (const response of responses) {\n      if (!isValidJsonResponse(response)) {\n        // We are sending the proper error inside the catch part of the statement.\n        // We just need to raise anything here.\n        // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error\n        throw new Error();\n      }\n    }\n\n    return json;\n  } catch {\n    throw new HardhatError(ERRORS.NETWORK.INVALID_JSON_RESPONSE, {\n      response: text,\n    });\n  }\n}\n\nexport function isValidJsonRequest(payload: any): boolean {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n\n  if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof payload.method !== \"string\") {\n    return false;\n  }\n\n  if (payload.params !== undefined && !Array.isArray(payload.params)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isValidJsonResponse(payload: any) {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n\n  if (\n    typeof payload.id !== \"number\" &&\n    typeof payload.id !== \"string\" &&\n    payload.id !== null\n  ) {\n    return false;\n  }\n\n  if (payload.id === null && payload.error === undefined) {\n    return false;\n  }\n\n  if (payload.result === undefined && payload.error === undefined) {\n    return false;\n  }\n\n  if (payload.error !== undefined) {\n    if (typeof payload.error.code !== \"number\") {\n      return false;\n    }\n\n    if (typeof payload.error.message !== \"string\") {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isSuccessfulJsonResponse(\n  payload: JsonRpcResponse\n): payload is SuccessfulJsonRpcResponse {\n  return \"result\" in payload;\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AA2BA,SAAgBE,iBAAiBA,CAC/BC,IAAY;EAEZ,IAAI;IACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;IAE7B,MAAMI,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;IACrD,KAAK,MAAMM,QAAQ,IAAIH,SAAS,EAAE;MAChC,IAAI,CAACI,mBAAmB,CAACD,QAAQ,CAAC,EAAE;QAClC;QACA;QACA;QACA,MAAM,IAAIE,KAAK,EAAE;;;IAIrB,OAAOR,IAAI;GACZ,CAAC,MAAM;IACN,MAAM,IAAIL,QAAA,CAAAc,YAAY,CAACZ,aAAA,CAAAa,MAAM,CAACC,OAAO,CAACC,qBAAqB,EAAE;MAC3DN,QAAQ,EAAEP;KACX,CAAC;;AAEN;AAtBAc,OAAA,CAAAf,iBAAA,GAAAA,iBAAA;AAwBA,SAAgBgB,kBAAkBA,CAACC,OAAY;EAC7C,IAAIA,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;;EAGd,IAAI,OAAOD,OAAO,CAACE,EAAE,KAAK,QAAQ,IAAI,OAAOF,OAAO,CAACE,EAAE,KAAK,QAAQ,EAAE;IACpE,OAAO,KAAK;;EAGd,IAAI,OAAOF,OAAO,CAACG,MAAM,KAAK,QAAQ,EAAE;IACtC,OAAO,KAAK;;EAGd,IAAIH,OAAO,CAACI,MAAM,KAAKC,SAAS,IAAI,CAAChB,KAAK,CAACC,OAAO,CAACU,OAAO,CAACI,MAAM,CAAC,EAAE;IAClE,OAAO,KAAK;;EAGd,OAAO,IAAI;AACb;AAlBAN,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAoBA,SAAgBP,mBAAmBA,CAACQ,OAAY;EAC9C,IAAIA,OAAO,CAACC,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;;EAGd,IACE,OAAOD,OAAO,CAACE,EAAE,KAAK,QAAQ,IAC9B,OAAOF,OAAO,CAACE,EAAE,KAAK,QAAQ,IAC9BF,OAAO,CAACE,EAAE,KAAK,IAAI,EACnB;IACA,OAAO,KAAK;;EAGd,IAAIF,OAAO,CAACE,EAAE,KAAK,IAAI,IAAIF,OAAO,CAACM,KAAK,KAAKD,SAAS,EAAE;IACtD,OAAO,KAAK;;EAGd,IAAIL,OAAO,CAACO,MAAM,KAAKF,SAAS,IAAIL,OAAO,CAACM,KAAK,KAAKD,SAAS,EAAE;IAC/D,OAAO,KAAK;;EAGd,IAAIL,OAAO,CAACM,KAAK,KAAKD,SAAS,EAAE;IAC/B,IAAI,OAAOL,OAAO,CAACM,KAAK,CAACE,IAAI,KAAK,QAAQ,EAAE;MAC1C,OAAO,KAAK;;IAGd,IAAI,OAAOR,OAAO,CAACM,KAAK,CAACG,OAAO,KAAK,QAAQ,EAAE;MAC7C,OAAO,KAAK;;;EAIhB,OAAO,IAAI;AACb;AAhCAX,OAAA,CAAAN,mBAAA,GAAAA,mBAAA;AAkCA,SAAgBkB,wBAAwBA,CACtCV,OAAwB;EAExB,OAAO,QAAQ,IAAIA,OAAO;AAC5B;AAJAF,OAAA,CAAAY,wBAAA,GAAAA,wBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}