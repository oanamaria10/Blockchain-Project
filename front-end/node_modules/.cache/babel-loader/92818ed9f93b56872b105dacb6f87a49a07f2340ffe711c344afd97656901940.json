{"ast":null,"code":"'use strict';\n\n/**\n * @module JSON\n */\n/**\n * Module dependencies.\n */\nvar Base = require('./base');\nvar fs = require('fs');\nvar path = require('path');\nconst createUnsupportedError = require('../errors').createUnsupportedError;\nconst utils = require('../utils');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONReporter(runner, options = {}) {\n  Base.call(this, runner, options);\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  var output;\n  if (options.reporterOption && options.reporterOption.output) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError('file output not supported in browser');\n    }\n    output = options.reporterOption.output;\n  }\n  runner.on(EVENT_TEST_END, function (test) {\n    tests.push(test);\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    passes.push(test);\n  });\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    failures.push(test);\n  });\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    pending.push(test);\n  });\n  runner.once(EVENT_RUN_END, function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n    runner.testResults = obj;\n    var json = JSON.stringify(obj, null, 2);\n    if (output) {\n      try {\n        fs.mkdirSync(path.dirname(output), {\n          recursive: true\n        });\n        fs.writeFileSync(output, json);\n      } catch (err) {\n        console.error(`${Base.symbols.err} [mocha] writing output to \"${output}\" failed: ${err.message}\\n`);\n        process.stdout.write(json);\n      }\n    } else {\n      process.stdout.write(json);\n    }\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  var err = test.err || {};\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed,\n    err: cleanCycles(err)\n  };\n}\n\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(JSON.stringify(obj, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        // Instead of going in a circle, we'll print [object Object]\n        return '' + value;\n      }\n      cache.push(value);\n    }\n    return value;\n  }));\n}\n\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\nJSONReporter.description = 'single JSON object';","map":{"version":3,"names":["Base","require","fs","path","createUnsupportedError","utils","constants","EVENT_TEST_PASS","EVENT_TEST_PENDING","EVENT_TEST_FAIL","EVENT_TEST_END","EVENT_RUN_END","exports","module","JSONReporter","runner","options","call","self","tests","pending","failures","passes","output","reporterOption","isBrowser","on","test","push","once","obj","stats","map","clean","testResults","json","JSON","stringify","mkdirSync","dirname","recursive","writeFileSync","err","console","error","symbols","message","process","stdout","write","Error","errorJSON","title","fullTitle","file","duration","currentRetry","speed","cleanCycles","cache","parse","key","value","indexOf","res","Object","getOwnPropertyNames","forEach","description"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/reporters/json.js"],"sourcesContent":["'use strict';\n/**\n * @module JSON\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar fs = require('fs');\nvar path = require('path');\nconst createUnsupportedError = require('../errors').createUnsupportedError;\nconst utils = require('../utils');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Constructs a new `JSON` reporter instance.\n *\n * @public\n * @class JSON\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction JSONReporter(runner, options = {}) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  var output;\n\n  if (options.reporterOption && options.reporterOption.output) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError('file output not supported in browser');\n    }\n    output = options.reporterOption.output;\n  }\n\n  runner.on(EVENT_TEST_END, function (test) {\n    tests.push(test);\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    passes.push(test);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test) {\n    failures.push(test);\n  });\n\n  runner.on(EVENT_TEST_PENDING, function (test) {\n    pending.push(test);\n  });\n\n  runner.once(EVENT_RUN_END, function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    var json = JSON.stringify(obj, null, 2);\n    if (output) {\n      try {\n        fs.mkdirSync(path.dirname(output), {recursive: true});\n        fs.writeFileSync(output, json);\n      } catch (err) {\n        console.error(\n          `${Base.symbols.err} [mocha] writing output to \"${output}\" failed: ${err.message}\\n`\n        );\n        process.stdout.write(json);\n      }\n    } else {\n      process.stdout.write(json);\n    }\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  var err = test.err || {};\n  if (err instanceof Error) {\n    err = errorJSON(err);\n  }\n\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    file: test.file,\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    speed: test.speed,\n    err: cleanCycles(err)\n  };\n}\n\n/**\n * Replaces any circular references inside `obj` with '[object Object]'\n *\n * @private\n * @param {Object} obj\n * @return {Object}\n */\nfunction cleanCycles(obj) {\n  var cache = [];\n  return JSON.parse(\n    JSON.stringify(obj, function (key, value) {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.indexOf(value) !== -1) {\n          // Instead of going in a circle, we'll print [object Object]\n          return '' + value;\n        }\n        cache.push(value);\n      }\n\n      return value;\n    })\n  );\n}\n\n/**\n * Transform an Error object into a JSON object.\n *\n * @private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\nJSONReporter.description = 'single JSON object';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}