{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\uploadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { create } from '@web3-storage/w3up-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [cid, setCid] = useState('');\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n\n  // Handle file input change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handle email input change\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // Handle token input change (API token for login)\n  const handleTokenChange = event => {\n    setToken(event.target.value);\n  };\n\n  // Initialize the Web3.Storage client and log in\n  const initializeClient = async () => {\n    if (!token) {\n      setStatus('Please enter a valid API token.');\n      return;\n    }\n    try {\n      setStatus('Initializing client...');\n      const client = await create({\n        token\n      });\n      if (email) {\n        const myAccount = await client.login(email); // Log in using email\n\n        // Wait for the email confirmation and account setup\n        while (true) {\n          const res = await myAccount.plan.get();\n          if (res.ok) break;\n          console.log('Waiting for payment plan to be selected...');\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        const space = await client.createSpace('my-awesome-space'); // Create space\n        await myAccount.provision(space.did()); // Provision the space\n\n        // Set the current space\n        await client.setCurrentSpace(space.did());\n        setStatus(`Space created and ready! Space DID: ${space.did()}`);\n      } else {\n        setStatus('Please provide a valid email to login.');\n      }\n    } catch (error) {\n      console.error('Error initializing client:', error);\n      setStatus('Error initializing client.');\n    }\n  };\n\n  // Upload the file to the Web3.Storage\n  const uploadFile = async () => {\n    if (!file) {\n      setStatus('Please select a file to upload.');\n      return;\n    }\n    try {\n      setStatus('Uploading file...');\n      const client = await create({\n        token\n      });\n      const space = await client.getCurrentSpace(); // Get the current space\n      const fileCid = await client.uploadFile(file); // Upload the file\n\n      setCid(fileCid); // Store the CID of the uploaded file\n      setStatus(`File uploaded successfully! CID: ${fileCid}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setStatus('Error uploading file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File to Web3.Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your Web3.Storage API Token\",\n        value: token,\n        onChange: handleTokenChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeClient,\n        children: \"Initialize and Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), cid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File CID: \", cid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"sffIKT8csqbwMTm2fdN4e2v6z0k=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","create","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","status","setStatus","cid","setCid","email","setEmail","token","setToken","handleFileChange","event","target","files","handleEmailChange","value","handleTokenChange","initializeClient","client","myAccount","login","res","plan","get","ok","console","log","Promise","resolve","setTimeout","space","createSpace","provision","did","setCurrentSpace","error","uploadFile","getCurrentSpace","fileCid","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/uploadFile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { create } from '@web3-storage/w3up-client';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [cid, setCid] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [token, setToken] = useState('');\r\n\r\n  // Handle file input change\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  // Handle email input change\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  // Handle token input change (API token for login)\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n  };\r\n\r\n  // Initialize the Web3.Storage client and log in\r\n  const initializeClient = async () => {\r\n    if (!token) {\r\n      setStatus('Please enter a valid API token.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Initializing client...');\r\n      const client = await create({ token });\r\n\r\n      if (email) {\r\n        const myAccount = await client.login(email); // Log in using email\r\n\r\n        // Wait for the email confirmation and account setup\r\n        while (true) {\r\n          const res = await myAccount.plan.get();\r\n          if (res.ok) break;\r\n          console.log('Waiting for payment plan to be selected...');\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        }\r\n\r\n        const space = await client.createSpace('my-awesome-space'); // Create space\r\n        await myAccount.provision(space.did()); // Provision the space\r\n\r\n        // Set the current space\r\n        await client.setCurrentSpace(space.did());\r\n\r\n        setStatus(`Space created and ready! Space DID: ${space.did()}`);\r\n      } else {\r\n        setStatus('Please provide a valid email to login.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing client:', error);\r\n      setStatus('Error initializing client.');\r\n    }\r\n  };\r\n\r\n  // Upload the file to the Web3.Storage\r\n  const uploadFile = async () => {\r\n    if (!file) {\r\n      setStatus('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Uploading file...');\r\n\r\n      const client = await create({ token });\r\n      const space = await client.getCurrentSpace(); // Get the current space\r\n      const fileCid = await client.uploadFile(file); // Upload the file\r\n\r\n      setCid(fileCid); // Store the CID of the uploaded file\r\n      setStatus(`File uploaded successfully! CID: ${fileCid}`);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setStatus('Error uploading file.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload File to Web3.Storage</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your Web3.Storage API Token\"\r\n          value={token}\r\n          onChange={handleTokenChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n        />\r\n        <button onClick={initializeClient}>Initialize and Log In</button>\r\n      </div>\r\n\r\n      <div>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={uploadFile}>Upload File</button>\r\n      </div>\r\n\r\n      <p>{status}</p>\r\n      {cid && <p>File CID: {cid}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}