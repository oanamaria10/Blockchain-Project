{"ast":null,"code":"'use strict';\n\n/**\n * @module Progress\n */\n/**\n * Module dependencies.\n */\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Constructs a new `Progress` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Progress(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var width = Base.window.width * 0.5 | 0;\n  var total = runner.total;\n  var complete = 0;\n  var lastN = -1;\n\n  // default chars\n  options = options || {};\n  var reporterOptions = options.reporterOptions || {};\n  options.open = reporterOptions.open || '[';\n  options.complete = reporterOptions.complete || '▬';\n  options.incomplete = reporterOptions.incomplete || Base.symbols.dot;\n  options.close = reporterOptions.close || ']';\n  options.verbose = reporterOptions.verbose || false;\n\n  // tests started\n  runner.on(EVENT_RUN_BEGIN, function () {\n    process.stdout.write('\\n');\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on(EVENT_TEST_END, function () {\n    complete++;\n    var percent = complete / total;\n    var n = width * percent | 0;\n    var i = width - n;\n    if (n === lastN && !options.verbose) {\n      // Don't re-render the line if it hasn't changed\n      return;\n    }\n    lastN = n;\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.once(EVENT_RUN_END, function () {\n    cursor.show();\n    process.stdout.write('\\n');\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Progress, Base);\nProgress.description = 'a progress bar';","map":{"version":3,"names":["Base","require","constants","EVENT_RUN_BEGIN","EVENT_TEST_END","EVENT_RUN_END","inherits","color","cursor","exports","module","Progress","colors","progress","runner","options","call","self","width","window","total","complete","lastN","reporterOptions","open","incomplete","symbols","dot","close","verbose","on","process","stdout","write","hide","percent","n","i","CR","Array","join","once","show","epilogue","description"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/reporters/progress.js"],"sourcesContent":["'use strict';\n/**\n * @module Progress\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\nvar cursor = Base.cursor;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Constructs a new `Progress` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Progress(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var width = (Base.window.width * 0.5) | 0;\n  var total = runner.total;\n  var complete = 0;\n  var lastN = -1;\n\n  // default chars\n  options = options || {};\n  var reporterOptions = options.reporterOptions || {};\n\n  options.open = reporterOptions.open || '[';\n  options.complete = reporterOptions.complete || '▬';\n  options.incomplete = reporterOptions.incomplete || Base.symbols.dot;\n  options.close = reporterOptions.close || ']';\n  options.verbose = reporterOptions.verbose || false;\n\n  // tests started\n  runner.on(EVENT_RUN_BEGIN, function () {\n    process.stdout.write('\\n');\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on(EVENT_TEST_END, function () {\n    complete++;\n\n    var percent = complete / total;\n    var n = (width * percent) | 0;\n    var i = width - n;\n\n    if (n === lastN && !options.verbose) {\n      // Don't re-render the line if it hasn't changed\n      return;\n    }\n    lastN = n;\n\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.once(EVENT_RUN_END, function () {\n    cursor.show();\n    process.stdout.write('\\n');\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Progress, Base);\n\nProgress.description = 'a progress bar';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}