{"ast":null,"code":"import * as API from \"./api.js\";\nimport * as File from \"./file.js\";\nimport * as Directory from \"./directory.js\";\nexport * from \"./api.js\";\nexport { encode, decode, NodeType, code } from \"./codec.js\";\nexport { create as createFileWriter, close as closeFile, write, configure, defaults, UnixFSLeaf, UnixFSRawLeaf } from \"./file.js\";\nexport { create as createDirectoryWriter, close as closeDirectory, fork as forkDirectory, set, remove } from \"./directory.js\";\nexport { create as createShardedDirectoryWriter, close as closeShardedDirectory, fork as forkShardedDirectory } from \"./sharded-directory.js\";\n\n/**\n * @template [Layout=unknown]\n * @param {API.Options<Layout>} options\n * @returns {API.View<Layout>}\n */\nexport const createWriter = ({\n  writable,\n  settings = File.defaults()\n}) => new FileSystemWriter({\n  writer: writable.getWriter(),\n  settings\n});\n\n/**\n * @template {{writer:API.BlockWriter}} View\n * @param {View} view\n * @param {API.CloseOptions} options\n */\nexport const close = async (view, {\n  releaseLock = true,\n  closeWriter = true\n} = {}) => {\n  if (closeWriter) {\n    await view.writer.close();\n  } else if (releaseLock) {\n    view.writer.releaseLock();\n  }\n  return view;\n};\n\n/**\n * @template [Layout=unknown]\n * @implemets {API.View<Layout>}\n */\nclass FileSystemWriter {\n  /**\n   * @param {object} options\n   * @param {API.BlockWriter} options.writer\n   * @param {Partial<API.EncoderSettings<Layout>>} options.settings\n   */\n  constructor({\n    writer,\n    settings\n  }) {\n    this.writer = writer;\n    this.settings = File.configure(settings);\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createFileWriter({\n    settings = this.settings,\n    metadata\n  } = {}) {\n    return File.create({\n      writer: this.writer,\n      settings,\n      metadata\n    });\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createDirectoryWriter({\n    settings = this.settings,\n    metadata\n  } = {}) {\n    return Directory.create({\n      writer: this.writer,\n      settings,\n      metadata\n    });\n  }\n\n  /**\n   * @param {API.CloseOptions} [options]\n   */\n  close(options) {\n    return close(this, options);\n  }\n}\n\n// BlockSizeLimit specifies the maximum size an imported block can have.\n// @see https://github.com/ipfs/go-unixfs/blob/68c015a6f317ed5e21a4870f7c423a4b38b90a96/importer/helpers/helpers.go#L7-L8\nexport const BLOCK_SIZE_LIMIT = 1048576; // 1 MB\nexport const defaultCapacity = BLOCK_SIZE_LIMIT * 100;\n\n/**\n * Creates `QueuingStrategy` that can fit blocks with total size up to given\n * byteLength.\n *\n * @param {number} byteLength\n * @returns {Required<QueuingStrategy<API.Block>>}\n */\nexport const withCapacity = (byteLength = defaultCapacity) => ({\n  highWaterMark: byteLength,\n  size: block => block.bytes.length\n});","map":{"version":3,"names":["API","File","Directory","encode","decode","NodeType","code","create","createFileWriter","close","closeFile","write","configure","defaults","UnixFSLeaf","UnixFSRawLeaf","createDirectoryWriter","closeDirectory","fork","forkDirectory","set","remove","createShardedDirectoryWriter","closeShardedDirectory","forkShardedDirectory","createWriter","writable","settings","FileSystemWriter","writer","getWriter","view","releaseLock","closeWriter","constructor","metadata","options","BLOCK_SIZE_LIMIT","defaultCapacity","withCapacity","byteLength","highWaterMark","size","block","bytes","length"],"sources":["C:/FACULTATE/Proiect/node_modules/@ipld/unixfs/src/lib.js"],"sourcesContent":["import * as API from \"./api.js\"\nimport * as File from \"./file.js\"\nimport * as Directory from \"./directory.js\"\n\nexport * from \"./api.js\"\n\nexport { encode, decode, NodeType, code } from \"./codec.js\"\nexport {\n  create as createFileWriter,\n  close as closeFile,\n  write,\n  configure,\n  defaults,\n  UnixFSLeaf,\n  UnixFSRawLeaf,\n} from \"./file.js\"\nexport {\n  create as createDirectoryWriter,\n  close as closeDirectory,\n  fork as forkDirectory,\n  set,\n  remove,\n} from \"./directory.js\"\nexport {\n  create as createShardedDirectoryWriter,\n  close as closeShardedDirectory,\n  fork as forkShardedDirectory,\n} from \"./sharded-directory.js\"\n\n/**\n * @template [Layout=unknown]\n * @param {API.Options<Layout>} options\n * @returns {API.View<Layout>}\n */\nexport const createWriter = ({ writable, settings = File.defaults() }) =>\n  new FileSystemWriter({\n    writer: writable.getWriter(),\n    settings,\n  })\n\n/**\n * @template {{writer:API.BlockWriter}} View\n * @param {View} view\n * @param {API.CloseOptions} options\n */\nexport const close = async (\n  view,\n  { releaseLock = true, closeWriter = true } = {}\n) => {\n  if (closeWriter) {\n    await view.writer.close()\n  } else if (releaseLock) {\n    view.writer.releaseLock()\n  }\n\n  return view\n}\n\n/**\n * @template [Layout=unknown]\n * @implemets {API.View<Layout>}\n */\nclass FileSystemWriter {\n  /**\n   * @param {object} options\n   * @param {API.BlockWriter} options.writer\n   * @param {Partial<API.EncoderSettings<Layout>>} options.settings\n   */\n  constructor({ writer, settings }) {\n    this.writer = writer\n    this.settings = File.configure(settings)\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createFileWriter({ settings = this.settings, metadata } = {}) {\n    return File.create({\n      writer: this.writer,\n      settings,\n      metadata,\n    })\n  }\n\n  /**\n   * @template [L=unknown]\n   * @param {API.WriterOptions<L|Layout>} config\n   */\n  createDirectoryWriter({ settings = this.settings, metadata } = {}) {\n    return Directory.create({\n      writer: this.writer,\n      settings,\n      metadata,\n    })\n  }\n\n  /**\n   * @param {API.CloseOptions} [options]\n   */\n  close(options) {\n    return close(this, options)\n  }\n}\n\n// BlockSizeLimit specifies the maximum size an imported block can have.\n// @see https://github.com/ipfs/go-unixfs/blob/68c015a6f317ed5e21a4870f7c423a4b38b90a96/importer/helpers/helpers.go#L7-L8\nexport const BLOCK_SIZE_LIMIT = 1048576 // 1 MB\nexport const defaultCapacity = BLOCK_SIZE_LIMIT * 100\n\n/**\n * Creates `QueuingStrategy` that can fit blocks with total size up to given\n * byteLength.\n *\n * @param {number} byteLength\n * @returns {Required<QueuingStrategy<API.Block>>}\n */\nexport const withCapacity = (byteLength = defaultCapacity) => ({\n  highWaterMark: byteLength,\n  size: block => block.bytes.length,\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}