{"ast":null,"code":"/* c8 ignore next */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { name, size, code, prefix, Digest } from './digest.js';\nexport { name, size, code };\n\n/**\n * @param {Uint8Array} payload\n * @returns {import('multiformats').MultihashDigest<typeof code>}\n */\nexport const digest = payload => {\n  const digest = new Uint8Array(prefix.length + size);\n  digest.set(prefix, 0);\n  digest.set(sha256(payload), prefix.length);\n  return new Digest(digest);\n};","map":{"version":3,"names":["sha256","name","size","code","prefix","Digest","digest","payload","Uint8Array","length","set"],"sources":["C:/FACULTATE/Proiect/node_modules/sync-multihash-sha2/src/sha256/web.js"],"sourcesContent":["/* c8 ignore next */\nimport { sha256 } from '@noble/hashes/sha256'\nimport { name, size, code, prefix, Digest } from './digest.js'\nexport { name, size, code }\n\n/**\n * @param {Uint8Array} payload\n * @returns {import('multiformats').MultihashDigest<typeof code>}\n */\nexport const digest = (payload) => {\n  const digest = new Uint8Array(prefix.length + size)\n  digest.set(prefix, 0)\n  digest.set(sha256(payload), prefix.length)\n\n  return new Digest(digest)\n}\n"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,aAAa;AAC9D,SAASJ,IAAI,EAAEC,IAAI,EAAEC,IAAI;;AAEzB;AACA;AACA;AACA;AACA,OAAO,MAAMG,MAAM,GAAIC,OAAO,IAAK;EACjC,MAAMD,MAAM,GAAG,IAAIE,UAAU,CAACJ,MAAM,CAACK,MAAM,GAAGP,IAAI,CAAC;EACnDI,MAAM,CAACI,GAAG,CAACN,MAAM,EAAE,CAAC,CAAC;EACrBE,MAAM,CAACI,GAAG,CAACV,MAAM,CAACO,OAAO,CAAC,EAAEH,MAAM,CAACK,MAAM,CAAC;EAE1C,OAAO,IAAIJ,MAAM,CAACC,MAAM,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}