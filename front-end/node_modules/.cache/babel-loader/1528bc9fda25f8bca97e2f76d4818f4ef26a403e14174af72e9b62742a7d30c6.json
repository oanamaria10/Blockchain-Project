{"ast":null,"code":"import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n  size;\n  signed;\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    defineProperties(this, {\n      size,\n      signed\n    }, {\n      size: \"number\",\n      signed: \"boolean\"\n    });\n  }\n  defaultValue() {\n    return 0;\n  }\n  encode(writer, _value) {\n    let value = getBigInt(Typed.dereference(_value, this.type));\n    // Check bounds are safe for encoding\n    let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n    if (this.signed) {\n      let bounds = mask(maxUintValue, this.size * 8 - 1);\n      if (value > bounds || value < -(bounds + BN_1)) {\n        this._throwError(\"value out-of-bounds\", _value);\n      }\n      value = toTwos(value, 8 * WordSize);\n    } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n      this._throwError(\"value out-of-bounds\", _value);\n    }\n    return writer.writeValue(value);\n  }\n  decode(reader) {\n    let value = mask(reader.readValue(), this.size * 8);\n    if (this.signed) {\n      value = fromTwos(value, this.size * 8);\n    }\n    return value;\n  }\n}","map":{"version":3,"names":["defineProperties","fromTwos","getBigInt","mask","toTwos","Typed","Coder","WordSize","BN_0","BigInt","BN_1","BN_MAX_UINT256","NumberCoder","size","signed","constructor","localName","name","defaultValue","encode","writer","_value","value","dereference","type","maxUintValue","bounds","_throwError","writeValue","decode","reader","readValue"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/node_modules/ethers/lib.esm/abi/coders/number.js"],"sourcesContent":["import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    size;\n    signed;\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=number.js.map"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,sBAAsB;AAC1F,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,qBAAqB;AACrD,MAAMC,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;AACtB,MAAMC,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;AACtB,MAAME,cAAc,GAAGF,MAAM,CAAC,oEAAoE,CAAC;AACnG;AACA;AACA;AACA,OAAO,MAAMG,WAAW,SAASN,KAAK,CAAC;EACnCO,IAAI;EACJC,MAAM;EACNC,WAAWA,CAACF,IAAI,EAAEC,MAAM,EAAEE,SAAS,EAAE;IACjC,MAAMC,IAAI,GAAI,CAACH,MAAM,GAAG,KAAK,GAAG,MAAM,IAAKD,IAAI,GAAG,CAAG;IACrD,KAAK,CAACI,IAAI,EAAEA,IAAI,EAAED,SAAS,EAAE,KAAK,CAAC;IACnChB,gBAAgB,CAAC,IAAI,EAAE;MAAEa,IAAI;MAAEC;IAAO,CAAC,EAAE;MAAED,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EACnF;EACAI,YAAYA,CAAA,EAAG;IACX,OAAO,CAAC;EACZ;EACAC,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACnB,IAAIC,KAAK,GAAGpB,SAAS,CAACG,KAAK,CAACkB,WAAW,CAACF,MAAM,EAAE,IAAI,CAACG,IAAI,CAAC,CAAC;IAC3D;IACA,IAAIC,YAAY,GAAGtB,IAAI,CAACQ,cAAc,EAAEJ,QAAQ,GAAG,CAAC,CAAC;IACrD,IAAI,IAAI,CAACO,MAAM,EAAE;MACb,IAAIY,MAAM,GAAGvB,IAAI,CAACsB,YAAY,EAAG,IAAI,CAACZ,IAAI,GAAG,CAAC,GAAI,CAAC,CAAC;MACpD,IAAIS,KAAK,GAAGI,MAAM,IAAIJ,KAAK,GAAG,EAAEI,MAAM,GAAGhB,IAAI,CAAC,EAAE;QAC5C,IAAI,CAACiB,WAAW,CAAC,qBAAqB,EAAEN,MAAM,CAAC;MACnD;MACAC,KAAK,GAAGlB,MAAM,CAACkB,KAAK,EAAE,CAAC,GAAGf,QAAQ,CAAC;IACvC,CAAC,MACI,IAAIe,KAAK,GAAGd,IAAI,IAAIc,KAAK,GAAGnB,IAAI,CAACsB,YAAY,EAAE,IAAI,CAACZ,IAAI,GAAG,CAAC,CAAC,EAAE;MAChE,IAAI,CAACc,WAAW,CAAC,qBAAqB,EAAEN,MAAM,CAAC;IACnD;IACA,OAAOD,MAAM,CAACQ,UAAU,CAACN,KAAK,CAAC;EACnC;EACAO,MAAMA,CAACC,MAAM,EAAE;IACX,IAAIR,KAAK,GAAGnB,IAAI,CAAC2B,MAAM,CAACC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAClB,IAAI,GAAG,CAAC,CAAC;IACnD,IAAI,IAAI,CAACC,MAAM,EAAE;MACbQ,KAAK,GAAGrB,QAAQ,CAACqB,KAAK,EAAE,IAAI,CAACT,IAAI,GAAG,CAAC,CAAC;IAC1C;IACA,OAAOS,KAAK;EAChB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}