{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oana\\\\Desktop\\\\Blockchain\\\\Blockchain-Project\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { ethers } from 'ethers';\nimport campaignAbi from './Campaign.json';\nimport donationTokenAbi from './DonationToken.json';\nimport proposalAbi from './Proposal.json';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CampaignInteraction() {\n  _s();\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [donationAmount, setDonationAmount] = useState('');\n  const [targetAmount, setTargetAmount] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalDonations, setTotalDonations] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [signerIndex, setSignerIndex] = useState(null);\n  const [isTargetReached, setIsTargetReached] = useState(false);\n  const [campaignContract, setCampaignContract] = useState(null);\n  const [donationTokenContract, setDonationTokenContract] = useState(null);\n  const [proposalContract, setProposalContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isContractsLoaded, setIsContractsLoaded] = useState(false);\n  const [showThankYouPopup, setShowThankYouPopup] = useState(false);\n  const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [campaignDescription, setCampaignDescription] = useState(null);\n  const [descriptions, setDescriptions] = useState([]);\n  const [showCampaignInfoPopup, setShowCampaignInfoPopup] = useState(false);\n  const [showCampaignCausesPopup, setShowCampaignCausesPopup] = useState(false);\n  const [showVotePopup, setShowVotePopup] = useState(false);\n  const [proposals, setProposals] = useState([]);\n  const [proposalsDetails, setProposalsDetails] = useState([]);\n  const [currentProposalIndex, setCurrentProposalIndex] = useState(0);\n  const [donationPercentages, setDonationPercentages] = useState([]);\n  const [tokenBalance, setTokenBalance] = useState(0);\n  const [humanitarianAddresses, setHumanitarianAddresses] = useState([]);\n  const [isActive, setIsActive] = useState(true);\n  const [fundsDistributed, setFundsDistributed] = useState(false);\n  const [userVotes, setUserVotes] = useState({});\n  const [userTokens, setUserTokens] = useState([]);\n  const [selectedTokenId, setSelectedTokenId] = useState(null);\n  async function fetchUserNFTs() {\n    if (!donationTokenContract || !accountAddress) return;\n    try {\n      const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\n      const formattedTokens = tokens.length > 0 ? tokens.map(tokenId => tokenId.toNumber()) : [];\n      console.log(\"📌 User NFTs:\", formattedTokens);\n      console.log(\"user tokens\", donationTokenContract.get);\n      setUserTokens(formattedTokens);\n    } catch (error) {\n      console.error(\"Error fetching user NFTs:\", error);\n      setUserTokens([]);\n    }\n  }\n  useEffect(() => {\n    if (donationTokenContract && accountAddress) {\n      fetchUserNFTs();\n    }\n  }, [donationTokenContract, accountAddress]);\n  useEffect(() => {\n    async function fetchHumanitarianAddresses() {\n      if (!proposalContract || proposals.length === 0) return;\n      let addresses = [];\n      for (let i = 0; i < proposals.length; i++) {\n        const beneficiary = await proposalContract.getProposalBeneficiary(i);\n        addresses.push(beneficiary.toLowerCase());\n      }\n      setHumanitarianAddresses(addresses);\n    }\n    if (proposals.length > 0) {\n      fetchHumanitarianAddresses();\n    }\n  }, [proposalContract, proposals]);\n  const fetchBalance = async address => {\n    if (!address || !window.ethereum) return; // Verifică dacă adresa este validă\n    try {\n      const balance = await window.ethereum.request({\n        method: 'eth_getBalance',\n        params: [address, 'latest']\n      });\n      setAccountBalance(ethers.utils.formatEther(balance));\n    } catch (error) {\n      console.error(\"Error fetching balance: \", error);\n    }\n  };\n  async function fetchTokenBalance() {\n    if (!donationTokenContract || !accountAddress) return;\n    try {\n      const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\n      setTokenBalance(tokens.length);\n    } catch (error) {\n      console.error(\"Error fetching token balance:\", error);\n      setTokenBalance(0);\n    }\n  }\n  useEffect(() => {\n    if (!donationTokenContract || !accountAddress) return;\n    const updateBalanceOnMintOrBurn = async (from, to, tokenId) => {\n      console.log(`🔄 NFT Transfer Event: Token #${tokenId} moved from ${from} to ${to}`);\n\n      // Dacă este transfer către 0x0 (burn), elimină NFT-ul din listă\n      if (to === ethers.constants.AddressZero) {\n        setUserTokens(prevTokens => prevTokens.filter(id => id !== tokenId));\n      }\n      await fetchTokenBalance();\n      await fetchUserNFTs();\n    };\n    donationTokenContract.removeAllListeners(\"TokenIssued\");\n    donationTokenContract.on(\"TokenIssued\", updateBalanceOnMintOrBurn);\n    return () => {\n      donationTokenContract.off(\"TokenIssued\", updateBalanceOnMintOrBurn);\n    };\n  }, [donationTokenContract, accountAddress]);\n  async function initializeContracts(provider, address) {\n    if (!provider || campaignContract) return;\n    const signer = provider.getSigner();\n    try {\n      const campaign = new ethers.Contract(\"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\", campaignAbi.abi, signer);\n      setCampaignContract(campaign);\n      const donationToken = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", donationTokenAbi.abi, signer);\n      setDonationTokenContract(donationToken);\n      const proposal = new ethers.Contract(\"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", proposalAbi.abi, signer);\n      setProposalContract(proposal);\n      const owner = await campaign.owner();\n      console.log(\"Owner of contract:\", owner);\n      console.log(\"User's account:\", address);\n      setIsOwner((address === null || address === void 0 ? void 0 : address.toLowerCase()) === owner.toLowerCase());\n      const isActive = await campaign.isCampaignActive();\n      console.log(\"Campaign active:\", isActive);\n      const fundsDistributed = await campaign.fundsDistributed();\n      console.log(\"Funds distributed:\", fundsDistributed);\n      const totalDonations = await campaign.getTotalDonations();\n      console.log(\"Total donations:\", ethers.utils.formatEther(totalDonations));\n      setIsContractsLoaded(true);\n    } catch (error) {\n      alert('Error initializing contracts: ' + error.message);\n    }\n  }\n  async function fetchCampaignData() {\n    if (!campaignContract) return; // Verifică înainte de apel\n    try {\n      const currentTotalDonations = await campaignContract.totalDonations();\n      const currentTargetAmount = await campaignContract.targetAmount();\n      const formattedDonations = ethers.utils.formatEther(currentTotalDonations);\n      const formattedTarget = ethers.utils.formatEther(currentTargetAmount);\n      setTotalDonations(formattedDonations);\n      setTargetAmount(formattedTarget);\n      const progress = parseFloat(formattedDonations) * 100 / parseFloat(formattedTarget);\n      setProgress(progress || 0);\n      setIsTargetReached(parseFloat(formattedDonations) >= parseFloat(formattedTarget));\n    } catch (error) {\n      console.error('Error fetching campaign data:', error);\n    }\n  }\n  useEffect(() => {\n    if (campaignContract) {\n      fetchCampaignData();\n    }\n  }, [campaignContract]);\n  async function connectWallet() {\n    if (!window.ethereum) {\n      alert(\"⚠️ Please install MetaMask!\");\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const signer = web3Provider.getSigner();\n      const address = await signer.getAddress();\n      const balance = await web3Provider.getBalance(address);\n      setProvider(web3Provider);\n      setAccountAddress(address);\n      setAccountBalance(ethers.utils.formatEther(balance));\n      setIsLoggedIn(true);\n      initializeContracts(web3Provider, address);\n      fetchBalance(address);\n      fetchTokenBalance();\n      fetchUserNFTs();\n\n      // 🔹 Elimină evenimentele existente înainte de a le adăuga din nou\n      window.ethereum.removeListener(\"accountsChanged\", handleAccountChange);\n      window.ethereum.removeListener(\"chainChanged\", handleNetworkChange);\n\n      // 🔹 Adaugă noile evenimente\n      window.ethereum.on(\"accountsChanged\", handleAccountChange);\n      window.ethereum.on(\"chainChanged\", handleNetworkChange);\n    } catch (error) {\n      console.error(\"❌ Error connecting to wallet:\", error);\n      alert(\"❌ Connection failed. Try again.\");\n    }\n  }\n  const handleAccountChange = accounts => {\n    if (accounts.length > 0) {\n      setAccountAddress(accounts[0]);\n      fetchBalance(accounts[0]);\n      fetchUserNFTs();\n    } else {\n      handleLogout();\n    }\n  };\n  const handleNetworkChange = () => {\n    alert(\"🔄 Network changed! Please reconnect.\");\n    handleLogout();\n  };\n  async function handleLogout() {\n    try {\n      setIsLoggedIn(false);\n      setAccountAddress('');\n      setAccountBalance('');\n      setProvider(null);\n      setCampaignContract(null);\n      setDonationTokenContract(null);\n      setProposalContract(null);\n      setTotalDonations(0);\n      setTargetAmount('');\n      setProgress(0);\n      setIsTargetReached(false);\n      setIsContractsLoaded(false);\n      setIsOwner(false);\n      setUserTokens([]);\n      setUserVotes({});\n      setDonationPercentages([]);\n\n      // 🔹 Elimină event listenerii corect\n      if (window.ethereum) {\n        window.ethereum.removeListener(\"accountsChanged\", handleAccountChange);\n        window.ethereum.removeListener(\"chainChanged\", handleNetworkChange);\n      }\n      alert(\"✅ Successfully logged out!\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n  }\n  useEffect(() => {\n    async function checkConnection() {\n      if (!window.ethereum || campaignContract) return;\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: \"eth_accounts\"\n          });\n          if (accounts.length > 0) {\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n            setProvider(web3Provider);\n            setAccountAddress(accounts[0]);\n            fetchBalance(accounts[0]);\n            initializeContracts(web3Provider, accounts[0]);\n            fetchUserNFTs();\n            setIsLoggedIn(true);\n          }\n        } catch (error) {\n          console.error(\"Error checking wallet connection:\", error);\n        }\n      }\n    }\n    checkConnection();\n  }, []);\n  async function donate() {\n    try {\n      if (!isContractsLoaded || !campaignContract) {\n        alert(\"Contracts are still loading. Please wait.\");\n        return;\n      }\n      if (!ethers.utils.isAddress(accountAddress)) {\n        alert(\"Invalid account address.\");\n        return;\n      }\n      if (!donationAmount || parseFloat(donationAmount) <= 0) {\n        alert(\"Please enter a valid donation amount.\");\n        return;\n      }\n      const donationValue = ethers.utils.parseEther(donationAmount);\n\n      // Check if the owner is trying to donate\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) === contractOwner.toLowerCase()) {\n        alert(\"The owner cannot make donations.\");\n        return;\n      }\n      console.log(`💰 Attempting donation of: ${ethers.utils.formatEther(donationValue)} ETH`);\n\n      // Send the donation transaction\n      const donationTx = await campaignContract.donate({\n        value: donationValue\n      });\n      console.log(\"⏳ Transaction sent:\", donationTx.hash);\n\n      // Wait for the transaction to be confirmed\n      await donationTx.wait();\n      console.log(\"✅ Transaction confirmed:\", donationTx.hash);\n\n      // 🔹 Actualizează toate datele campaniei după confirmarea tranzacției\n      await fetchCampaignData();\n\n      // 🔹 Arată mesajul de confirmare după ce UI-ul este actualizat\n      setShowThankYouPopup(true);\n\n      // 🔹 Resetarea input-ului de donație\n      setDonationAmount(\"\");\n      console.log(\"🎉 Donation successful!\");\n    } catch (error) {\n      console.error(\"❌ Error during donation:\", error);\n      if (error.code === \"INSUFFICIENT_FUNDS\") {\n        alert(\"❌ Insufficient funds to complete this transaction.\");\n      } else if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\n        alert(\"⚠️ Transaction might fail. Possible causes:\\n1️⃣ Owner restriction in contract\\n2️⃣ Contract is not properly deployed\\n3️⃣ Network error.\");\n      } else {\n        alert(\"⚠️ An unexpected error occurred. Please try again later.\");\n      }\n    }\n  }\n  async function setCampaignTarget() {\n    try {\n      if (!campaignContract) {\n        alert(\"❌ Campaign contract is not initialized.\");\n        console.error(\"❌ Error: campaignContract is undefined.\");\n        return;\n      }\n      if (!accountAddress) {\n        alert(\"❌ Please connect your wallet first.\");\n        return;\n      }\n      if (parseFloat(targetAmount) <= 0) {\n        alert(\"❌ Please enter a valid target amount.\");\n        return;\n      }\n      console.log(\"✅ Campaign Contract Instance:\", campaignContract);\n      const campaignOwner = await campaignContract.owner();\n      console.log(\"✅ Campaign Owner:\", campaignOwner);\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== campaignOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can set the target amount.\");\n        return;\n      }\n      const targetValue = ethers.utils.parseEther(targetAmount);\n      const currentTotalDonations = await campaignContract.getTotalDonations();\n      const currentTotalDonationsBN = ethers.BigNumber.from(currentTotalDonations);\n      console.log(\"🔍 New Target Value:\", ethers.utils.formatEther(targetValue));\n      console.log(\"🔍 Current Total Donations:\", ethers.utils.formatEther(currentTotalDonationsBN));\n      if (targetValue.lte(currentTotalDonationsBN)) {\n        alert(`❌ Target amount must be greater than total donations (${ethers.utils.formatEther(currentTotalDonationsBN)} ETH).`);\n        return;\n      }\n      alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\n      const tx = await campaignContract.setTargetAmount(targetValue);\n      await tx.wait();\n      await fetchCampaignData();\n      alert(\"✅ Target amount set successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error setting campaign target:\", error);\n      alert(\"❌ An error occurred while setting the target amount. Check console for details.\");\n    }\n  }\n  async function fetchProposals() {\n    try {\n      if (!campaignContract || !proposalContract) {\n        console.warn(\"⚠️ One or more contracts are not loaded.\");\n        return;\n      }\n\n      // 🔹 Obținem propunerile\n      const fetchedProposals = await proposalContract.getProposals();\n      if (!fetchedProposals || fetchedProposals.length === 0) {\n        console.warn(\"⚠️ No proposals available.\");\n        alert(\"No proposals have been created yet.\");\n        return;\n      }\n\n      // 🔹 Transformăm propunerile într-un format mai ușor de folosit\n      const formattedProposals = fetchedProposals.map(proposal => ({\n        id: proposal.id.toNumber(),\n        voteCount: proposal.voteCount.toNumber()\n      }));\n\n      // 🔹 Hardcoded proposal details\n      const proposalsDetails = [{\n        id: 0,\n        descriptionUrl: 'https://bafybeig7eytlutb4bhjt7hp35py6uyhdbdeqayr2dzddkbrjjd5eoon4im.ipfs.w3s.link/proposal1.txt',\n        imageUrl: 'https://bafybeidemydfmxzi22eitoto6ypgdbvythlpwxp7esnydjedj734t5p3w4.ipfs.w3s.link/proposal1.webp'\n      }, {\n        id: 1,\n        descriptionUrl: 'https://bafybeigkod6hknxfrfs4yvjkwq6yqkly2ug3t47knigd4senza5y2arivm.ipfs.w3s.link/proposal2.txt',\n        imageUrl: 'https://bafybeiccplvm3a4s4ullyli65y3222bhwiia25b3xjvtmbk57whcwp6rgm.ipfs.w3s.link/proposal2.jpeg'\n      }, {\n        id: 2,\n        descriptionUrl: 'https://bafybeihd5on7ovlevvz6hmnbejuk5gzenfoilba4qlhymtmbugl7eotduy.ipfs.w3s.link/proposal3.txt',\n        imageUrl: 'https://bafybeifipnkxtonmy4xcj2lwg6hbg36ovr45tt4wzll2go6k2ib3jqcfdm.ipfs.w3s.link/proposal3.webp'\n      }];\n\n      // 🔹 Descărcăm descrierile propunerilor din IPFS\n      const descriptions = await Promise.all(proposalsDetails.map(async proposal => {\n        try {\n          const response = await fetch(proposal.descriptionUrl);\n          if (!response.ok) throw new Error(`⚠️ Failed to fetch: ${proposal.descriptionUrl}`);\n          return await response.text();\n        } catch (error) {\n          console.error(`⚠️ Error fetching description for proposal ${proposal.id}:`, error);\n          return \"Description not available.\";\n        }\n      }));\n      const totalDonations = await campaignContract.getTotalDonations();\n      const proposalFunds = await Promise.all(formattedProposals.map(async proposal => {\n        try {\n          const percentage = await proposalContract.getProposalPercentage(proposal.id); // obținem procentul de voturi\n\n          const percentageBN = ethers.BigNumber.from(percentage);\n          const divisorBN = ethers.BigNumber.from(\"100\");\n          const funds = totalDonations.mul(percentageBN).div(divisorBN);\n          return funds;\n        } catch (error) {\n          console.error(`⚠️ Error calculating distributed funds for proposal ${proposal.id}:`, error);\n          return ethers.BigNumber.from(\"0\");\n        }\n      }));\n      const proposalsWithFunds = formattedProposals.map((proposal, index) => ({\n        ...proposal,\n        funds: proposalFunds[index]\n      }));\n\n      // 🔹 Actualizăm state-ul UI\n      setProposalsDetails(proposalsDetails);\n      setProposals(proposalsWithFunds);\n      setDescriptions(descriptions);\n      setShowVotePopup(false);\n      console.log(\"✅ Proposals updated successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error fetching proposals:\", error);\n      alert(\"❌ An error occurred while fetching proposals.\");\n    }\n  }\n  async function fetchDonationPercentages() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract is not initialized.\");\n        return;\n      }\n      if (!accountAddress) {\n        console.warn(\"User is not connected.\");\n        return;\n      }\n      const percentages = await campaignContract.getDonationPercentages();\n      if (!percentages || percentages.length === 0) {\n        console.warn(\"No donation percentages available.\");\n        setDonationPercentages([]);\n        return;\n      }\n      setDonationPercentages(percentages.map(p => p.toNumber())); // ✅ Conversie sigură\n    } catch (error) {\n      console.error(\"❌ Error fetching donation percentages:\", error);\n    }\n  }\n  useEffect(() => {\n    if (!isContractsLoaded || !campaignContract) return;\n    fetchDonationPercentages();\n    fetchProposals();\n  }, [isContractsLoaded, campaignContract]);\n  const handleNextProposal = () => {\n    setCurrentProposalIndex(prevIndex => proposalsDetails.length > 0 ? Math.min(prevIndex + 1, proposalsDetails.length - 1) : 0);\n  };\n  const handlePrevProposal = () => {\n    setCurrentProposalIndex(prevIndex => proposalsDetails.length > 0 ? Math.max(prevIndex - 1, 0) : 0);\n  };\n  async function checkUserVotes() {\n    if (!proposalContract || !accountAddress || proposals.length === 0) return;\n    try {\n      const voteResults = await Promise.all(proposals.map(proposal => proposalContract.hasVoted(proposal.id, accountAddress)));\n      const votes = proposals.reduce((acc, proposal, index) => {\n        acc[proposal.id] = voteResults[index];\n        return acc;\n      }, {});\n      setUserVotes(votes);\n    } catch (error) {\n      console.error(\"❌ Error checking user votes:\", error);\n    }\n  }\n  useEffect(() => {\n    if (!proposalContract || !accountAddress || proposals.length === 0) return;\n    checkUserVotes();\n  }, [proposalContract, accountAddress, proposals]);\n  async function handleVote(proposalId, tokenId) {\n    try {\n      if (!proposalContract || !donationTokenContract || !campaignContract) {\n        console.warn(\"⚠️ One or more contracts are not loaded.\");\n        return;\n      }\n      if (!tokenId) {\n        alert(\"❌ You must select an NFT to vote.\");\n        return;\n      }\n      tokenId = Number(tokenId);\n      const ownerToken = await donationTokenContract.ownerOf(tokenId);\n      console.log(`NFT #${tokenId} is owned by:`, ownerToken);\n      const owner = await donationTokenContract.ownerOf(tokenId);\n      if (owner.toLowerCase() !== accountAddress.toLowerCase()) {\n        alert(\"❌ This NFT does not belong to you.\");\n        return;\n      }\n      console.log(`🗳️ Voting for proposal ${proposalId} with NFT #${tokenId}`);\n      const voteTx = await proposalContract.vote(proposalId, tokenId);\n      await voteTx.wait();\n      console.log(\"✅ Vote confirmed:\", voteTx.hash);\n      setUserTokens(prevTokens => prevTokens.filter(id => id !== tokenId));\n      setUserVotes(prevVotes => ({\n        ...prevVotes,\n        [proposalId]: true\n      }));\n      setSelectedTokenId(null);\n      await fetchTokenBalance();\n      await fetchDonationPercentages();\n      await fetchUserNFTs();\n      await fetchProposals();\n      alert(\"✅ Vote successful!\");\n    } catch (error) {\n      console.error(\"❌ Error during voting:\", error);\n      if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\n        alert(\"⚠️ Gas estimation failed. The transaction might fail.\");\n      } else if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ You may not have permission to vote with this NFT.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  async function distributeFunds() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract not loaded.\");\n        return;\n      }\n      if (!accountAddress) {\n        console.warn(\"User is not connected.\");\n        return;\n      }\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== contractOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can distribute funds.\");\n        return;\n      }\n      const isActive = await campaignContract.isCampaignActive();\n      console.log(\"Is campaign active?\", isActive);\n      if (isActive) {\n        alert(\"❌ Campaign must be stopped before distributing funds.\");\n        return;\n      }\n      const fundsDistributed = await campaignContract.fundsDistributed();\n      if (fundsDistributed) {\n        alert(\"❌ Funds have already been distributed.\");\n        return;\n      }\n      alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\n      const tx = await campaignContract.distributeFunds();\n      await tx.wait();\n      await fetchCampaignData();\n      alert(\"✅ Funds distributed successfully!\");\n      setFundsDistributed(true);\n    } catch (error) {\n      console.error(\"❌ Error distributing funds:\", error);\n      alert(\"❌ An error occurred while distributing funds. Check the console for details.\");\n    }\n  }\n  async function withdrawFunds() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract not loaded.\");\n        return;\n      }\n      if (!accountAddress) {\n        console.warn(\"User is not connected.\");\n        return;\n      }\n      const isBeneficiary = await campaignContract.isBeneficiary(accountAddress);\n      if (!isBeneficiary) {\n        alert(\"❌ You are not authorized to withdraw funds.\");\n        return;\n      }\n      alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\n      const tx = await campaignContract.withdrawFunds();\n      await tx.wait();\n      console.log(\"✅ Funds withdrawn successfully:\", tx.hash);\n      alert(\"✅ Funds withdrawn successfully! Check your wallet balance.\");\n      await fetchCampaignData();\n      fetchBalance(accountAddress);\n    } catch (error) {\n      console.error(\"❌ Error withdrawing funds:\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ Transaction failed. You might not be eligible to withdraw.\");\n      } else if (error.code === \"INSUFFICIENT_FUNDS\") {\n        alert(\"❌ Insufficient gas balance for transaction.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  async function stopCampaign() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract not loaded.\");\n        return;\n      }\n      if (!accountAddress) {\n        console.warn(\"User is not connected.\");\n        return;\n      }\n      const totalDonations = await campaignContract.getTotalDonations();\n      const targetAmount = await campaignContract.getTargetAmount();\n      const totalDonationsETH = ethers.utils.formatEther(totalDonations);\n      const targetAmountETH = ethers.utils.formatEther(targetAmount);\n      console.log(\"Total donations:\", totalDonationsETH);\n      console.log(\"Target amount:\", targetAmountETH);\n      if (parseFloat(totalDonationsETH) < parseFloat(targetAmountETH)) {\n        alert(\"❌ Target amount not reached yet.\");\n        return;\n      }\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== contractOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can stop the campaign.\");\n        return;\n      }\n      alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\n      const tx = await campaignContract.stopCampaign();\n      await tx.wait();\n      console.log(\"✅ Campaign stopped successfully:\", tx.hash);\n      alert(\"✅ Campaign stopped successfully!\");\n      await fetchCampaignData();\n    } catch (error) {\n      console.error(\"❌ Error stopping campaign:\", error);\n      alert(\"❌ An error occurred while stopping the campaign. Check the console for details.\");\n    }\n  }\n  const campaignImageUrl = \"https://bafybeia3oxbhfxrzyrvrgnp2gft3tvi7zhcqdvo2nyher2qna72agkaabq.ipfs.w3s.link/photo2.webp\";\n  const campaignDescriptionUrl = \"https://bafybeibq7ek3iezsk75gjfmqdn7yz7haw5f54l3uk5ky3yzmvwsxfuj65m.ipfs.w3s.link/description.txt\";\n  const fetchCampaignDescription = useCallback(async () => {\n    setCampaignDescription(\"Loading...\");\n    try {\n      const response = await fetch(campaignDescriptionUrl);\n      if (!response.ok) throw new Error(`Failed to fetch description: ${response.status}`);\n      const data = await response.text();\n      setCampaignDescription(data);\n    } catch (error) {\n      console.error(\"❌ Error fetching campaign description:\", error);\n      setCampaignDescription(\"Description not available.\");\n    }\n  }, []);\n  useEffect(() => {\n    fetchCampaignDescription();\n  }, [fetchCampaignDescription]);\n\n  //event listeners \n  useEffect(() => {\n    if (!campaignContract || !proposalContract || !accountAddress) return;\n    const handleDonationReceived = async (donor, amount, tokenId) => {\n      console.log(`💰 Donation received from ${donor}: ${ethers.utils.formatEther(amount)} ETH. Token ID: ${tokenId}`);\n      await fetchBalance(accountAddress);\n      await fetchTokenBalance();\n      const [updatedTotalDonations, updatedTargetAmount] = await Promise.all([campaignContract.totalDonations(), campaignContract.targetAmount()]);\n      const formattedTotalDonations = ethers.utils.formatEther(updatedTotalDonations);\n      const formattedTarget = ethers.utils.formatEther(updatedTargetAmount);\n      setTotalDonations(formattedTotalDonations);\n      setTargetAmount(formattedTarget);\n      const newProgress = parseFloat(formattedTotalDonations) * 100 / parseFloat(formattedTarget);\n      setProgress(newProgress || 0);\n      setIsTargetReached(parseFloat(formattedTotalDonations) >= parseFloat(formattedTarget));\n      fetchDonationPercentages();\n      fetchUserNFTs();\n    };\n    const handleFundsDistributed = () => {\n      console.log(\"✅ Funds have been distributed successfully!\");\n      fetchProposals();\n    };\n    const handleCampaignClosed = () => {\n      console.log(\"⚠️ Campaign has been closed by the owner.\");\n      setIsActive(false);\n    };\n    const handleFundsWithdrawn = async (beneficiary, amount) => {\n      console.log(`🏦 ${beneficiary} withdrew ${ethers.utils.formatEther(amount)} ETH.`);\n      await fetchCampaignData();\n    };\n    const handleVoteCast = async (voter, proposalId) => {\n      console.log(`🗳️ ${voter} voted for proposal ID: ${proposalId}`);\n      await fetchProposals();\n    };\n    campaignContract.on(\"DonationReceived\", handleDonationReceived);\n    campaignContract.on(\"FundsDistributed\", handleFundsDistributed);\n    campaignContract.on(\"CampaignClosed\", handleCampaignClosed);\n    campaignContract.on(\"FundsWithdrawn\", handleFundsWithdrawn);\n    proposalContract.on(\"VoteCast\", handleVoteCast);\n    return () => {\n      campaignContract.off(\"DonationReceived\", handleDonationReceived);\n      campaignContract.off(\"FundsDistributed\", handleFundsDistributed);\n      campaignContract.off(\"CampaignClosed\", handleCampaignClosed);\n      campaignContract.off(\"FundsWithdrawn\", handleFundsWithdrawn);\n      proposalContract.off(\"VoteCast\", handleVoteCast);\n    };\n  }, [campaignContract, proposalContract, accountAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: connectWallet,\n      placeholder: \"Enter address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"campaign-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Support Our Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowAccountInfoPopup(true),\n          children: \"Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 15\n      }, this), showAccountInfoPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowAccountInfoPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account: \", accountAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ETH Balance: \", accountBalance, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Token Balance: \", tokenBalance, \" DONATE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowCampaignInfoPopup(true),\n        children: \"Campaign Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 15\n      }, this), showCampaignInfoPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowCampaignInfoPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Campaign Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: campaignDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: campaignImageUrl,\n            alt: \"Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-button\",\n        onClick: () => setShowCampaignCausesPopup(true),\n        children: \"Campaign Percentages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 15\n      }, this), showCampaignCausesPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowCampaignCausesPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Campaign Percentages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 27\n          }, this), proposalsDetails.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: proposalsDetails.map((proposal, index) => {\n              var _proposals$index;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: proposal.imageUrl || \"default.jpg\",\n                  style: {\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                    marginBottom: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: descriptions[index] || \"No description available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Funds Allocated: \", ethers.utils.formatEther((_proposals$index = proposals[index]) === null || _proposals$index === void 0 ? void 0 : _proposals$index.funds) || \"0\", \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 901,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Donation Percentage: \", donationPercentages[index] ? `${donationPercentages[index]}%` : \"0%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 39\n                }, this)]\n              }, proposal.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 35\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading campaign details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vote-button\",\n        onClick: () => setShowVotePopup(true),\n        children: \"Vote for a Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campaign-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Campaign Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Donations: \", totalDonations, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 19\n        }, this), targetAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Target Amount: \", targetAmount, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", progress.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 15\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manage Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 23\n        }, this), isActive && isTargetReached && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCampaign,\n          children: \"Stop Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 27\n        }, this), !isActive && !fundsDistributed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: distributeFunds,\n          children: \"Distribute Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 19\n      }, this), humanitarianAddresses.includes(accountAddress.toLowerCase()) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Withdraw Your Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: withdrawFunds,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Make a Donation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount (ETH):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: donationAmount,\n            onChange: e => setDonationAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: donate,\n            children: \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The campaign is closed. Donations are no longer accepted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 19\n      }, this), showVotePopup && proposalsDetails.length > 0 && currentProposalIndex < proposalsDetails.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowVotePopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Donate for a Cause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"proposal\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: proposalsDetails[currentProposalIndex].imageUrl,\n              style: {\n                width: '300px',\n                height: '300px',\n                objectFit: 'cover',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: descriptions[currentProposalIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 27\n            }, this), userTokens.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setSelectedTokenId(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select an NFT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 41\n                }, this), userTokens.map(tokenId => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tokenId,\n                  children: [\"Token #\", tokenId]\n                }, tokenId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleVote(proposalsDetails[currentProposalIndex].id, selectedTokenId),\n                disabled: userVotes[proposalsDetails[currentProposalIndex].id] || !selectedTokenId,\n                children: userVotes[proposalsDetails[currentProposalIndex].id] ? \"Already Voted\" : \"Vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u274C You need at least one DONATE NFT to vote.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handlePrevProposal,\n              disabled: currentProposalIndex === 0,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleNextProposal,\n              disabled: currentProposalIndex === proposalsDetails.length - 1,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 15\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set-target-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Campaign Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Amount (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetAmount,\n          onChange: e => setTargetAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setCampaignTarget,\n          children: \"Set Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 19\n      }, this), showThankYouPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Thank You!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your generosity makes a difference. Thank you for your support!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowThankYouPopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 17\n      }, this), isTargetReached && showThankYouPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDF89 Target Reached! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We have reached our goal, thanks to your kindness and support!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowThankYouPopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 851,\n    columnNumber: 7\n  }, this);\n}\n_s(CampaignInteraction, \"WmGPvcKxBtt22lzxVbPz929BLgM=\");\n_c = CampaignInteraction;\nexport default CampaignInteraction;\nvar _c;\n$RefreshReg$(_c, \"CampaignInteraction\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","ethers","campaignAbi","donationTokenAbi","proposalAbi","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","CampaignInteraction","_s","accountAddress","setAccountAddress","accountBalance","setAccountBalance","donationAmount","setDonationAmount","targetAmount","setTargetAmount","progress","setProgress","totalDonations","setTotalDonations","provider","setProvider","signerIndex","setSignerIndex","isTargetReached","setIsTargetReached","campaignContract","setCampaignContract","donationTokenContract","setDonationTokenContract","proposalContract","setProposalContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","isContractsLoaded","setIsContractsLoaded","showThankYouPopup","setShowThankYouPopup","showAccountInfoPopup","setShowAccountInfoPopup","isOwner","setIsOwner","campaignDescription","setCampaignDescription","descriptions","setDescriptions","showCampaignInfoPopup","setShowCampaignInfoPopup","showCampaignCausesPopup","setShowCampaignCausesPopup","showVotePopup","setShowVotePopup","proposals","setProposals","proposalsDetails","setProposalsDetails","currentProposalIndex","setCurrentProposalIndex","donationPercentages","setDonationPercentages","tokenBalance","setTokenBalance","humanitarianAddresses","setHumanitarianAddresses","isActive","setIsActive","fundsDistributed","setFundsDistributed","userVotes","setUserVotes","userTokens","setUserTokens","selectedTokenId","setSelectedTokenId","fetchUserNFTs","tokens","getTokensByOwner","formattedTokens","length","map","tokenId","toNumber","console","log","get","error","fetchHumanitarianAddresses","addresses","i","beneficiary","getProposalBeneficiary","push","toLowerCase","fetchBalance","address","window","ethereum","balance","request","method","params","utils","formatEther","fetchTokenBalance","updateBalanceOnMintOrBurn","from","to","constants","AddressZero","prevTokens","filter","id","removeAllListeners","on","off","initializeContracts","signer","getSigner","campaign","Contract","abi","donationToken","proposal","owner","isCampaignActive","getTotalDonations","alert","message","fetchCampaignData","currentTotalDonations","currentTargetAmount","formattedDonations","formattedTarget","parseFloat","connectWallet","web3Provider","providers","Web3Provider","getAddress","getBalance","removeListener","handleAccountChange","handleNetworkChange","accounts","handleLogout","checkConnection","donate","isAddress","donationValue","parseEther","contractOwner","donationTx","value","hash","wait","code","setCampaignTarget","campaignOwner","targetValue","currentTotalDonationsBN","BigNumber","lte","tx","fetchProposals","warn","fetchedProposals","getProposals","formattedProposals","voteCount","descriptionUrl","imageUrl","Promise","all","response","fetch","ok","Error","text","proposalFunds","percentage","getProposalPercentage","percentageBN","divisorBN","funds","mul","div","proposalsWithFunds","index","fetchDonationPercentages","percentages","getDonationPercentages","p","handleNextProposal","prevIndex","Math","min","handlePrevProposal","max","checkUserVotes","voteResults","hasVoted","votes","reduce","acc","handleVote","proposalId","Number","ownerToken","ownerOf","voteTx","vote","prevVotes","distributeFunds","withdrawFunds","isBeneficiary","stopCampaign","getTargetAmount","totalDonationsETH","targetAmountETH","campaignImageUrl","campaignDescriptionUrl","fetchCampaignDescription","status","data","handleDonationReceived","donor","amount","updatedTotalDonations","updatedTargetAmount","formattedTotalDonations","newProgress","handleFundsDistributed","handleCampaignClosed","handleFundsWithdrawn","handleVoteCast","voter","className","children","onLogin","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_proposals$index","style","marginBottom","width","height","objectFit","toFixed","includes","type","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport campaignAbi from './Campaign.json';\r\nimport donationTokenAbi from './DonationToken.json';\r\nimport proposalAbi from './Proposal.json';\r\nimport Login from './Login';\r\nimport './App.css';\r\n\r\nfunction CampaignInteraction() {\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [donationAmount, setDonationAmount] = useState('');\r\n    const [targetAmount, setTargetAmount] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [totalDonations, setTotalDonations] = useState(0);\r\n    const [provider, setProvider] = useState(null);\r\n    const [signerIndex, setSignerIndex] = useState(null);\r\n    const [isTargetReached, setIsTargetReached] = useState(false);\r\n    const [campaignContract, setCampaignContract] = useState(null);\r\n    const [donationTokenContract, setDonationTokenContract] = useState(null);\r\n    const [proposalContract, setProposalContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isContractsLoaded, setIsContractsLoaded] = useState(false);\r\n    const [showThankYouPopup, setShowThankYouPopup] = useState(false);\r\n    const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false);\r\n    const [isOwner, setIsOwner] = useState(false);\r\n    const [campaignDescription, setCampaignDescription] = useState(null);\r\n    const [descriptions, setDescriptions] = useState([]);\r\n    const [showCampaignInfoPopup, setShowCampaignInfoPopup] = useState(false);\r\n    const [showCampaignCausesPopup, setShowCampaignCausesPopup] = useState(false);\r\n    const [showVotePopup, setShowVotePopup] = useState(false); \r\n    const [proposals, setProposals] = useState([]);\r\n    const [proposalsDetails, setProposalsDetails] = useState([]);\r\n    const [currentProposalIndex, setCurrentProposalIndex] = useState(0); \r\n    const [donationPercentages, setDonationPercentages] = useState([]);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [humanitarianAddresses, setHumanitarianAddresses] = useState([]);\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [fundsDistributed, setFundsDistributed] = useState(false);\r\n    const [userVotes, setUserVotes] = useState({});\r\n    const [userTokens, setUserTokens] = useState([]);\r\n    const [selectedTokenId, setSelectedTokenId] = useState(null);\r\n\r\n    async function fetchUserNFTs() {\r\n        if (!donationTokenContract || !accountAddress) return;\r\n    \r\n        try {\r\n            const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\r\n            const formattedTokens = tokens.length > 0 ? tokens.map(tokenId => tokenId.toNumber()) : [];\r\n            \r\n            console.log(\"📌 User NFTs:\", formattedTokens); \r\n            \r\n            console.log(\"user tokens\", donationTokenContract.get)\r\n            setUserTokens(formattedTokens);\r\n        } catch (error) {\r\n            console.error(\"Error fetching user NFTs:\", error);\r\n            setUserTokens([]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (donationTokenContract && accountAddress) {\r\n            fetchUserNFTs();\r\n        }\r\n    }, [donationTokenContract, accountAddress]);\r\n\r\n    useEffect(() => {\r\n        async function fetchHumanitarianAddresses() {\r\n            if (!proposalContract || proposals.length === 0) return;\r\n            let addresses = [];\r\n            for (let i = 0; i < proposals.length; i++) {\r\n                const beneficiary = await proposalContract.getProposalBeneficiary(i);\r\n                addresses.push(beneficiary.toLowerCase());\r\n            }\r\n            setHumanitarianAddresses(addresses);\r\n        }\r\n        if (proposals.length > 0) {\r\n            fetchHumanitarianAddresses();\r\n        }\r\n    }, [proposalContract, proposals]);\r\n    \r\n    const fetchBalance = async (address) => {\r\n        if (!address || !window.ethereum) return; // Verifică dacă adresa este validă\r\n        try {\r\n            const balance = await window.ethereum.request({\r\n                method: 'eth_getBalance',\r\n                params: [address, 'latest'],\r\n            });\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n        } catch (error) {\r\n            console.error(\"Error fetching balance: \", error);\r\n        }\r\n    };\r\n    \r\n    async function fetchTokenBalance() {\r\n        if (!donationTokenContract || !accountAddress) return; \r\n        try {\r\n            const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\r\n            setTokenBalance(tokens.length);\r\n        } catch (error) {\r\n            console.error(\"Error fetching token balance:\", error);\r\n            setTokenBalance(0); \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!donationTokenContract || !accountAddress) return;\r\n    \r\n        const updateBalanceOnMintOrBurn = async (from, to, tokenId) => {\r\n            console.log(`🔄 NFT Transfer Event: Token #${tokenId} moved from ${from} to ${to}`);\r\n    \r\n            // Dacă este transfer către 0x0 (burn), elimină NFT-ul din listă\r\n            if (to === ethers.constants.AddressZero) {\r\n                setUserTokens(prevTokens => prevTokens.filter(id => id !== tokenId));\r\n            }\r\n    \r\n            await fetchTokenBalance();\r\n            await fetchUserNFTs();\r\n        };\r\n    \r\n        donationTokenContract.removeAllListeners(\"TokenIssued\");\r\n        donationTokenContract.on(\"TokenIssued\", updateBalanceOnMintOrBurn);\r\n    \r\n        return () => {\r\n            donationTokenContract.off(\"TokenIssued\", updateBalanceOnMintOrBurn);\r\n        };\r\n    }, [donationTokenContract, accountAddress]);\r\n\r\n    async function initializeContracts(provider, address) {\r\n        if (!provider || campaignContract) return;\r\n    \r\n        const signer = provider.getSigner();\r\n        try {\r\n            const campaign = new ethers.Contract(\"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\", campaignAbi.abi, signer);\r\n            setCampaignContract(campaign);\r\n    \r\n            const donationToken = new ethers.Contract(\"0x5FbDB2315678afecb367f032d93F642f64180aa3\", donationTokenAbi.abi, signer);\r\n            setDonationTokenContract(donationToken);\r\n    \r\n            const proposal = new ethers.Contract(\"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\", proposalAbi.abi, signer);\r\n            setProposalContract(proposal);\r\n    \r\n            const owner = await campaign.owner();\r\n            console.log(\"Owner of contract:\", owner);\r\n            console.log(\"User's account:\", address);\r\n            setIsOwner(address?.toLowerCase() === owner.toLowerCase());\r\n    \r\n            const isActive = await campaign.isCampaignActive();\r\n            console.log(\"Campaign active:\", isActive);\r\n            \r\n            const fundsDistributed = await campaign.fundsDistributed();\r\n            console.log(\"Funds distributed:\", fundsDistributed);\r\n    \r\n            const totalDonations = await campaign.getTotalDonations();\r\n            console.log(\"Total donations:\", ethers.utils.formatEther(totalDonations));\r\n    \r\n            setIsContractsLoaded(true);\r\n        } catch (error) {\r\n            alert('Error initializing contracts: ' + error.message);\r\n        }\r\n    }\r\n  \r\n    \r\n    async function fetchCampaignData() {\r\n        if (!campaignContract) return; // Verifică înainte de apel\r\n        try {\r\n            const currentTotalDonations = await campaignContract.totalDonations();\r\n            const currentTargetAmount = await campaignContract.targetAmount();\r\n            \r\n            const formattedDonations = ethers.utils.formatEther(currentTotalDonations);\r\n            const formattedTarget = ethers.utils.formatEther(currentTargetAmount);\r\n            \r\n            setTotalDonations(formattedDonations);\r\n            setTargetAmount(formattedTarget);\r\n\r\n            const progress = (parseFloat(formattedDonations) * 100) / parseFloat(formattedTarget);\r\n            setProgress(progress || 0);\r\n\r\n            setIsTargetReached(parseFloat(formattedDonations) >= parseFloat(formattedTarget)); \r\n        } catch (error) {\r\n            console.error('Error fetching campaign data:', error);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (campaignContract) {\r\n            fetchCampaignData();\r\n        }\r\n    }, [campaignContract]);\r\n  \r\n\r\n    async function connectWallet() {\r\n        if (!window.ethereum) {\r\n            alert(\"⚠️ Please install MetaMask!\");\r\n            return;\r\n        }\r\n        try {\r\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n    \r\n            const signer = web3Provider.getSigner();\r\n            const address = await signer.getAddress();\r\n            const balance = await web3Provider.getBalance(address);\r\n    \r\n            setProvider(web3Provider);\r\n            setAccountAddress(address);\r\n            setAccountBalance(ethers.utils.formatEther(balance));\r\n            setIsLoggedIn(true);\r\n    \r\n            initializeContracts(web3Provider, address);\r\n            fetchBalance(address);\r\n            fetchTokenBalance();\r\n            fetchUserNFTs();\r\n    \r\n            // 🔹 Elimină evenimentele existente înainte de a le adăuga din nou\r\n            window.ethereum.removeListener(\"accountsChanged\", handleAccountChange);\r\n            window.ethereum.removeListener(\"chainChanged\", handleNetworkChange);\r\n    \r\n            // 🔹 Adaugă noile evenimente\r\n            window.ethereum.on(\"accountsChanged\", handleAccountChange);\r\n            window.ethereum.on(\"chainChanged\", handleNetworkChange);\r\n    \r\n        } catch (error) {\r\n            console.error(\"❌ Error connecting to wallet:\", error);\r\n            alert(\"❌ Connection failed. Try again.\");\r\n        }\r\n    }\r\n    \r\n    const handleAccountChange = (accounts) => {\r\n        if (accounts.length > 0) {\r\n            setAccountAddress(accounts[0]);\r\n            fetchBalance(accounts[0]);\r\n            fetchUserNFTs();\r\n        } else {\r\n            handleLogout();\r\n        }\r\n    };\r\n    \r\n    const handleNetworkChange = () => {\r\n        alert(\"🔄 Network changed! Please reconnect.\");\r\n        handleLogout();\r\n    };\r\n  \r\n    async function handleLogout() {\r\n        try {\r\n            setIsLoggedIn(false);\r\n            setAccountAddress('');\r\n            setAccountBalance('');\r\n            setProvider(null);\r\n            setCampaignContract(null);\r\n            setDonationTokenContract(null);\r\n            setProposalContract(null);\r\n            setTotalDonations(0);\r\n            setTargetAmount('');\r\n            setProgress(0);\r\n            setIsTargetReached(false);\r\n            setIsContractsLoaded(false);\r\n            setIsOwner(false);\r\n            setUserTokens([]);\r\n            setUserVotes({});\r\n            setDonationPercentages([]);\r\n    \r\n            // 🔹 Elimină event listenerii corect\r\n            if (window.ethereum) {\r\n                window.ethereum.removeListener(\"accountsChanged\", handleAccountChange);\r\n                window.ethereum.removeListener(\"chainChanged\", handleNetworkChange);\r\n            }\r\n    \r\n            alert(\"✅ Successfully logged out!\");\r\n        } catch (error) {\r\n            console.error(\"Logout error:\", error);\r\n        }\r\n    }\r\n  \r\n  \r\n    useEffect(() => {\r\n        async function checkConnection() {\r\n            if(!window.ethereum || campaignContract) return; \r\n            if (window.ethereum) {\r\n                try {\r\n                    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n                    if (accounts.length > 0) {\r\n                        const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                        setProvider(web3Provider);\r\n                        setAccountAddress(accounts[0]);\r\n                        fetchBalance(accounts[0]);\r\n                        initializeContracts(web3Provider, accounts[0]);\r\n                        fetchUserNFTs();\r\n                        setIsLoggedIn(true);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error checking wallet connection:\", error);\r\n                }\r\n            }\r\n        }\r\n        checkConnection();\r\n    }, []);\r\n\r\n    async function donate() {\r\n        try {\r\n            if (!isContractsLoaded || !campaignContract) {\r\n                alert(\"Contracts are still loading. Please wait.\");\r\n                return;\r\n            }\r\n    \r\n            if (!ethers.utils.isAddress(accountAddress)) {\r\n                alert(\"Invalid account address.\");\r\n                return;\r\n            }\r\n    \r\n            if (!donationAmount || parseFloat(donationAmount) <= 0) {\r\n                alert(\"Please enter a valid donation amount.\");\r\n                return;\r\n            }\r\n    \r\n            const donationValue = ethers.utils.parseEther(donationAmount);\r\n    \r\n            // Check if the owner is trying to donate\r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() === contractOwner.toLowerCase()) {\r\n                alert(\"The owner cannot make donations.\");\r\n                return;\r\n            }\r\n    \r\n            console.log(`💰 Attempting donation of: ${ethers.utils.formatEther(donationValue)} ETH`);\r\n    \r\n            // Send the donation transaction\r\n            const donationTx = await campaignContract.donate({ value: donationValue });\r\n            console.log(\"⏳ Transaction sent:\", donationTx.hash);\r\n    \r\n            // Wait for the transaction to be confirmed\r\n            await donationTx.wait();\r\n            console.log(\"✅ Transaction confirmed:\", donationTx.hash);\r\n    \r\n            // 🔹 Actualizează toate datele campaniei după confirmarea tranzacției\r\n            await fetchCampaignData();\r\n    \r\n            // 🔹 Arată mesajul de confirmare după ce UI-ul este actualizat\r\n            setShowThankYouPopup(true);\r\n    \r\n            // 🔹 Resetarea input-ului de donație\r\n            setDonationAmount(\"\"); \r\n    \r\n            console.log(\"🎉 Donation successful!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Error during donation:\", error);\r\n    \r\n            if (error.code === \"INSUFFICIENT_FUNDS\") {\r\n                alert(\"❌ Insufficient funds to complete this transaction.\");\r\n            } else if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\r\n                alert(\"⚠️ Transaction might fail. Possible causes:\\n1️⃣ Owner restriction in contract\\n2️⃣ Contract is not properly deployed\\n3️⃣ Network error.\");\r\n            } else {\r\n                alert(\"⚠️ An unexpected error occurred. Please try again later.\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    async function setCampaignTarget() {\r\n        try {\r\n            if (!campaignContract) {\r\n                alert(\"❌ Campaign contract is not initialized.\");\r\n                console.error(\"❌ Error: campaignContract is undefined.\");\r\n                return;\r\n            }\r\n    \r\n            if (!accountAddress) {\r\n                alert(\"❌ Please connect your wallet first.\");\r\n                return;\r\n            }\r\n    \r\n            if (parseFloat(targetAmount) <= 0) {\r\n                alert(\"❌ Please enter a valid target amount.\");\r\n                return;\r\n            }\r\n    \r\n            console.log(\"✅ Campaign Contract Instance:\", campaignContract);\r\n    \r\n            const campaignOwner = await campaignContract.owner();\r\n            console.log(\"✅ Campaign Owner:\", campaignOwner);\r\n    \r\n            if (accountAddress?.toLowerCase() !== campaignOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can set the target amount.\");\r\n                return;\r\n            }\r\n    \r\n            const targetValue = ethers.utils.parseEther(targetAmount);\r\n            \r\n            const currentTotalDonations = await campaignContract.getTotalDonations();\r\n            const currentTotalDonationsBN = ethers.BigNumber.from(currentTotalDonations);\r\n    \r\n            console.log(\"🔍 New Target Value:\", ethers.utils.formatEther(targetValue));\r\n            console.log(\"🔍 Current Total Donations:\", ethers.utils.formatEther(currentTotalDonationsBN));\r\n    \r\n            if (targetValue.lte(currentTotalDonationsBN)) {\r\n                alert(`❌ Target amount must be greater than total donations (${ethers.utils.formatEther(currentTotalDonationsBN)} ETH).`);\r\n                return;\r\n            }\r\n    \r\n            alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\r\n    \r\n            const tx = await campaignContract.setTargetAmount(targetValue);\r\n            await tx.wait();\r\n\r\n            await fetchCampaignData();\r\n    \r\n            alert(\"✅ Target amount set successfully!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Error setting campaign target:\", error);\r\n            alert(\"❌ An error occurred while setting the target amount. Check console for details.\");\r\n        }\r\n    }\r\n  \r\n\r\n    async function fetchProposals() {\r\n        try {\r\n            if (!campaignContract || !proposalContract) {\r\n                console.warn(\"⚠️ One or more contracts are not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            // 🔹 Obținem propunerile\r\n            const fetchedProposals = await proposalContract.getProposals();\r\n            if (!fetchedProposals || fetchedProposals.length === 0) {\r\n                console.warn(\"⚠️ No proposals available.\");\r\n                alert(\"No proposals have been created yet.\");\r\n                return;\r\n            }\r\n    \r\n            // 🔹 Transformăm propunerile într-un format mai ușor de folosit\r\n            const formattedProposals = fetchedProposals.map((proposal) => ({\r\n                id: proposal.id.toNumber(), \r\n                voteCount: proposal.voteCount.toNumber()\r\n            }));\r\n    \r\n            // 🔹 Hardcoded proposal details\r\n            const proposalsDetails = [\r\n                {\r\n                    id: 0,\r\n                    descriptionUrl: 'https://bafybeig7eytlutb4bhjt7hp35py6uyhdbdeqayr2dzddkbrjjd5eoon4im.ipfs.w3s.link/proposal1.txt',\r\n                    imageUrl: 'https://bafybeidemydfmxzi22eitoto6ypgdbvythlpwxp7esnydjedj734t5p3w4.ipfs.w3s.link/proposal1.webp',\r\n                },\r\n                {\r\n                    id: 1,\r\n                    descriptionUrl: 'https://bafybeigkod6hknxfrfs4yvjkwq6yqkly2ug3t47knigd4senza5y2arivm.ipfs.w3s.link/proposal2.txt',\r\n                    imageUrl: 'https://bafybeiccplvm3a4s4ullyli65y3222bhwiia25b3xjvtmbk57whcwp6rgm.ipfs.w3s.link/proposal2.jpeg',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    descriptionUrl: 'https://bafybeihd5on7ovlevvz6hmnbejuk5gzenfoilba4qlhymtmbugl7eotduy.ipfs.w3s.link/proposal3.txt',\r\n                    imageUrl: 'https://bafybeifipnkxtonmy4xcj2lwg6hbg36ovr45tt4wzll2go6k2ib3jqcfdm.ipfs.w3s.link/proposal3.webp',\r\n                },\r\n            ];\r\n    \r\n            // 🔹 Descărcăm descrierile propunerilor din IPFS\r\n            const descriptions = await Promise.all(proposalsDetails.map(async (proposal) => {\r\n                try {\r\n                    const response = await fetch(proposal.descriptionUrl);\r\n                    if (!response.ok) throw new Error(`⚠️ Failed to fetch: ${proposal.descriptionUrl}`);\r\n                    return await response.text();\r\n                } catch (error) {\r\n                    console.error(`⚠️ Error fetching description for proposal ${proposal.id}:`, error);\r\n                    return \"Description not available.\";\r\n                }\r\n            }));\r\n    \r\n            const totalDonations = await campaignContract.getTotalDonations();\r\n\r\n            const proposalFunds = await Promise.all(\r\n                formattedProposals.map(async (proposal) => {\r\n                    try {\r\n                        const percentage = await proposalContract.getProposalPercentage(proposal.id); // obținem procentul de voturi\r\n\r\n                        const percentageBN = ethers.BigNumber.from(percentage);\r\n                        const divisorBN = ethers.BigNumber.from(\"100\");\r\n\r\n                        const funds = totalDonations.mul(percentageBN).div(divisorBN);\r\n\r\n                        return funds;\r\n                    } catch (error) {\r\n                        console.error(`⚠️ Error calculating distributed funds for proposal ${proposal.id}:`, error);\r\n                        return ethers.BigNumber.from(\"0\");\r\n                    }\r\n                })\r\n            );\r\n\r\n            const proposalsWithFunds = formattedProposals.map((proposal, index) => ({\r\n                ...proposal,\r\n                funds: proposalFunds[index],\r\n            }));\r\n    \r\n            // 🔹 Actualizăm state-ul UI\r\n            setProposalsDetails(proposalsDetails);\r\n            setProposals(proposalsWithFunds);\r\n            setDescriptions(descriptions);\r\n            setShowVotePopup(false);\r\n            \r\n            console.log(\"✅ Proposals updated successfully!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching proposals:\", error);\r\n            alert(\"❌ An error occurred while fetching proposals.\");\r\n        }\r\n    }\r\n  \r\n  \r\n\r\n    async function fetchDonationPercentages() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract is not initialized.\");\r\n                return;\r\n            }\r\n    \r\n            if (!accountAddress) {\r\n                console.warn(\"User is not connected.\");\r\n                return;\r\n            }\r\n    \r\n            const percentages = await campaignContract.getDonationPercentages();\r\n            \r\n            if (!percentages || percentages.length === 0) {\r\n                console.warn(\"No donation percentages available.\");\r\n                setDonationPercentages([]);\r\n                return;\r\n            }\r\n    \r\n            setDonationPercentages(percentages.map(p => p.toNumber())); // ✅ Conversie sigură\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching donation percentages:\", error);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!isContractsLoaded || !campaignContract) return;\r\n        fetchDonationPercentages();\r\n        fetchProposals();\r\n    }, [isContractsLoaded, campaignContract]);\r\n    \r\n    const handleNextProposal = () => {\r\n        setCurrentProposalIndex((prevIndex) => (proposalsDetails.length > 0 ? Math.min(prevIndex + 1, proposalsDetails.length - 1) : 0));\r\n    };\r\n    \r\n    const handlePrevProposal = () => {\r\n        setCurrentProposalIndex((prevIndex) => (proposalsDetails.length > 0 ? Math.max(prevIndex - 1, 0) : 0));\r\n    };\r\n\r\n    async function checkUserVotes() {\r\n        if (!proposalContract || !accountAddress || proposals.length === 0) return;\r\n    \r\n        try {\r\n            const voteResults = await Promise.all(\r\n                proposals.map(proposal => proposalContract.hasVoted(proposal.id, accountAddress))\r\n            );\r\n    \r\n            const votes = proposals.reduce((acc, proposal, index) => {\r\n                acc[proposal.id] = voteResults[index];\r\n                return acc;\r\n            }, {});\r\n    \r\n            setUserVotes(votes);\r\n        } catch (error) {\r\n            console.error(\"❌ Error checking user votes:\", error);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!proposalContract || !accountAddress || proposals.length === 0) return;\r\n        checkUserVotes();\r\n    }, [proposalContract, accountAddress, proposals]);\r\n\r\n    async function handleVote(proposalId, tokenId) {\r\n        try {\r\n            if (!proposalContract || !donationTokenContract || !campaignContract) {\r\n                console.warn(\"⚠️ One or more contracts are not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            if (!tokenId) {\r\n                alert(\"❌ You must select an NFT to vote.\");\r\n                return;\r\n            }\r\n    \r\n            tokenId = Number(tokenId); \r\n            const ownerToken = await donationTokenContract.ownerOf(tokenId);\r\n            console.log(`NFT #${tokenId} is owned by:`, ownerToken);\r\n\r\n            const owner = await donationTokenContract.ownerOf(tokenId);\r\n            if (owner.toLowerCase() !== accountAddress.toLowerCase()) {\r\n                alert(\"❌ This NFT does not belong to you.\");\r\n                return;\r\n            }\r\n    \r\n            console.log(`🗳️ Voting for proposal ${proposalId} with NFT #${tokenId}`);\r\n    \r\n            const voteTx = await proposalContract.vote(proposalId, tokenId);\r\n            await voteTx.wait();\r\n            console.log(\"✅ Vote confirmed:\", voteTx.hash);\r\n    \r\n            setUserTokens(prevTokens => prevTokens.filter(id => id !== tokenId));\r\n            \r\n            setUserVotes((prevVotes) => ({\r\n                ...prevVotes,\r\n                [proposalId]: true,\r\n            }));\r\n            setSelectedTokenId(null);\r\n\r\n            await fetchTokenBalance();\r\n            await fetchDonationPercentages();\r\n            await fetchUserNFTs();\r\n            await fetchProposals();\r\n    \r\n            alert(\"✅ Vote successful!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Error during voting:\", error);\r\n    \r\n            if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\r\n                alert(\"⚠️ Gas estimation failed. The transaction might fail.\");\r\n            } else if (error.code === \"CALL_EXCEPTION\") {\r\n                alert(\"❌ You may not have permission to vote with this NFT.\");\r\n            } else {\r\n                alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    \r\n    async function distributeFunds() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            if (!accountAddress) {\r\n                console.warn(\"User is not connected.\");\r\n                return;\r\n            }\r\n    \r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() !== contractOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can distribute funds.\");\r\n                return;\r\n            }\r\n    \r\n            const isActive = await campaignContract.isCampaignActive();\r\n            console.log(\"Is campaign active?\", isActive);\r\n    \r\n            if (isActive) {\r\n                alert(\"❌ Campaign must be stopped before distributing funds.\");\r\n                return;\r\n            }\r\n    \r\n            const fundsDistributed = await campaignContract.fundsDistributed();\r\n            if (fundsDistributed) {\r\n                alert(\"❌ Funds have already been distributed.\");\r\n                return;\r\n            }\r\n    \r\n            alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\r\n    \r\n            const tx = await campaignContract.distributeFunds();\r\n            await tx.wait();\r\n    \r\n            await fetchCampaignData();\r\n    \r\n            alert(\"✅ Funds distributed successfully!\");\r\n            setFundsDistributed(true);\r\n        } catch (error) {\r\n            console.error(\"❌ Error distributing funds:\", error);\r\n            alert(\"❌ An error occurred while distributing funds. Check the console for details.\");\r\n        }\r\n    }\r\n  \r\n    async function withdrawFunds() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            if (!accountAddress) {\r\n                console.warn(\"User is not connected.\");\r\n                return;\r\n            }\r\n    \r\n            const isBeneficiary = await campaignContract.isBeneficiary(accountAddress);\r\n            if (!isBeneficiary) {\r\n                alert(\"❌ You are not authorized to withdraw funds.\");\r\n                return;\r\n            }\r\n    \r\n            alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\r\n    \r\n            const tx = await campaignContract.withdrawFunds();\r\n            await tx.wait();\r\n            console.log(\"✅ Funds withdrawn successfully:\", tx.hash);\r\n    \r\n            alert(\"✅ Funds withdrawn successfully! Check your wallet balance.\");\r\n    \r\n            await fetchCampaignData();\r\n            fetchBalance(accountAddress);\r\n        } catch (error) {\r\n            console.error(\"❌ Error withdrawing funds:\", error);\r\n    \r\n            if (error.code === \"CALL_EXCEPTION\") {\r\n                alert(\"❌ Transaction failed. You might not be eligible to withdraw.\");\r\n            } else if (error.code === \"INSUFFICIENT_FUNDS\") {\r\n                alert(\"❌ Insufficient gas balance for transaction.\");\r\n            } else {\r\n                alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    async function stopCampaign() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            if (!accountAddress) {\r\n                console.warn(\"User is not connected.\");\r\n                return;\r\n            }\r\n    \r\n            const totalDonations = await campaignContract.getTotalDonations();\r\n            const targetAmount = await campaignContract.getTargetAmount();\r\n    \r\n            const totalDonationsETH = ethers.utils.formatEther(totalDonations);\r\n            const targetAmountETH = ethers.utils.formatEther(targetAmount);\r\n    \r\n            console.log(\"Total donations:\", totalDonationsETH);\r\n            console.log(\"Target amount:\", targetAmountETH);\r\n    \r\n            if (parseFloat(totalDonationsETH) < parseFloat(targetAmountETH)) {\r\n                alert(\"❌ Target amount not reached yet.\");\r\n                return;\r\n            }\r\n    \r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() !== contractOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can stop the campaign.\");\r\n                return;\r\n            }\r\n    \r\n            alert(\"⏳ Transaction submitted. Please wait for confirmation...\");\r\n    \r\n            const tx = await campaignContract.stopCampaign();\r\n            await tx.wait();\r\n            console.log(\"✅ Campaign stopped successfully:\", tx.hash);\r\n    \r\n            alert(\"✅ Campaign stopped successfully!\");\r\n    \r\n            await fetchCampaignData();\r\n        } catch (error) {\r\n            console.error(\"❌ Error stopping campaign:\", error);\r\n            alert(\"❌ An error occurred while stopping the campaign. Check the console for details.\");\r\n        }\r\n    }\r\n  \r\n    const campaignImageUrl = \"https://bafybeia3oxbhfxrzyrvrgnp2gft3tvi7zhcqdvo2nyher2qna72agkaabq.ipfs.w3s.link/photo2.webp\";\r\n    const campaignDescriptionUrl = \"https://bafybeibq7ek3iezsk75gjfmqdn7yz7haw5f54l3uk5ky3yzmvwsxfuj65m.ipfs.w3s.link/description.txt\";\r\n\r\n    const fetchCampaignDescription = useCallback(async () => {\r\n        setCampaignDescription(\"Loading...\");\r\n\r\n        try {\r\n            const response = await fetch(campaignDescriptionUrl);\r\n            if (!response.ok) throw new Error(`Failed to fetch description: ${response.status}`);\r\n\r\n            const data = await response.text();\r\n            setCampaignDescription(data);\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching campaign description:\", error);\r\n            setCampaignDescription(\"Description not available.\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCampaignDescription();\r\n    }, [fetchCampaignDescription]);\r\n\r\n    //event listeners \r\n    useEffect(() => {\r\n        if (!campaignContract || !proposalContract || !accountAddress) return;\r\n    \r\n        const handleDonationReceived = async (donor, amount, tokenId) => {\r\n            console.log(`💰 Donation received from ${donor}: ${ethers.utils.formatEther(amount)} ETH. Token ID: ${tokenId}`);\r\n    \r\n            await fetchBalance(accountAddress); \r\n            await fetchTokenBalance(); \r\n    \r\n            const [updatedTotalDonations, updatedTargetAmount] = await Promise.all([\r\n                campaignContract.totalDonations(),\r\n                campaignContract.targetAmount(),\r\n            ]);\r\n    \r\n            const formattedTotalDonations = ethers.utils.formatEther(updatedTotalDonations);\r\n            const formattedTarget = ethers.utils.formatEther(updatedTargetAmount);\r\n            setTotalDonations(formattedTotalDonations);\r\n            setTargetAmount(formattedTarget);\r\n    \r\n            const newProgress = (parseFloat(formattedTotalDonations) * 100) / parseFloat(formattedTarget);\r\n            setProgress(newProgress || 0);\r\n            setIsTargetReached(parseFloat(formattedTotalDonations) >= parseFloat(formattedTarget));\r\n    \r\n            fetchDonationPercentages(); \r\n            fetchUserNFTs(); \r\n        };\r\n    \r\n        const handleFundsDistributed = () => {\r\n            console.log(\"✅ Funds have been distributed successfully!\");\r\n            fetchProposals();\r\n        };\r\n    \r\n        const handleCampaignClosed = () => {\r\n            console.log(\"⚠️ Campaign has been closed by the owner.\");\r\n            setIsActive(false);\r\n        };\r\n    \r\n        const handleFundsWithdrawn = async (beneficiary, amount) => {\r\n            console.log(`🏦 ${beneficiary} withdrew ${ethers.utils.formatEther(amount)} ETH.`);\r\n            await fetchCampaignData();\r\n        };\r\n    \r\n        const handleVoteCast = async (voter, proposalId) => {\r\n            console.log(`🗳️ ${voter} voted for proposal ID: ${proposalId}`);\r\n            await fetchProposals();\r\n        };\r\n    \r\n        campaignContract.on(\"DonationReceived\", handleDonationReceived);\r\n        campaignContract.on(\"FundsDistributed\", handleFundsDistributed);\r\n        campaignContract.on(\"CampaignClosed\", handleCampaignClosed);\r\n        campaignContract.on(\"FundsWithdrawn\", handleFundsWithdrawn);\r\n        proposalContract.on(\"VoteCast\", handleVoteCast);\r\n    \r\n        return () => {\r\n            campaignContract.off(\"DonationReceived\", handleDonationReceived);\r\n            campaignContract.off(\"FundsDistributed\", handleFundsDistributed);\r\n            campaignContract.off(\"CampaignClosed\", handleCampaignClosed);\r\n            campaignContract.off(\"FundsWithdrawn\", handleFundsWithdrawn);\r\n            proposalContract.off(\"VoteCast\", handleVoteCast);\r\n        };\r\n    }, [campaignContract, proposalContract, accountAddress]);\r\n  \r\n  \r\n  \r\n    return (\r\n      <div className=\"campaign-container\">\r\n          {!isLoggedIn ? (\r\n              <Login accountData={accountData} onLogin={connectWallet} placeholder=\"Enter address\" />\r\n          ) : (\r\n          <div>\r\n              <header className=\"campaign-header\">\r\n                  <h1>Support Our Campaign</h1>\r\n              </header>\r\n\r\n              <div className=\"account-info\">\r\n                  <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n                  <button className=\"button\" onClick={() => setShowAccountInfoPopup(true)}>Account Information</button>\r\n              </div>\r\n\r\n              {showAccountInfoPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowAccountInfoPopup(false)}>X</button>\r\n                          <h3>Account Information</h3>\r\n                          <p>Account: {accountAddress}</p>\r\n                          <p>ETH Balance: {accountBalance} ETH</p>\r\n                          <p>Token Balance: {tokenBalance} DONATE</p>\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              <button className=\"button\" onClick={() => setShowCampaignInfoPopup(true)}>Campaign Information</button>\r\n              {showCampaignInfoPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowCampaignInfoPopup(false)}>X</button>\r\n                          <h3>Campaign Information</h3>\r\n                          <p>{campaignDescription}</p>\r\n                          <img src={campaignImageUrl} alt=\"Campaign\" />\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              <button className=\"p-button\" onClick={() => setShowCampaignCausesPopup(true)}>Campaign Percentages</button>\r\n              {showCampaignCausesPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowCampaignCausesPopup(false)}>X</button>\r\n                          <h3>Campaign Percentages</h3>\r\n                          {proposalsDetails.length > 0 ? (\r\n                          <ul>\r\n                              {proposalsDetails.map((proposal, index) => (\r\n                                  <li key={proposal.id} style={{ marginBottom: '20px' }}>\r\n                                      <img src={proposal.imageUrl || \"default.jpg\"} style={{ width: '100px', height: '100px', objectFit: 'cover', marginBottom: '10px' }} />\r\n                                      <p>{descriptions[index] || \"No description available.\"}</p>\r\n                                      <p>Funds Allocated: {ethers.utils.formatEther(proposals[index]?.funds) || \"0\"} ETH</p>\r\n                                      <p>Donation Percentage: {donationPercentages[index] ? `${donationPercentages[index]}%` : \"0%\"}</p>\r\n                                  </li>\r\n                              ))}\r\n                          </ul>\r\n                          ) : (\r\n                              <p>Loading campaign details...</p>\r\n                          )}\r\n                      </div>\r\n                  </div>\r\n              )}\r\n              <button className=\"vote-button\" onClick={() => setShowVotePopup(true)}>\r\n                    Vote for a Proposal\r\n            </button>\r\n              <div className=\"campaign-progress\">\r\n                  <h2>Campaign Progress</h2>\r\n                  <p>Total Donations: {totalDonations} ETH</p>\r\n                  {targetAmount && <p>Target Amount: {targetAmount} ETH</p>}\r\n                  <p>Progress: {progress.toFixed(2)}%</p>\r\n                  <progress value={progress} max=\"100\"></progress>\r\n              </div>\r\n\r\n              {isOwner && (\r\n                  <div>\r\n                      <h2>Manage Campaign</h2>\r\n                      {isActive && isTargetReached && (\r\n                          <button onClick={stopCampaign}>Stop Campaign</button>\r\n                      )}\r\n                      {!isActive && !fundsDistributed && (\r\n                          <button onClick={distributeFunds}>Distribute Funds</button>\r\n                      )}\r\n                  </div>\r\n              )}\r\n\r\n              {humanitarianAddresses.includes(accountAddress.toLowerCase()) ? (\r\n                  <div>\r\n                      <h2>Withdraw Your Funds</h2>\r\n                      <button onClick={withdrawFunds}>Withdraw</button>\r\n                  </div>\r\n              ) : (\r\n                  <div>\r\n                      {isActive ? (\r\n                          <div>\r\n                              <h2>Make a Donation</h2>\r\n                              <label>Amount (ETH):</label>\r\n                              <input type=\"number\" value={donationAmount} onChange={(e) => setDonationAmount(e.target.value)} />\r\n                              <button onClick={donate}>Donate</button>\r\n                          </div>\r\n                      ) : (\r\n                          <p>The campaign is closed. Donations are no longer accepted.</p>\r\n                      )}\r\n                  </div>\r\n              )}\r\n              \r\n              {/* Vote Popup with NFT Selection */}\r\n              {showVotePopup && proposalsDetails.length > 0 && currentProposalIndex < proposalsDetails.length && (\r\n              <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                      <button className=\"close-popup-button\" onClick={() => setShowVotePopup(false)}>X</button>\r\n                      <h3>Donate for a Cause</h3>\r\n                      <div className=\"proposal\">\r\n                          <img src={proposalsDetails[currentProposalIndex].imageUrl} style={{ width: '300px', height: '300px', objectFit: 'cover', marginBottom: '10px' }} />\r\n                          <p>{descriptions[currentProposalIndex]}</p>\r\n\r\n                          {userTokens.length > 0 ? (\r\n                              <>\r\n                                  <select onChange={(e) => setSelectedTokenId(Number(e.target.value))}>\r\n                                        <option value=\"\">Select an NFT</option>\r\n                                        {userTokens.map((tokenId) => (\r\n                                            <option key={tokenId} value={tokenId}>Token #{tokenId}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n\r\n                                  <button \r\n                                      onClick={() => handleVote(proposalsDetails[currentProposalIndex].id, selectedTokenId)} \r\n                                      disabled={userVotes[proposalsDetails[currentProposalIndex].id] || !selectedTokenId}\r\n                                  >\r\n                                      {userVotes[proposalsDetails[currentProposalIndex].id] ? \"Already Voted\" : \"Vote\"}\r\n                                  </button>\r\n                              </>\r\n                          ) : (\r\n                              <p>❌ You need at least one DONATE NFT to vote.</p>\r\n                          )}\r\n                      </div>\r\n\r\n                      <div className=\"pagination-controls\">\r\n                          <button className=\"next-button\" onClick={handlePrevProposal} disabled={currentProposalIndex === 0}>Previous</button>\r\n                          <button className=\"next-button\" onClick={handleNextProposal} disabled={currentProposalIndex === proposalsDetails.length - 1}>Next</button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          )}\r\n\r\n              {isOwner && (\r\n                  <div className=\"set-target-section\">\r\n                      <h2>Set Campaign Target</h2>\r\n                      <label>Target Amount (ETH):</label>\r\n                      <input type=\"number\" value={targetAmount} onChange={(e) => setTargetAmount(e.target.value)} />\r\n                      <button onClick={setCampaignTarget}>Set Target</button>\r\n                  </div>\r\n              )}\r\n              {showThankYouPopup && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <h2>Thank You!</h2>\r\n                    <p>Your generosity makes a difference. Thank you for your support!</p>\r\n                    <button onClick={() => setShowThankYouPopup(false)}>Close</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n    \r\n              {isTargetReached && showThankYouPopup && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <h2>🎉 Target Reached! 🎉</h2>\r\n                    <p>We have reached our goal, thanks to your kindness and support!</p>\r\n                    <button onClick={() => setShowThankYouPopup(false)}>Close</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </div>\r\n          )}\r\n        </div>\r\n    );\r\n}\r\nexport default CampaignInteraction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}