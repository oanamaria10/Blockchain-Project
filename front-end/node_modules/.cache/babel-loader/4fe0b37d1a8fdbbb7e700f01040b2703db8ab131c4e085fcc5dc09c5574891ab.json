{"ast":null,"code":"'use strict';\n\nconst {\n  parseSetCookie\n} = require('./parse');\nconst {\n  stringify,\n  getHeadersList\n} = require('./util');\nconst {\n  webidl\n} = require('../fetch/webidl');\nconst {\n  Headers\n} = require('../fetch/headers');\n\n/**\n * @typedef {Object} Cookie\n * @property {string} name\n * @property {string} value\n * @property {Date|number|undefined} expires\n * @property {number|undefined} maxAge\n * @property {string|undefined} domain\n * @property {string|undefined} path\n * @property {boolean|undefined} secure\n * @property {boolean|undefined} httpOnly\n * @property {'Strict'|'Lax'|'None'} sameSite\n * @property {string[]} unparsed\n */\n\n/**\n * @param {Headers} headers\n * @returns {Record<string, string>}\n */\nfunction getCookies(headers) {\n  webidl.argumentLengthCheck(arguments, 1, {\n    header: 'getCookies'\n  });\n  webidl.brandCheck(headers, Headers, {\n    strict: false\n  });\n  const cookie = headers.get('cookie');\n  const out = {};\n  if (!cookie) {\n    return out;\n  }\n  for (const piece of cookie.split(';')) {\n    const [name, ...value] = piece.split('=');\n    out[name.trim()] = value.join('=');\n  }\n  return out;\n}\n\n/**\n * @param {Headers} headers\n * @param {string} name\n * @param {{ path?: string, domain?: string }|undefined} attributes\n * @returns {void}\n */\nfunction deleteCookie(headers, name, attributes) {\n  webidl.argumentLengthCheck(arguments, 2, {\n    header: 'deleteCookie'\n  });\n  webidl.brandCheck(headers, Headers, {\n    strict: false\n  });\n  name = webidl.converters.DOMString(name);\n  attributes = webidl.converters.DeleteCookieAttributes(attributes);\n\n  // Matches behavior of\n  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278\n  setCookie(headers, {\n    name,\n    value: '',\n    expires: new Date(0),\n    ...attributes\n  });\n}\n\n/**\n * @param {Headers} headers\n * @returns {Cookie[]}\n */\nfunction getSetCookies(headers) {\n  webidl.argumentLengthCheck(arguments, 1, {\n    header: 'getSetCookies'\n  });\n  webidl.brandCheck(headers, Headers, {\n    strict: false\n  });\n  const cookies = getHeadersList(headers).cookies;\n  if (!cookies) {\n    return [];\n  }\n\n  // In older versions of undici, cookies is a list of name:value.\n  return cookies.map(pair => parseSetCookie(Array.isArray(pair) ? pair[1] : pair));\n}\n\n/**\n * @param {Headers} headers\n * @param {Cookie} cookie\n * @returns {void}\n */\nfunction setCookie(headers, cookie) {\n  webidl.argumentLengthCheck(arguments, 2, {\n    header: 'setCookie'\n  });\n  webidl.brandCheck(headers, Headers, {\n    strict: false\n  });\n  cookie = webidl.converters.Cookie(cookie);\n  const str = stringify(cookie);\n  if (str) {\n    headers.append('Set-Cookie', stringify(cookie));\n  }\n}\nwebidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([{\n  converter: webidl.nullableConverter(webidl.converters.DOMString),\n  key: 'path',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters.DOMString),\n  key: 'domain',\n  defaultValue: null\n}]);\nwebidl.converters.Cookie = webidl.dictionaryConverter([{\n  converter: webidl.converters.DOMString,\n  key: 'name'\n}, {\n  converter: webidl.converters.DOMString,\n  key: 'value'\n}, {\n  converter: webidl.nullableConverter(value => {\n    if (typeof value === 'number') {\n      return webidl.converters['unsigned long long'](value);\n    }\n    return new Date(value);\n  }),\n  key: 'expires',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters['long long']),\n  key: 'maxAge',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters.DOMString),\n  key: 'domain',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters.DOMString),\n  key: 'path',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters.boolean),\n  key: 'secure',\n  defaultValue: null\n}, {\n  converter: webidl.nullableConverter(webidl.converters.boolean),\n  key: 'httpOnly',\n  defaultValue: null\n}, {\n  converter: webidl.converters.USVString,\n  key: 'sameSite',\n  allowedValues: ['Strict', 'Lax', 'None']\n}, {\n  converter: webidl.sequenceConverter(webidl.converters.DOMString),\n  key: 'unparsed',\n  defaultValue: []\n}]);\nmodule.exports = {\n  getCookies,\n  deleteCookie,\n  getSetCookies,\n  setCookie\n};","map":{"version":3,"names":["parseSetCookie","require","stringify","getHeadersList","webidl","Headers","getCookies","headers","argumentLengthCheck","arguments","header","brandCheck","strict","cookie","get","out","piece","split","name","value","trim","join","deleteCookie","attributes","converters","DOMString","DeleteCookieAttributes","setCookie","expires","Date","getSetCookies","cookies","map","pair","Array","isArray","Cookie","str","append","dictionaryConverter","converter","nullableConverter","key","defaultValue","boolean","USVString","allowedValues","sequenceConverter","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/undici/lib/cookies/index.js"],"sourcesContent":["'use strict'\n\nconst { parseSetCookie } = require('./parse')\nconst { stringify, getHeadersList } = require('./util')\nconst { webidl } = require('../fetch/webidl')\nconst { Headers } = require('../fetch/headers')\n\n/**\n * @typedef {Object} Cookie\n * @property {string} name\n * @property {string} value\n * @property {Date|number|undefined} expires\n * @property {number|undefined} maxAge\n * @property {string|undefined} domain\n * @property {string|undefined} path\n * @property {boolean|undefined} secure\n * @property {boolean|undefined} httpOnly\n * @property {'Strict'|'Lax'|'None'} sameSite\n * @property {string[]} unparsed\n */\n\n/**\n * @param {Headers} headers\n * @returns {Record<string, string>}\n */\nfunction getCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookie = headers.get('cookie')\n  const out = {}\n\n  if (!cookie) {\n    return out\n  }\n\n  for (const piece of cookie.split(';')) {\n    const [name, ...value] = piece.split('=')\n\n    out[name.trim()] = value.join('=')\n  }\n\n  return out\n}\n\n/**\n * @param {Headers} headers\n * @param {string} name\n * @param {{ path?: string, domain?: string }|undefined} attributes\n * @returns {void}\n */\nfunction deleteCookie (headers, name, attributes) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  name = webidl.converters.DOMString(name)\n  attributes = webidl.converters.DeleteCookieAttributes(attributes)\n\n  // Matches behavior of\n  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278\n  setCookie(headers, {\n    name,\n    value: '',\n    expires: new Date(0),\n    ...attributes\n  })\n}\n\n/**\n * @param {Headers} headers\n * @returns {Cookie[]}\n */\nfunction getSetCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookies = getHeadersList(headers).cookies\n\n  if (!cookies) {\n    return []\n  }\n\n  // In older versions of undici, cookies is a list of name:value.\n  return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair))\n}\n\n/**\n * @param {Headers} headers\n * @param {Cookie} cookie\n * @returns {void}\n */\nfunction setCookie (headers, cookie) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'setCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  cookie = webidl.converters.Cookie(cookie)\n\n  const str = stringify(cookie)\n\n  if (str) {\n    headers.append('Set-Cookie', stringify(cookie))\n  }\n}\n\nwebidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  }\n])\n\nwebidl.converters.Cookie = webidl.dictionaryConverter([\n  {\n    converter: webidl.converters.DOMString,\n    key: 'name'\n  },\n  {\n    converter: webidl.converters.DOMString,\n    key: 'value'\n  },\n  {\n    converter: webidl.nullableConverter((value) => {\n      if (typeof value === 'number') {\n        return webidl.converters['unsigned long long'](value)\n      }\n\n      return new Date(value)\n    }),\n    key: 'expires',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters['long long']),\n    key: 'maxAge',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'secure',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'httpOnly',\n    defaultValue: null\n  },\n  {\n    converter: webidl.converters.USVString,\n    key: 'sameSite',\n    allowedValues: ['Strict', 'Lax', 'None']\n  },\n  {\n    converter: webidl.sequenceConverter(webidl.converters.DOMString),\n    key: 'unparsed',\n    defaultValue: []\n  }\n])\n\nmodule.exports = {\n  getCookies,\n  deleteCookie,\n  getSetCookies,\n  setCookie\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}