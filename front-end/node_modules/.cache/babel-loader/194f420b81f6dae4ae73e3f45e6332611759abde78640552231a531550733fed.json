{"ast":null,"code":"var _jsxFileName = \"C:\\\\FACULTATE\\\\Proiect\\\\front-end\\\\src\\\\uploadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Web3Storage } from 'web3.storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [cid, setCid] = useState('');\n  const [token, setToken] = useState('');\n\n  // Handle file input change\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Handle token input change\n  const handleTokenChange = event => {\n    setToken(event.target.value);\n  };\n\n  // Initialize Web3.Storage client and upload file\n  const uploadFile = async () => {\n    if (!file) {\n      setStatus('Please select a file to upload.');\n      return;\n    }\n    if (!token) {\n      setStatus('Please enter a valid API token.');\n      return;\n    }\n    try {\n      setStatus('Uploading file...');\n      const client = new Web3Storage({\n        token\n      });\n\n      // Upload the file to Web3.Storage\n      const cid = await client.put([file]);\n      setCid(cid); // Store the CID of the uploaded file\n      setStatus(`File uploaded successfully! CID: ${cid}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setStatus('Error uploading file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File to Web3.Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your Web3.Storage API Token\",\n        value: token,\n        onChange: handleTokenChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), cid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File CID: \", cid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"51h9lg/bODXOX5rgTAlNHuNDCRY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Web3Storage","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","status","setStatus","cid","setCid","token","setToken","handleFileChange","event","target","files","handleTokenChange","value","uploadFile","client","put","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/FACULTATE/Proiect/front-end/src/uploadFile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Web3Storage } from 'web3.storage';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [cid, setCid] = useState('');\r\n  const [token, setToken] = useState('');\r\n\r\n  // Handle file input change\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  // Handle token input change\r\n  const handleTokenChange = (event) => {\r\n    setToken(event.target.value);\r\n  };\r\n\r\n  // Initialize Web3.Storage client and upload file\r\n  const uploadFile = async () => {\r\n    if (!file) {\r\n      setStatus('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    if (!token) {\r\n      setStatus('Please enter a valid API token.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus('Uploading file...');\r\n      const client = new Web3Storage({ token });\r\n\r\n      // Upload the file to Web3.Storage\r\n      const cid = await client.put([file]);\r\n\r\n      setCid(cid); // Store the CID of the uploaded file\r\n      setStatus(`File uploaded successfully! CID: ${cid}`);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setStatus('Error uploading file.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload File to Web3.Storage</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your Web3.Storage API Token\"\r\n          value={token}\r\n          onChange={handleTokenChange}\r\n        />\r\n        <div>\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <button onClick={uploadFile}>Upload File</button>\r\n        </div>\r\n      </div>\r\n\r\n      <p>{status}</p>\r\n      {cid && <p>File CID: {cid}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}