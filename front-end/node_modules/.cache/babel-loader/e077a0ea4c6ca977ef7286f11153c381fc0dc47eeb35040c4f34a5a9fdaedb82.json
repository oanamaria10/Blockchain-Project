{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceAll = exports.pluralize = void 0;\n/**\n * Returns the plural form of a word.\n *\n * @param n The number of things to represent. This dictates whether to return\n * the singular or plural form of the word.\n * @param singular The singular form of the word.\n * @param plural An optional plural form of the word. If non is given, the\n * plural form is constructed by appending an \"s\" to the singular form.\n */\nfunction pluralize(n, singular, plural) {\n  if (n === 1) {\n    return singular;\n  }\n  if (plural !== undefined) {\n    return plural;\n  }\n  return `${singular}s`;\n}\nexports.pluralize = pluralize;\n/**\n * Replaces all the instances of [[toReplace]] by [[replacement]] in [[str]].\n */\nfunction replaceAll(str, toReplace, replacement) {\n  return str.split(toReplace).join(replacement);\n}\nexports.replaceAll = replaceAll;","map":{"version":3,"names":["pluralize","n","singular","plural","undefined","exports","replaceAll","str","toReplace","replacement","split","join"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\util\\strings.ts"],"sourcesContent":["/**\n * Returns the plural form of a word.\n *\n * @param n The number of things to represent. This dictates whether to return\n * the singular or plural form of the word.\n * @param singular The singular form of the word.\n * @param plural An optional plural form of the word. If non is given, the\n * plural form is constructed by appending an \"s\" to the singular form.\n */\nexport function pluralize(n: number, singular: string, plural?: string) {\n  if (n === 1) {\n    return singular;\n  }\n\n  if (plural !== undefined) {\n    return plural;\n  }\n\n  return `${singular}s`;\n}\n\n/**\n * Replaces all the instances of [[toReplace]] by [[replacement]] in [[str]].\n */\nexport function replaceAll(\n  str: string,\n  toReplace: string,\n  replacement: string\n) {\n  return str.split(toReplace).join(replacement);\n}\n"],"mappings":";;;;;;AAAA;;;;;;;;;AASA,SAAgBA,SAASA,CAACC,CAAS,EAAEC,QAAgB,EAAEC,MAAe;EACpE,IAAIF,CAAC,KAAK,CAAC,EAAE;IACX,OAAOC,QAAQ;;EAGjB,IAAIC,MAAM,KAAKC,SAAS,EAAE;IACxB,OAAOD,MAAM;;EAGf,OAAO,GAAGD,QAAQ,GAAG;AACvB;AAVAG,OAAA,CAAAL,SAAA,GAAAA,SAAA;AAYA;;;AAGA,SAAgBM,UAAUA,CACxBC,GAAW,EACXC,SAAiB,EACjBC,WAAmB;EAEnB,OAAOF,GAAG,CAACG,KAAK,CAACF,SAAS,CAAC,CAACG,IAAI,CAACF,WAAW,CAAC;AAC/C;AANAJ,OAAA,CAAAC,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}