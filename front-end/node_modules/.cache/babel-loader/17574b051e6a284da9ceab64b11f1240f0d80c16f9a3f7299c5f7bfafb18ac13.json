{"ast":null,"code":"/**\n * Filecoin Deal Tracker Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as DealTracker from '@web3-storage/capabilities/filecoin/deal-tracker'\n * ```\n *\n * @module\n */\n\nimport { capability, Schema, ok } from '@ucanto/validator';\nimport { PieceLink } from './lib.js';\nimport { equalWith, checkLink, and } from '../utils.js';\n\n/**\n * Capability allowing a Storefront or Aggregator to obtain deal information\n * for a given aggregate piece.\n */\nexport const dealInfo = capability({\n  can: 'deal/info',\n  /**\n   * DID of the Storefront.\n   */\n  with: Schema.did(),\n  nb: Schema.struct({\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: PieceLink\n  }),\n  derives: (claim, from) => {\n    return and(equalWith(claim, from)) || and(checkLink(claim.nb.piece, from.nb.piece, 'nb.piece')) || ok({});\n  }\n});","map":{"version":3,"names":["capability","Schema","ok","PieceLink","equalWith","checkLink","and","dealInfo","can","with","did","nb","struct","piece","derives","claim","from"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/capabilities/src/filecoin/deal-tracker.js"],"sourcesContent":["/**\n * Filecoin Deal Tracker Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as DealTracker from '@web3-storage/capabilities/filecoin/deal-tracker'\n * ```\n *\n * @module\n */\n\nimport { capability, Schema, ok } from '@ucanto/validator'\nimport { PieceLink } from './lib.js'\nimport { equalWith, checkLink, and } from '../utils.js'\n\n/**\n * Capability allowing a Storefront or Aggregator to obtain deal information\n * for a given aggregate piece.\n */\nexport const dealInfo = capability({\n  can: 'deal/info',\n  /**\n   * DID of the Storefront.\n   */\n  with: Schema.did(),\n  nb: Schema.struct({\n    /**\n     * CID of the piece.\n     *\n     * @see https://github.com/filecoin-project/FIPs/pull/758/files\n     */\n    piece: PieceLink,\n  }),\n  derives: (claim, from) => {\n    return (\n      and(equalWith(claim, from)) ||\n      and(checkLink(claim.nb.piece, from.nb.piece, 'nb.piece')) ||\n      ok({})\n    )\n  },\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,MAAM,EAAEC,EAAE,QAAQ,mBAAmB;AAC1D,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,SAAS,EAAEC,SAAS,EAAEC,GAAG,QAAQ,aAAa;;AAEvD;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGP,UAAU,CAAC;EACjCQ,GAAG,EAAE,WAAW;EAChB;AACF;AACA;EACEC,IAAI,EAAER,MAAM,CAACS,GAAG,CAAC,CAAC;EAClBC,EAAE,EAAEV,MAAM,CAACW,MAAM,CAAC;IAChB;AACJ;AACA;AACA;AACA;IACIC,KAAK,EAAEV;EACT,CAAC,CAAC;EACFW,OAAO,EAAEA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACxB,OACEV,GAAG,CAACF,SAAS,CAACW,KAAK,EAAEC,IAAI,CAAC,CAAC,IAC3BV,GAAG,CAACD,SAAS,CAACU,KAAK,CAACJ,EAAE,CAACE,KAAK,EAAEG,IAAI,CAACL,EAAE,CAACE,KAAK,EAAE,UAAU,CAAC,CAAC,IACzDX,EAAE,CAAC,CAAC,CAAC,CAAC;EAEV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}