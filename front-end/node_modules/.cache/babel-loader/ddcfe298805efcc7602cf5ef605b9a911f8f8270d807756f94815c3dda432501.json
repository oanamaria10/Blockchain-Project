{"ast":null,"code":"'use strict';\n\n/**\n @module interfaces/common\n*/\nvar Suite = require('../suite');\nvar errors = require('../errors');\nvar createMissingArgumentError = errors.createMissingArgumentError;\nvar createUnsupportedError = errors.createUnsupportedError;\nvar createForbiddenExclusivityError = errors.createForbiddenExclusivityError;\n\n/**\n * Functions common to more than one interface.\n *\n * @private\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function (suites, context, mocha) {\n  /**\n   * Check if the suite should be tested.\n   *\n   * @private\n   * @param {Suite} suite - suite to check\n   * @returns {boolean}\n   */\n  function shouldBeTested(suite) {\n    return !mocha.options.grep || mocha.options.grep && mocha.options.grep.test(suite.fullTitle()) && !mocha.options.invert;\n  }\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root suite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only(opts) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip(opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n      /**\n       * Creates a suite.\n       *\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create(opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n        if (opts.isOnly) {\n          suite.markOnly();\n        }\n        if (suite.pending && mocha.options.forbidPending && shouldBeTested(suite)) {\n          throw createUnsupportedError('Pending test forbidden');\n        }\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw createMissingArgumentError('Suite \"' + suite.fullTitle() + '\" was defined but no callback was supplied. ' + 'Supply a callback or explicitly skip the suite.', 'callback', 'function');\n        } else if (!opts.fn && suite.pending) {\n          suites.shift();\n        }\n        return suite;\n      }\n    },\n    test: {\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function (mocha, test) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        test.markOnly();\n        return test;\n      },\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function (title) {\n        context.test(title);\n      }\n    }\n  };\n};","map":{"version":3,"names":["Suite","require","errors","createMissingArgumentError","createUnsupportedError","createForbiddenExclusivityError","module","exports","suites","context","mocha","shouldBeTested","suite","options","grep","test","fullTitle","invert","runWithSuite","run","before","name","fn","beforeAll","after","afterAll","beforeEach","afterEach","only","opts","forbidOnly","isOnly","create","skip","pending","title","Boolean","file","unshift","markOnly","forbidPending","call","shift"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/interfaces/common.js"],"sourcesContent":["'use strict';\n\n/**\n @module interfaces/common\n*/\n\nvar Suite = require('../suite');\nvar errors = require('../errors');\nvar createMissingArgumentError = errors.createMissingArgumentError;\nvar createUnsupportedError = errors.createUnsupportedError;\nvar createForbiddenExclusivityError = errors.createForbiddenExclusivityError;\n\n/**\n * Functions common to more than one interface.\n *\n * @private\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function (suites, context, mocha) {\n  /**\n   * Check if the suite should be tested.\n   *\n   * @private\n   * @param {Suite} suite - suite to check\n   * @returns {boolean}\n   */\n  function shouldBeTested(suite) {\n    return (\n      !mocha.options.grep ||\n      (mocha.options.grep &&\n        mocha.options.grep.test(suite.fullTitle()) &&\n        !mocha.options.invert)\n    );\n  }\n\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root suite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only(opts) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip(opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Creates a suite.\n       *\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create(opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n        if (opts.isOnly) {\n          suite.markOnly();\n        }\n        if (\n          suite.pending &&\n          mocha.options.forbidPending &&\n          shouldBeTested(suite)\n        ) {\n          throw createUnsupportedError('Pending test forbidden');\n        }\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw createMissingArgumentError(\n            'Suite \"' +\n              suite.fullTitle() +\n              '\" was defined but no callback was supplied. ' +\n              'Supply a callback or explicitly skip the suite.',\n            'callback',\n            'function'\n          );\n        } else if (!opts.fn && suite.pending) {\n          suites.shift();\n        }\n\n        return suite;\n      }\n    },\n\n    test: {\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function (mocha, test) {\n        if (mocha.options.forbidOnly) {\n          throw createForbiddenExclusivityError(mocha);\n        }\n        test.markOnly();\n        return test;\n      },\n\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function (title) {\n        context.test(title);\n      }\n    }\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}