{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unsafeObjectEntries = exports.unsafeObjectKeys = void 0;\n/**\n * This function is a typed version of `Object.keys`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nexports.unsafeObjectKeys = Object.keys;\n/**\n * This function is a typed version of `Object.entries`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nfunction unsafeObjectEntries(o) {\n  return Object.entries(o);\n}\nexports.unsafeObjectEntries = unsafeObjectEntries;","map":{"version":3,"names":["exports","unsafeObjectKeys","Object","keys","unsafeObjectEntries","o","entries"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\util\\unsafe.ts"],"sourcesContent":["/**\n * This function is a typed version of `Object.keys`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nexport const unsafeObjectKeys = Object.keys as <T>(\n  o: T\n) => Array<Extract<keyof T, string>>;\n\n/**\n * This function is a typed version of `Object.entries`. Note that it's type\n * unsafe. You have to be sure that `o` has exactly the same keys as `T`.\n */\nexport function unsafeObjectEntries<T extends object>(o: T) {\n  return Object.entries(o) as Array<[keyof T, T[keyof T]]>;\n}\n"],"mappings":";;;;;;AAAA;;;;AAIaA,OAAA,CAAAC,gBAAgB,GAAGC,MAAM,CAACC,IAEH;AAEpC;;;;AAIA,SAAgBC,mBAAmBA,CAAmBC,CAAI;EACxD,OAAOH,MAAM,CAACI,OAAO,CAACD,CAAC,CAAiC;AAC1D;AAFAL,OAAA,CAAAI,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}