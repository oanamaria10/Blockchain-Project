{"ast":null,"code":"import * as API from '@ucanto/interface';\n\n/**\n * @template {API.ParsedCapability} C\n * @implements {API.Authorization<C>}\n */\nclass Authorization {\n  /**\n   * @param {API.Match<C>} match\n   * @param {API.Authorization<API.ParsedCapability>[]} proofs\n   */\n  constructor(match, proofs) {\n    this.match = match;\n    this.proofs = proofs;\n  }\n  get capability() {\n    return this.match.value;\n  }\n  get delegation() {\n    return this.match.source[0].delegation;\n  }\n  get issuer() {\n    return this.delegation.issuer;\n  }\n  get audience() {\n    return this.delegation.audience;\n  }\n}\n\n/**\n * @template {API.ParsedCapability} C\n * @param {API.Match<C>} match\n * @param {API.Authorization<API.ParsedCapability>[]} proofs\n * @returns {API.Authorization<C>}\n */\nexport const create = (match, proofs = []) => new Authorization(match, proofs);\n\n/**\n *\n * @param {API.Authorization} authorization\n * @returns {Iterable<API.UCANLink>}\n */\nexport const iterate = function* ({\n  delegation,\n  proofs\n}) {\n  yield delegation.cid;\n  for (const proof of proofs) {\n    yield* iterate(proof);\n  }\n};","map":{"version":3,"names":["API","Authorization","constructor","match","proofs","capability","value","delegation","source","issuer","audience","create","iterate","cid","proof"],"sources":["C:/FACULTATE/Proiect/node_modules/@ucanto/validator/src/authorization.js"],"sourcesContent":["import * as API from '@ucanto/interface'\n\n/**\n * @template {API.ParsedCapability} C\n * @implements {API.Authorization<C>}\n */\nclass Authorization {\n  /**\n   * @param {API.Match<C>} match\n   * @param {API.Authorization<API.ParsedCapability>[]} proofs\n   */\n  constructor(match, proofs) {\n    this.match = match\n    this.proofs = proofs\n  }\n  get capability() {\n    return this.match.value\n  }\n  get delegation() {\n    return this.match.source[0].delegation\n  }\n  get issuer() {\n    return this.delegation.issuer\n  }\n  get audience() {\n    return this.delegation.audience\n  }\n}\n\n/**\n * @template {API.ParsedCapability} C\n * @param {API.Match<C>} match\n * @param {API.Authorization<API.ParsedCapability>[]} proofs\n * @returns {API.Authorization<C>}\n */\nexport const create = (match, proofs = []) => new Authorization(match, proofs)\n\n/**\n *\n * @param {API.Authorization} authorization\n * @returns {Iterable<API.UCANLink>}\n */\nexport const iterate = function* ({ delegation, proofs }) {\n  yield delegation.cid\n  for (const proof of proofs) {\n    yield* iterate(proof)\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,mBAAmB;;AAExC;AACA;AACA;AACA;AACA,MAAMC,aAAa,CAAC;EAClB;AACF;AACA;AACA;EACEC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACzB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACA,IAAIC,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACF,KAAK,CAACG,KAAK;EACzB;EACA,IAAIC,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACD,UAAU;EACxC;EACA,IAAIE,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,UAAU,CAACE,MAAM;EAC/B;EACA,IAAIC,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACH,UAAU,CAACG,QAAQ;EACjC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACR,KAAK,EAAEC,MAAM,GAAG,EAAE,KAAK,IAAIH,aAAa,CAACE,KAAK,EAAEC,MAAM,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,OAAO,GAAG,UAAAA,CAAW;EAAEL,UAAU;EAAEH;AAAO,CAAC,EAAE;EACxD,MAAMG,UAAU,CAACM,GAAG;EACpB,KAAK,MAAMC,KAAK,IAAIV,MAAM,EAAE;IAC1B,OAAOQ,OAAO,CAACE,KAAK,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}