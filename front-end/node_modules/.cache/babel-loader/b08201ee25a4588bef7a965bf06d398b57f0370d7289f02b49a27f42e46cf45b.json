{"ast":null,"code":"'use strict';\n\nconst {\n  MessageChannel,\n  receiveMessageOnPort\n} = require('worker_threads');\nconst corsSafeListedMethods = ['GET', 'HEAD', 'POST'];\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods);\nconst nullBodyStatus = [101, 204, 205, 304];\nconst redirectStatus = [301, 302, 303, 307, 308];\nconst redirectStatusSet = new Set(redirectStatus);\n\n// https://fetch.spec.whatwg.org/#block-bad-port\nconst badPorts = ['1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79', '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137', '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532', '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723', '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697', '10080'];\nconst badPortsSet = new Set(badPorts);\n\n// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\nconst referrerPolicy = ['', 'no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin', 'strict-origin-when-cross-origin', 'unsafe-url'];\nconst referrerPolicySet = new Set(referrerPolicy);\nconst requestRedirect = ['follow', 'manual', 'error'];\nconst safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE'];\nconst safeMethodsSet = new Set(safeMethods);\nconst requestMode = ['navigate', 'same-origin', 'no-cors', 'cors'];\nconst requestCredentials = ['omit', 'same-origin', 'include'];\nconst requestCache = ['default', 'no-store', 'reload', 'no-cache', 'force-cache', 'only-if-cached'];\n\n// https://fetch.spec.whatwg.org/#request-body-header-name\nconst requestBodyHeader = ['content-encoding', 'content-language', 'content-location', 'content-type',\n// See https://github.com/nodejs/undici/issues/2021\n// 'Content-Length' is a forbidden header name, which is typically\n// removed in the Headers implementation. However, undici doesn't\n// filter out headers, so we add it here.\n'content-length'];\n\n// https://fetch.spec.whatwg.org/#enumdef-requestduplex\nconst requestDuplex = ['half'];\n\n// http://fetch.spec.whatwg.org/#forbidden-method\nconst forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK'];\nconst forbiddenMethodsSet = new Set(forbiddenMethods);\nconst subresource = ['audio', 'audioworklet', 'font', 'image', 'manifest', 'paintworklet', 'script', 'style', 'track', 'video', 'xslt', ''];\nconst subresourceSet = new Set(subresource);\n\n/** @type {globalThis['DOMException']} */\nconst DOMException = globalThis.DOMException ?? (() => {\n  // DOMException was only made a global in Node v17.0.0,\n  // but fetch supports >= v16.8.\n  try {\n    atob('~');\n  } catch (err) {\n    return Object.getPrototypeOf(err).constructor;\n  }\n})();\nlet channel;\n\n/** @type {globalThis['structuredClone']} */\nconst structuredClone = globalThis.structuredClone ??\n// https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n// structuredClone was added in v17.0.0, but fetch supports v16.8\nfunction structuredClone(value, options = undefined) {\n  if (arguments.length === 0) {\n    throw new TypeError('missing argument');\n  }\n  if (!channel) {\n    channel = new MessageChannel();\n  }\n  channel.port1.unref();\n  channel.port2.unref();\n  channel.port1.postMessage(value, options?.transfer);\n  return receiveMessageOnPort(channel.port2).message;\n};\nmodule.exports = {\n  DOMException,\n  structuredClone,\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n};","map":{"version":3,"names":["MessageChannel","receiveMessageOnPort","require","corsSafeListedMethods","corsSafeListedMethodsSet","Set","nullBodyStatus","redirectStatus","redirectStatusSet","badPorts","badPortsSet","referrerPolicy","referrerPolicySet","requestRedirect","safeMethods","safeMethodsSet","requestMode","requestCredentials","requestCache","requestBodyHeader","requestDuplex","forbiddenMethods","forbiddenMethodsSet","subresource","subresourceSet","DOMException","globalThis","atob","err","Object","getPrototypeOf","constructor","channel","structuredClone","value","options","undefined","arguments","length","TypeError","port1","unref","port2","postMessage","transfer","message","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/undici/lib/fetch/constants.js"],"sourcesContent":["'use strict'\n\nconst { MessageChannel, receiveMessageOnPort } = require('worker_threads')\n\nconst corsSafeListedMethods = ['GET', 'HEAD', 'POST']\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods)\n\nconst nullBodyStatus = [101, 204, 205, 304]\n\nconst redirectStatus = [301, 302, 303, 307, 308]\nconst redirectStatusSet = new Set(redirectStatus)\n\n// https://fetch.spec.whatwg.org/#block-bad-port\nconst badPorts = [\n  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',\n  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',\n  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',\n  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',\n  '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697',\n  '10080'\n]\n\nconst badPortsSet = new Set(badPorts)\n\n// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\nconst referrerPolicy = [\n  '',\n  'no-referrer',\n  'no-referrer-when-downgrade',\n  'same-origin',\n  'origin',\n  'strict-origin',\n  'origin-when-cross-origin',\n  'strict-origin-when-cross-origin',\n  'unsafe-url'\n]\nconst referrerPolicySet = new Set(referrerPolicy)\n\nconst requestRedirect = ['follow', 'manual', 'error']\n\nconst safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']\nconst safeMethodsSet = new Set(safeMethods)\n\nconst requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']\n\nconst requestCredentials = ['omit', 'same-origin', 'include']\n\nconst requestCache = [\n  'default',\n  'no-store',\n  'reload',\n  'no-cache',\n  'force-cache',\n  'only-if-cached'\n]\n\n// https://fetch.spec.whatwg.org/#request-body-header-name\nconst requestBodyHeader = [\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  // See https://github.com/nodejs/undici/issues/2021\n  // 'Content-Length' is a forbidden header name, which is typically\n  // removed in the Headers implementation. However, undici doesn't\n  // filter out headers, so we add it here.\n  'content-length'\n]\n\n// https://fetch.spec.whatwg.org/#enumdef-requestduplex\nconst requestDuplex = [\n  'half'\n]\n\n// http://fetch.spec.whatwg.org/#forbidden-method\nconst forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']\nconst forbiddenMethodsSet = new Set(forbiddenMethods)\n\nconst subresource = [\n  'audio',\n  'audioworklet',\n  'font',\n  'image',\n  'manifest',\n  'paintworklet',\n  'script',\n  'style',\n  'track',\n  'video',\n  'xslt',\n  ''\n]\nconst subresourceSet = new Set(subresource)\n\n/** @type {globalThis['DOMException']} */\nconst DOMException = globalThis.DOMException ?? (() => {\n  // DOMException was only made a global in Node v17.0.0,\n  // but fetch supports >= v16.8.\n  try {\n    atob('~')\n  } catch (err) {\n    return Object.getPrototypeOf(err).constructor\n  }\n})()\n\nlet channel\n\n/** @type {globalThis['structuredClone']} */\nconst structuredClone =\n  globalThis.structuredClone ??\n  // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n  // structuredClone was added in v17.0.0, but fetch supports v16.8\n  function structuredClone (value, options = undefined) {\n    if (arguments.length === 0) {\n      throw new TypeError('missing argument')\n    }\n\n    if (!channel) {\n      channel = new MessageChannel()\n    }\n    channel.port1.unref()\n    channel.port2.unref()\n    channel.port1.postMessage(value, options?.transfer)\n    return receiveMessageOnPort(channel.port2).message\n  }\n\nmodule.exports = {\n  DOMException,\n  structuredClone,\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}