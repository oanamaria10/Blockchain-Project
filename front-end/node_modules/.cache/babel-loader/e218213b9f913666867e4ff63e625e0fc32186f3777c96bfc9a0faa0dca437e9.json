{"ast":null,"code":"/**\n * Index Capabilities.\n *\n * W3 Indexing protocol allows authorized agents to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n *\n * These can be imported directly with:\n * ```js\n * import * as Index from '@web3-storage/capabilities/index'\n * ```\n *\n * @module\n */\nimport { CAR } from '@ucanto/core';\nimport { capability, Schema, ok } from '@ucanto/validator';\nimport { equalWith, SpaceDID, and, equal } from '../utils.js';\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derive any `space/index/` prefixed capability for the space identified by the DID\n * in the `with` field.\n */\nexport const index = capability({\n  can: 'space/index/*',\n  /** DID of the space where indexed data is stored. */\n  with: SpaceDID,\n  derives: equalWith\n});\n\n/**\n * `space/index/add` capability allows an agent to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n */\nexport const add = capability({\n  can: 'space/index/add',\n  /** DID of the space where indexed data is stored. */\n  with: SpaceDID,\n  nb: Schema.struct({\n    /** Content Archive (CAR) containing the `Index`. */\n    index: Schema.link({\n      code: CAR.code,\n      version: 1\n    })\n  }),\n  derives: (claimed, delegated) => and(equalWith(claimed, delegated)) || and(equal(claimed.nb.index, delegated.nb.index, 'index')) || ok({})\n});\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\nexport { Schema };","map":{"version":3,"names":["CAR","capability","Schema","ok","equalWith","SpaceDID","and","equal","index","can","with","derives","add","nb","struct","link","code","version","claimed","delegated"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/capabilities/src/index/index.js"],"sourcesContent":["/**\n * Index Capabilities.\n *\n * W3 Indexing protocol allows authorized agents to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n *\n * These can be imported directly with:\n * ```js\n * import * as Index from '@web3-storage/capabilities/index'\n * ```\n *\n * @module\n */\nimport { CAR } from '@ucanto/core'\nimport { capability, Schema, ok } from '@ucanto/validator'\nimport { equalWith, SpaceDID, and, equal } from '../utils.js'\n\n/**\n * Capability can only be delegated (but not invoked) allowing audience to\n * derive any `space/index/` prefixed capability for the space identified by the DID\n * in the `with` field.\n */\nexport const index = capability({\n  can: 'space/index/*',\n  /** DID of the space where indexed data is stored. */\n  with: SpaceDID,\n  derives: equalWith,\n})\n\n/**\n * `space/index/add` capability allows an agent to submit verifiable claims\n * about content-addressed data to be published on the InterPlanetary Network\n * Indexer (IPNI), making it publicly queryable.\n */\nexport const add = capability({\n  can: 'space/index/add',\n  /** DID of the space where indexed data is stored. */\n  with: SpaceDID,\n  nb: Schema.struct({\n    /** Content Archive (CAR) containing the `Index`. */\n    index: Schema.link({ code: CAR.code, version: 1 }),\n  }),\n  derives: (claimed, delegated) =>\n    and(equalWith(claimed, delegated)) ||\n    and(equal(claimed.nb.index, delegated.nb.index, 'index')) ||\n    ok({}),\n})\n\n// ⚠️ We export imports here so they are not omitted in generated typedefs\n// @see https://github.com/microsoft/TypeScript/issues/51548\nexport { Schema }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,cAAc;AAClC,SAASC,UAAU,EAAEC,MAAM,EAAEC,EAAE,QAAQ,mBAAmB;AAC1D,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,QAAQ,aAAa;;AAE7D;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAGP,UAAU,CAAC;EAC9BQ,GAAG,EAAE,eAAe;EACpB;EACAC,IAAI,EAAEL,QAAQ;EACdM,OAAO,EAAEP;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,GAAG,GAAGX,UAAU,CAAC;EAC5BQ,GAAG,EAAE,iBAAiB;EACtB;EACAC,IAAI,EAAEL,QAAQ;EACdQ,EAAE,EAAEX,MAAM,CAACY,MAAM,CAAC;IAChB;IACAN,KAAK,EAAEN,MAAM,CAACa,IAAI,CAAC;MAAEC,IAAI,EAAEhB,GAAG,CAACgB,IAAI;MAAEC,OAAO,EAAE;IAAE,CAAC;EACnD,CAAC,CAAC;EACFN,OAAO,EAAEA,CAACO,OAAO,EAAEC,SAAS,KAC1Bb,GAAG,CAACF,SAAS,CAACc,OAAO,EAAEC,SAAS,CAAC,CAAC,IAClCb,GAAG,CAACC,KAAK,CAACW,OAAO,CAACL,EAAE,CAACL,KAAK,EAAEW,SAAS,CAACN,EAAE,CAACL,KAAK,EAAE,OAAO,CAAC,CAAC,IACzDL,EAAE,CAAC,CAAC,CAAC;AACT,CAAC,CAAC;;AAEF;AACA;AACA,SAASD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}