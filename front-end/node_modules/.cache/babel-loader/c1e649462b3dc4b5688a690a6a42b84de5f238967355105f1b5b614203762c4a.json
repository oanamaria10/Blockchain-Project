{"ast":null,"code":"'use strict';\n\nconst {\n  format\n} = require('util');\n\n/**\n * Contains error codes, factory functions to create throwable error objects,\n * and warning/deprecation functions.\n * @module\n */\n\n/**\n * process.emitWarning or a polyfill\n * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options\n * @ignore\n */\nconst emitWarning = (msg, type) => {\n  if (process.emitWarning) {\n    process.emitWarning(msg, type);\n  } else {\n    /* istanbul ignore next */\n    process.nextTick(function () {\n      console.warn(type + ': ' + msg);\n    });\n  }\n};\n\n/**\n * Show a deprecation warning. Each distinct message is only displayed once.\n * Ignores empty messages.\n *\n * @param {string} [msg] - Warning to print\n * @private\n */\nconst deprecate = msg => {\n  msg = String(msg);\n  if (msg && !deprecate.cache[msg]) {\n    deprecate.cache[msg] = true;\n    emitWarning(msg, 'DeprecationWarning');\n  }\n};\ndeprecate.cache = {};\n\n/**\n * Show a generic warning.\n * Ignores empty messages.\n *\n * @param {string} [msg] - Warning to print\n * @private\n */\nconst warn = msg => {\n  if (msg) {\n    emitWarning(msg);\n  }\n};\n\n/**\n * When Mocha throws exceptions (or rejects `Promise`s), it attempts to assign a `code` property to the `Error` object, for easier handling. These are the potential values of `code`.\n * @public\n * @namespace\n * @memberof module:lib/errors\n */\nvar constants = {\n  /**\n   * An unrecoverable error.\n   * @constant\n   * @default\n   */\n  FATAL: 'ERR_MOCHA_FATAL',\n  /**\n   * The type of an argument to a function call is invalid\n   * @constant\n   * @default\n   */\n  INVALID_ARG_TYPE: 'ERR_MOCHA_INVALID_ARG_TYPE',\n  /**\n   * The value of an argument to a function call is invalid\n   * @constant\n   * @default\n   */\n  INVALID_ARG_VALUE: 'ERR_MOCHA_INVALID_ARG_VALUE',\n  /**\n   * Something was thrown, but it wasn't an `Error`\n   * @constant\n   * @default\n   */\n  INVALID_EXCEPTION: 'ERR_MOCHA_INVALID_EXCEPTION',\n  /**\n   * An interface (e.g., `Mocha.interfaces`) is unknown or invalid\n   * @constant\n   * @default\n   */\n  INVALID_INTERFACE: 'ERR_MOCHA_INVALID_INTERFACE',\n  /**\n   * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid\n   * @constant\n   * @default\n   */\n  INVALID_REPORTER: 'ERR_MOCHA_INVALID_REPORTER',\n  /**\n   * `done()` was called twice in a `Test` or `Hook` callback\n   * @constant\n   * @default\n   */\n  MULTIPLE_DONE: 'ERR_MOCHA_MULTIPLE_DONE',\n  /**\n   * No files matched the pattern provided by the user\n   * @constant\n   * @default\n   */\n  NO_FILES_MATCH_PATTERN: 'ERR_MOCHA_NO_FILES_MATCH_PATTERN',\n  /**\n   * Known, but unsupported behavior of some kind\n   * @constant\n   * @default\n   */\n  UNSUPPORTED: 'ERR_MOCHA_UNSUPPORTED',\n  /**\n   * Invalid state transition occurring in `Mocha` instance\n   * @constant\n   * @default\n   */\n  INSTANCE_ALREADY_RUNNING: 'ERR_MOCHA_INSTANCE_ALREADY_RUNNING',\n  /**\n   * Invalid state transition occurring in `Mocha` instance\n   * @constant\n   * @default\n   */\n  INSTANCE_ALREADY_DISPOSED: 'ERR_MOCHA_INSTANCE_ALREADY_DISPOSED',\n  /**\n   * Use of `only()` w/ `--forbid-only` results in this error.\n   * @constant\n   * @default\n   */\n  FORBIDDEN_EXCLUSIVITY: 'ERR_MOCHA_FORBIDDEN_EXCLUSIVITY',\n  /**\n   * To be thrown when a user-defined plugin implementation (e.g., `mochaHooks`) is invalid\n   * @constant\n   * @default\n   */\n  INVALID_PLUGIN_IMPLEMENTATION: 'ERR_MOCHA_INVALID_PLUGIN_IMPLEMENTATION',\n  /**\n   * To be thrown when a builtin or third-party plugin definition (the _definition_ of `mochaHooks`) is invalid\n   * @constant\n   * @default\n   */\n  INVALID_PLUGIN_DEFINITION: 'ERR_MOCHA_INVALID_PLUGIN_DEFINITION',\n  /**\n   * When a runnable exceeds its allowed run time.\n   * @constant\n   * @default\n   */\n  TIMEOUT: 'ERR_MOCHA_TIMEOUT',\n  /**\n   * Input file is not able to be parsed\n   * @constant\n   * @default\n   */\n  UNPARSABLE_FILE: 'ERR_MOCHA_UNPARSABLE_FILE'\n};\n\n/**\n * A set containing all string values of all Mocha error constants, for use by {@link isMochaError}.\n * @private\n */\nconst MOCHA_ERRORS = new Set(Object.values(constants));\n\n/**\n * Creates an error object to be thrown when no files to be tested could be found using specified pattern.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} pattern - User-specified argument value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createNoFilesMatchPatternError(message, pattern) {\n  var err = new Error(message);\n  err.code = constants.NO_FILES_MATCH_PATTERN;\n  err.pattern = pattern;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when the reporter specified in the options was not found.\n *\n * @public\n * @param {string} message - Error message to be displayed.\n * @param {string} reporter - User-specified reporter value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidReporterError(message, reporter) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_REPORTER;\n  err.reporter = reporter;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when the interface specified in the options was not found.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} ui - User-specified interface value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidInterfaceError(message, ui) {\n  var err = new Error(message);\n  err.code = constants.INVALID_INTERFACE;\n  err.interface = ui;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createUnsupportedError(message) {\n  var err = new Error(message);\n  err.code = constants.UNSUPPORTED;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an argument is missing.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} expected - Expected argument datatype.\n * @returns {Error} instance detailing the error condition\n */\nfunction createMissingArgumentError(message, argument, expected) {\n  return createInvalidArgumentTypeError(message, argument, expected);\n}\n\n/**\n * Creates an error object to be thrown when an argument did not use the supported type\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} expected - Expected argument datatype.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidArgumentTypeError(message, argument, expected) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_ARG_TYPE;\n  err.argument = argument;\n  err.expected = expected;\n  err.actual = typeof argument;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an argument did not use the supported value\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} value - Argument value.\n * @param {string} [reason] - Why value is invalid.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidArgumentValueError(message, argument, value, reason) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_ARG_VALUE;\n  err.argument = argument;\n  err.value = value;\n  err.reason = typeof reason !== 'undefined' ? reason : 'is invalid';\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidExceptionError(message, value) {\n  var err = new Error(message);\n  err.code = constants.INVALID_EXCEPTION;\n  err.valueType = typeof value;\n  err.value = value;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an unrecoverable error occurs.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createFatalError(message, value) {\n  var err = new Error(message);\n  err.code = constants.FATAL;\n  err.valueType = typeof value;\n  err.value = value;\n  return err;\n}\n\n/**\n * Dynamically creates a plugin-type-specific error based on plugin type\n * @param {string} message - Error message\n * @param {\"reporter\"|\"ui\"} pluginType - Plugin type. Future: expand as needed\n * @param {string} [pluginId] - Name/path of plugin, if any\n * @throws When `pluginType` is not known\n * @public\n * @static\n * @returns {Error}\n */\nfunction createInvalidLegacyPluginError(message, pluginType, pluginId) {\n  switch (pluginType) {\n    case 'reporter':\n      return createInvalidReporterError(message, pluginId);\n    case 'ui':\n      return createInvalidInterfaceError(message, pluginId);\n    default:\n      throw new Error('unknown pluginType \"' + pluginType + '\"');\n  }\n}\n\n/**\n * **DEPRECATED**.  Use {@link createInvalidLegacyPluginError} instead  Dynamically creates a plugin-type-specific error based on plugin type\n * @deprecated\n * @param {string} message - Error message\n * @param {\"reporter\"|\"interface\"} pluginType - Plugin type. Future: expand as needed\n * @param {string} [pluginId] - Name/path of plugin, if any\n * @throws When `pluginType` is not known\n * @public\n * @static\n * @returns {Error}\n */\nfunction createInvalidPluginError(...args) {\n  deprecate('Use createInvalidLegacyPluginError() instead');\n  return createInvalidLegacyPluginError(...args);\n}\n\n/**\n * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.\n * @param {string} message The error message to be displayed.\n * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`\n * @param {Mocha} instance the mocha instance that throw this error\n * @static\n */\nfunction createMochaInstanceAlreadyDisposedError(message, cleanReferencesAfterRun, instance) {\n  var err = new Error(message);\n  err.code = constants.INSTANCE_ALREADY_DISPOSED;\n  err.cleanReferencesAfterRun = cleanReferencesAfterRun;\n  err.instance = instance;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.\n * @param {string} message The error message to be displayed.\n * @static\n * @public\n */\nfunction createMochaInstanceAlreadyRunningError(message, instance) {\n  var err = new Error(message);\n  err.code = constants.INSTANCE_ALREADY_RUNNING;\n  err.instance = instance;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when done() is called multiple times in a test\n *\n * @public\n * @param {Runnable} runnable - Original runnable\n * @param {Error} [originalErr] - Original error, if any\n * @returns {Error} instance detailing the error condition\n * @static\n */\nfunction createMultipleDoneError(runnable, originalErr) {\n  var title;\n  try {\n    title = format('<%s>', runnable.fullTitle());\n    if (runnable.parent.root) {\n      title += ' (of root suite)';\n    }\n  } catch (ignored) {\n    title = format('<%s> (of unknown suite)', runnable.title);\n  }\n  var message = format('done() called multiple times in %s %s', runnable.type ? runnable.type : 'unknown runnable', title);\n  if (runnable.file) {\n    message += format(' of file %s', runnable.file);\n  }\n  if (originalErr) {\n    message += format('; in addition, done() received error: %s', originalErr);\n  }\n  var err = new Error(message);\n  err.code = constants.MULTIPLE_DONE;\n  err.valueType = typeof originalErr;\n  err.value = originalErr;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when `.only()` is used with\n * `--forbid-only`.\n * @static\n * @public\n * @param {Mocha} mocha - Mocha instance\n * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}\n */\nfunction createForbiddenExclusivityError(mocha) {\n  var err = new Error(mocha.isWorker ? '`.only` is not supported in parallel mode' : '`.only` forbidden by --forbid-only');\n  err.code = constants.FORBIDDEN_EXCLUSIVITY;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a plugin definition is invalid\n * @static\n * @param {string} msg - Error message\n * @param {PluginDefinition} [pluginDef] - Problematic plugin definition\n * @public\n * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n */\nfunction createInvalidPluginDefinitionError(msg, pluginDef) {\n  const err = new Error(msg);\n  err.code = constants.INVALID_PLUGIN_DEFINITION;\n  err.pluginDef = pluginDef;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a plugin implementation (user code) is invalid\n * @static\n * @param {string} msg - Error message\n * @param {Object} [opts] - Plugin definition and user-supplied implementation\n * @param {PluginDefinition} [opts.pluginDef] - Plugin Definition\n * @param {*} [opts.pluginImpl] - Plugin Implementation (user-supplied)\n * @public\n * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n */\nfunction createInvalidPluginImplementationError(msg, {\n  pluginDef,\n  pluginImpl\n} = {}) {\n  const err = new Error(msg);\n  err.code = constants.INVALID_PLUGIN_IMPLEMENTATION;\n  err.pluginDef = pluginDef;\n  err.pluginImpl = pluginImpl;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a runnable exceeds its allowed run time.\n * @static\n * @param {string} msg - Error message\n * @param {number} [timeout] - Timeout in ms\n * @param {string} [file] - File, if given\n * @returns {MochaTimeoutError}\n */\nfunction createTimeoutError(msg, timeout, file) {\n  const err = new Error(msg);\n  err.code = constants.TIMEOUT;\n  err.timeout = timeout;\n  err.file = file;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when file is unparsable\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} filename - File name\n * @returns {Error} Error with code {@link constants.UNPARSABLE_FILE}\n */\nfunction createUnparsableFileError(message, filename) {\n  var err = new Error(message);\n  err.code = constants.UNPARSABLE_FILE;\n  return err;\n}\n\n/**\n * Returns `true` if an error came out of Mocha.\n * _Can suffer from false negatives, but not false positives._\n * @static\n * @public\n * @param {*} err - Error, or anything\n * @returns {boolean}\n */\nconst isMochaError = err => Boolean(err && typeof err === 'object' && MOCHA_ERRORS.has(err.code));\nmodule.exports = {\n  constants,\n  createFatalError,\n  createForbiddenExclusivityError,\n  createInvalidArgumentTypeError,\n  createInvalidArgumentValueError,\n  createInvalidExceptionError,\n  createInvalidInterfaceError,\n  createInvalidLegacyPluginError,\n  createInvalidPluginDefinitionError,\n  createInvalidPluginError,\n  createInvalidPluginImplementationError,\n  createInvalidReporterError,\n  createMissingArgumentError,\n  createMochaInstanceAlreadyDisposedError,\n  createMochaInstanceAlreadyRunningError,\n  createMultipleDoneError,\n  createNoFilesMatchPatternError,\n  createTimeoutError,\n  createUnparsableFileError,\n  createUnsupportedError,\n  deprecate,\n  isMochaError,\n  warn\n};\n\n/**\n * The error thrown when a Runnable times out\n * @memberof module:lib/errors\n * @typedef {Error} MochaTimeoutError\n * @property {constants.TIMEOUT} code - Error code\n * @property {number?} timeout Timeout in ms\n * @property {string?} file Filepath, if given\n */","map":{"version":3,"names":["format","require","emitWarning","msg","type","process","nextTick","console","warn","deprecate","String","cache","constants","FATAL","INVALID_ARG_TYPE","INVALID_ARG_VALUE","INVALID_EXCEPTION","INVALID_INTERFACE","INVALID_REPORTER","MULTIPLE_DONE","NO_FILES_MATCH_PATTERN","UNSUPPORTED","INSTANCE_ALREADY_RUNNING","INSTANCE_ALREADY_DISPOSED","FORBIDDEN_EXCLUSIVITY","INVALID_PLUGIN_IMPLEMENTATION","INVALID_PLUGIN_DEFINITION","TIMEOUT","UNPARSABLE_FILE","MOCHA_ERRORS","Set","Object","values","createNoFilesMatchPatternError","message","pattern","err","Error","code","createInvalidReporterError","reporter","TypeError","createInvalidInterfaceError","ui","interface","createUnsupportedError","createMissingArgumentError","argument","expected","createInvalidArgumentTypeError","actual","createInvalidArgumentValueError","value","reason","createInvalidExceptionError","valueType","createFatalError","createInvalidLegacyPluginError","pluginType","pluginId","createInvalidPluginError","args","createMochaInstanceAlreadyDisposedError","cleanReferencesAfterRun","instance","createMochaInstanceAlreadyRunningError","createMultipleDoneError","runnable","originalErr","title","fullTitle","parent","root","ignored","file","createForbiddenExclusivityError","mocha","isWorker","createInvalidPluginDefinitionError","pluginDef","createInvalidPluginImplementationError","pluginImpl","createTimeoutError","timeout","createUnparsableFileError","filename","isMochaError","Boolean","has","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/errors.js"],"sourcesContent":["'use strict';\n\nconst {format} = require('util');\n\n/**\n * Contains error codes, factory functions to create throwable error objects,\n * and warning/deprecation functions.\n * @module\n */\n\n/**\n * process.emitWarning or a polyfill\n * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options\n * @ignore\n */\nconst emitWarning = (msg, type) => {\n  if (process.emitWarning) {\n    process.emitWarning(msg, type);\n  } else {\n    /* istanbul ignore next */\n    process.nextTick(function () {\n      console.warn(type + ': ' + msg);\n    });\n  }\n};\n\n/**\n * Show a deprecation warning. Each distinct message is only displayed once.\n * Ignores empty messages.\n *\n * @param {string} [msg] - Warning to print\n * @private\n */\nconst deprecate = msg => {\n  msg = String(msg);\n  if (msg && !deprecate.cache[msg]) {\n    deprecate.cache[msg] = true;\n    emitWarning(msg, 'DeprecationWarning');\n  }\n};\ndeprecate.cache = {};\n\n/**\n * Show a generic warning.\n * Ignores empty messages.\n *\n * @param {string} [msg] - Warning to print\n * @private\n */\nconst warn = msg => {\n  if (msg) {\n    emitWarning(msg);\n  }\n};\n\n/**\n * When Mocha throws exceptions (or rejects `Promise`s), it attempts to assign a `code` property to the `Error` object, for easier handling. These are the potential values of `code`.\n * @public\n * @namespace\n * @memberof module:lib/errors\n */\nvar constants = {\n  /**\n   * An unrecoverable error.\n   * @constant\n   * @default\n   */\n  FATAL: 'ERR_MOCHA_FATAL',\n\n  /**\n   * The type of an argument to a function call is invalid\n   * @constant\n   * @default\n   */\n  INVALID_ARG_TYPE: 'ERR_MOCHA_INVALID_ARG_TYPE',\n\n  /**\n   * The value of an argument to a function call is invalid\n   * @constant\n   * @default\n   */\n  INVALID_ARG_VALUE: 'ERR_MOCHA_INVALID_ARG_VALUE',\n\n  /**\n   * Something was thrown, but it wasn't an `Error`\n   * @constant\n   * @default\n   */\n  INVALID_EXCEPTION: 'ERR_MOCHA_INVALID_EXCEPTION',\n\n  /**\n   * An interface (e.g., `Mocha.interfaces`) is unknown or invalid\n   * @constant\n   * @default\n   */\n  INVALID_INTERFACE: 'ERR_MOCHA_INVALID_INTERFACE',\n\n  /**\n   * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid\n   * @constant\n   * @default\n   */\n  INVALID_REPORTER: 'ERR_MOCHA_INVALID_REPORTER',\n\n  /**\n   * `done()` was called twice in a `Test` or `Hook` callback\n   * @constant\n   * @default\n   */\n  MULTIPLE_DONE: 'ERR_MOCHA_MULTIPLE_DONE',\n\n  /**\n   * No files matched the pattern provided by the user\n   * @constant\n   * @default\n   */\n  NO_FILES_MATCH_PATTERN: 'ERR_MOCHA_NO_FILES_MATCH_PATTERN',\n\n  /**\n   * Known, but unsupported behavior of some kind\n   * @constant\n   * @default\n   */\n  UNSUPPORTED: 'ERR_MOCHA_UNSUPPORTED',\n\n  /**\n   * Invalid state transition occurring in `Mocha` instance\n   * @constant\n   * @default\n   */\n  INSTANCE_ALREADY_RUNNING: 'ERR_MOCHA_INSTANCE_ALREADY_RUNNING',\n\n  /**\n   * Invalid state transition occurring in `Mocha` instance\n   * @constant\n   * @default\n   */\n  INSTANCE_ALREADY_DISPOSED: 'ERR_MOCHA_INSTANCE_ALREADY_DISPOSED',\n\n  /**\n   * Use of `only()` w/ `--forbid-only` results in this error.\n   * @constant\n   * @default\n   */\n  FORBIDDEN_EXCLUSIVITY: 'ERR_MOCHA_FORBIDDEN_EXCLUSIVITY',\n\n  /**\n   * To be thrown when a user-defined plugin implementation (e.g., `mochaHooks`) is invalid\n   * @constant\n   * @default\n   */\n  INVALID_PLUGIN_IMPLEMENTATION: 'ERR_MOCHA_INVALID_PLUGIN_IMPLEMENTATION',\n\n  /**\n   * To be thrown when a builtin or third-party plugin definition (the _definition_ of `mochaHooks`) is invalid\n   * @constant\n   * @default\n   */\n  INVALID_PLUGIN_DEFINITION: 'ERR_MOCHA_INVALID_PLUGIN_DEFINITION',\n\n  /**\n   * When a runnable exceeds its allowed run time.\n   * @constant\n   * @default\n   */\n  TIMEOUT: 'ERR_MOCHA_TIMEOUT',\n\n  /**\n   * Input file is not able to be parsed\n   * @constant\n   * @default\n   */\n  UNPARSABLE_FILE: 'ERR_MOCHA_UNPARSABLE_FILE'\n};\n\n/**\n * A set containing all string values of all Mocha error constants, for use by {@link isMochaError}.\n * @private\n */\nconst MOCHA_ERRORS = new Set(Object.values(constants));\n\n/**\n * Creates an error object to be thrown when no files to be tested could be found using specified pattern.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} pattern - User-specified argument value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createNoFilesMatchPatternError(message, pattern) {\n  var err = new Error(message);\n  err.code = constants.NO_FILES_MATCH_PATTERN;\n  err.pattern = pattern;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when the reporter specified in the options was not found.\n *\n * @public\n * @param {string} message - Error message to be displayed.\n * @param {string} reporter - User-specified reporter value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidReporterError(message, reporter) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_REPORTER;\n  err.reporter = reporter;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when the interface specified in the options was not found.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} ui - User-specified interface value.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidInterfaceError(message, ui) {\n  var err = new Error(message);\n  err.code = constants.INVALID_INTERFACE;\n  err.interface = ui;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createUnsupportedError(message) {\n  var err = new Error(message);\n  err.code = constants.UNSUPPORTED;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an argument is missing.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} expected - Expected argument datatype.\n * @returns {Error} instance detailing the error condition\n */\nfunction createMissingArgumentError(message, argument, expected) {\n  return createInvalidArgumentTypeError(message, argument, expected);\n}\n\n/**\n * Creates an error object to be thrown when an argument did not use the supported type\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} expected - Expected argument datatype.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidArgumentTypeError(message, argument, expected) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_ARG_TYPE;\n  err.argument = argument;\n  err.expected = expected;\n  err.actual = typeof argument;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an argument did not use the supported value\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} argument - Argument name.\n * @param {string} value - Argument value.\n * @param {string} [reason] - Why value is invalid.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidArgumentValueError(message, argument, value, reason) {\n  var err = new TypeError(message);\n  err.code = constants.INVALID_ARG_VALUE;\n  err.argument = argument;\n  err.value = value;\n  err.reason = typeof reason !== 'undefined' ? reason : 'is invalid';\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createInvalidExceptionError(message, value) {\n  var err = new Error(message);\n  err.code = constants.INVALID_EXCEPTION;\n  err.valueType = typeof value;\n  err.value = value;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when an unrecoverable error occurs.\n *\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @returns {Error} instance detailing the error condition\n */\nfunction createFatalError(message, value) {\n  var err = new Error(message);\n  err.code = constants.FATAL;\n  err.valueType = typeof value;\n  err.value = value;\n  return err;\n}\n\n/**\n * Dynamically creates a plugin-type-specific error based on plugin type\n * @param {string} message - Error message\n * @param {\"reporter\"|\"ui\"} pluginType - Plugin type. Future: expand as needed\n * @param {string} [pluginId] - Name/path of plugin, if any\n * @throws When `pluginType` is not known\n * @public\n * @static\n * @returns {Error}\n */\nfunction createInvalidLegacyPluginError(message, pluginType, pluginId) {\n  switch (pluginType) {\n    case 'reporter':\n      return createInvalidReporterError(message, pluginId);\n    case 'ui':\n      return createInvalidInterfaceError(message, pluginId);\n    default:\n      throw new Error('unknown pluginType \"' + pluginType + '\"');\n  }\n}\n\n/**\n * **DEPRECATED**.  Use {@link createInvalidLegacyPluginError} instead  Dynamically creates a plugin-type-specific error based on plugin type\n * @deprecated\n * @param {string} message - Error message\n * @param {\"reporter\"|\"interface\"} pluginType - Plugin type. Future: expand as needed\n * @param {string} [pluginId] - Name/path of plugin, if any\n * @throws When `pluginType` is not known\n * @public\n * @static\n * @returns {Error}\n */\nfunction createInvalidPluginError(...args) {\n  deprecate('Use createInvalidLegacyPluginError() instead');\n  return createInvalidLegacyPluginError(...args);\n}\n\n/**\n * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.\n * @param {string} message The error message to be displayed.\n * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`\n * @param {Mocha} instance the mocha instance that throw this error\n * @static\n */\nfunction createMochaInstanceAlreadyDisposedError(\n  message,\n  cleanReferencesAfterRun,\n  instance\n) {\n  var err = new Error(message);\n  err.code = constants.INSTANCE_ALREADY_DISPOSED;\n  err.cleanReferencesAfterRun = cleanReferencesAfterRun;\n  err.instance = instance;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.\n * @param {string} message The error message to be displayed.\n * @static\n * @public\n */\nfunction createMochaInstanceAlreadyRunningError(message, instance) {\n  var err = new Error(message);\n  err.code = constants.INSTANCE_ALREADY_RUNNING;\n  err.instance = instance;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when done() is called multiple times in a test\n *\n * @public\n * @param {Runnable} runnable - Original runnable\n * @param {Error} [originalErr] - Original error, if any\n * @returns {Error} instance detailing the error condition\n * @static\n */\nfunction createMultipleDoneError(runnable, originalErr) {\n  var title;\n  try {\n    title = format('<%s>', runnable.fullTitle());\n    if (runnable.parent.root) {\n      title += ' (of root suite)';\n    }\n  } catch (ignored) {\n    title = format('<%s> (of unknown suite)', runnable.title);\n  }\n  var message = format(\n    'done() called multiple times in %s %s',\n    runnable.type ? runnable.type : 'unknown runnable',\n    title\n  );\n  if (runnable.file) {\n    message += format(' of file %s', runnable.file);\n  }\n  if (originalErr) {\n    message += format('; in addition, done() received error: %s', originalErr);\n  }\n\n  var err = new Error(message);\n  err.code = constants.MULTIPLE_DONE;\n  err.valueType = typeof originalErr;\n  err.value = originalErr;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when `.only()` is used with\n * `--forbid-only`.\n * @static\n * @public\n * @param {Mocha} mocha - Mocha instance\n * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}\n */\nfunction createForbiddenExclusivityError(mocha) {\n  var err = new Error(\n    mocha.isWorker\n      ? '`.only` is not supported in parallel mode'\n      : '`.only` forbidden by --forbid-only'\n  );\n  err.code = constants.FORBIDDEN_EXCLUSIVITY;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a plugin definition is invalid\n * @static\n * @param {string} msg - Error message\n * @param {PluginDefinition} [pluginDef] - Problematic plugin definition\n * @public\n * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n */\nfunction createInvalidPluginDefinitionError(msg, pluginDef) {\n  const err = new Error(msg);\n  err.code = constants.INVALID_PLUGIN_DEFINITION;\n  err.pluginDef = pluginDef;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a plugin implementation (user code) is invalid\n * @static\n * @param {string} msg - Error message\n * @param {Object} [opts] - Plugin definition and user-supplied implementation\n * @param {PluginDefinition} [opts.pluginDef] - Plugin Definition\n * @param {*} [opts.pluginImpl] - Plugin Implementation (user-supplied)\n * @public\n * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n */\nfunction createInvalidPluginImplementationError(\n  msg,\n  {pluginDef, pluginImpl} = {}\n) {\n  const err = new Error(msg);\n  err.code = constants.INVALID_PLUGIN_IMPLEMENTATION;\n  err.pluginDef = pluginDef;\n  err.pluginImpl = pluginImpl;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when a runnable exceeds its allowed run time.\n * @static\n * @param {string} msg - Error message\n * @param {number} [timeout] - Timeout in ms\n * @param {string} [file] - File, if given\n * @returns {MochaTimeoutError}\n */\nfunction createTimeoutError(msg, timeout, file) {\n  const err = new Error(msg);\n  err.code = constants.TIMEOUT;\n  err.timeout = timeout;\n  err.file = file;\n  return err;\n}\n\n/**\n * Creates an error object to be thrown when file is unparsable\n * @public\n * @static\n * @param {string} message - Error message to be displayed.\n * @param {string} filename - File name\n * @returns {Error} Error with code {@link constants.UNPARSABLE_FILE}\n */\nfunction createUnparsableFileError(message, filename) {\n  var err = new Error(message);\n  err.code = constants.UNPARSABLE_FILE;\n  return err;\n}\n\n/**\n * Returns `true` if an error came out of Mocha.\n * _Can suffer from false negatives, but not false positives._\n * @static\n * @public\n * @param {*} err - Error, or anything\n * @returns {boolean}\n */\nconst isMochaError = err =>\n  Boolean(err && typeof err === 'object' && MOCHA_ERRORS.has(err.code));\n\nmodule.exports = {\n  constants,\n  createFatalError,\n  createForbiddenExclusivityError,\n  createInvalidArgumentTypeError,\n  createInvalidArgumentValueError,\n  createInvalidExceptionError,\n  createInvalidInterfaceError,\n  createInvalidLegacyPluginError,\n  createInvalidPluginDefinitionError,\n  createInvalidPluginError,\n  createInvalidPluginImplementationError,\n  createInvalidReporterError,\n  createMissingArgumentError,\n  createMochaInstanceAlreadyDisposedError,\n  createMochaInstanceAlreadyRunningError,\n  createMultipleDoneError,\n  createNoFilesMatchPatternError,\n  createTimeoutError,\n  createUnparsableFileError,\n  createUnsupportedError,\n  deprecate,\n  isMochaError,\n  warn\n};\n\n/**\n * The error thrown when a Runnable times out\n * @memberof module:lib/errors\n * @typedef {Error} MochaTimeoutError\n * @property {constants.TIMEOUT} code - Error code\n * @property {number?} timeout Timeout in ms\n * @property {string?} file Filepath, if given\n */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}