{"ast":null,"code":"import * as CAR from '@ucanto/core/car';\nimport * as API from '@ucanto/interface';\nimport { Invocation, Message } from '@ucanto/core';\nexport const contentType = 'application/car';\n\n/**\n * @template {API.AgentMessage} Message\n * @param {API.HTTPRequest<Message>} request\n */\nexport const decode = async ({\n  body\n}) => {\n  const {\n    roots,\n    blocks\n  } = CAR.decode( /** @type {Uint8Array} */body);\n  /** @type {API.IssuedInvocation[]} */\n  const run = [];\n  for (const {\n    cid\n  } of roots) {\n    // We don't have a way to know if the root matches a ucan link.\n    const invocation = Invocation.view({\n      root: ( /** @type {API.Link} */cid),\n      blocks\n    });\n    run.push(invocation);\n  }\n  const message = await Message.build({\n    invocations: ( /** @type {API.Tuple<API.IssuedInvocation>} */run)\n  });\n  return /** @type {Message} */message;\n};","map":{"version":3,"names":["CAR","API","Invocation","Message","contentType","decode","body","roots","blocks","run","cid","invocation","view","root","push","message","build","invocations"],"sources":["C:/FACULTATE/Proiect/node_modules/@ucanto/transport/src/legacy/request.js"],"sourcesContent":["import * as CAR from '@ucanto/core/car'\nimport * as API from '@ucanto/interface'\nimport { Invocation, Message } from '@ucanto/core'\n\nexport const contentType = 'application/car'\n\n/**\n * @template {API.AgentMessage} Message\n * @param {API.HTTPRequest<Message>} request\n */\nexport const decode = async ({ body }) => {\n  const { roots, blocks } = CAR.decode(/** @type {Uint8Array} */ (body))\n  /** @type {API.IssuedInvocation[]} */\n  const run = []\n  for (const { cid } of roots) {\n    // We don't have a way to know if the root matches a ucan link.\n    const invocation = Invocation.view({\n      root: /** @type {API.Link} */ (cid),\n      blocks,\n    })\n    run.push(invocation)\n  }\n\n  const message = await Message.build({\n    invocations: /** @type {API.Tuple<API.IssuedInvocation>} */ (run),\n  })\n\n  return /** @type {Message} */ (message)\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,kBAAkB;AACvC,OAAO,KAAKC,GAAG,MAAM,mBAAmB;AACxC,SAASC,UAAU,EAAEC,OAAO,QAAQ,cAAc;AAElD,OAAO,MAAMC,WAAW,GAAG,iBAAiB;;AAE5C;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAO;EAAEC;AAAK,CAAC,KAAK;EACxC,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGR,GAAG,CAACK,MAAM,EAAC,yBAA2BC,IAAK,CAAC;EACtE;EACA,MAAMG,GAAG,GAAG,EAAE;EACd,KAAK,MAAM;IAAEC;EAAI,CAAC,IAAIH,KAAK,EAAE;IAC3B;IACA,MAAMI,UAAU,GAAGT,UAAU,CAACU,IAAI,CAAC;MACjCC,IAAI,IAAE,uBAAyBH,GAAG,CAAC;MACnCF;IACF,CAAC,CAAC;IACFC,GAAG,CAACK,IAAI,CAACH,UAAU,CAAC;EACtB;EAEA,MAAMI,OAAO,GAAG,MAAMZ,OAAO,CAACa,KAAK,CAAC;IAClCC,WAAW,IAAE,8CAAgDR,GAAG;EAClE,CAAC,CAAC;EAEF,OAAO,sBAAwBM,OAAO;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}