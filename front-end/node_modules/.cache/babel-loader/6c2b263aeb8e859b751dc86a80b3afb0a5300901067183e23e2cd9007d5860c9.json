{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('ms');\nvar utils = require('./utils');\nconst {\n  createInvalidExceptionError,\n  createMultipleDoneError,\n  createTimeoutError\n} = require('./errors');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n * @private\n */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._retries = -1;\n  utils.assignNewMochaID(this);\n  Object.defineProperty(this, 'id', {\n    get() {\n      return utils.getMochaID(this);\n    }\n  });\n  this.reset();\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nRunnable.prototype.reset = function () {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  // Clamp to range\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range);\n\n  // see #1652 for reasoning\n  if (ms === range[0] || ms === range[1]) {\n    this._timeout = 0;\n  } else {\n    this._timeout = ms;\n  }\n  debug('timeout %d', this._timeout);\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\nRunnable.prototype.skip = function () {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\nRunnable.prototype.isPending = function () {\n  return this.pending || this.parent && this.parent.isPending();\n};\n\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isFailed = function () {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isPassed = function () {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n\n/**\n * Set or get number of retries.\n *\n * @private\n */\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @private\n */\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string[]}\n */\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @private\n */\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n\n/**\n * Reset the timeout.\n *\n * @private\n */\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout();\n  if (ms === 0) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (self.timeout() === 0) {\n      return;\n    }\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n  if (this.isPending()) return fn();\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n    if (finished) {\n      return multiple(err);\n    }\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && ms > 0) {\n      err = self._timeoutError(ms);\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout() and Runner#uncaught()\n  this.callback = done;\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(new TypeError('A runnable must be passed a function as its second argument.'));\n    return;\n  }\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done();\n      // halt execution, the uncaught handler will ignore the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    callFn(this.fn);\n  } catch (err) {\n    errorWasHandled = true;\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n    done(Runnable.toValueOrError(err));\n  }\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(function () {\n        done();\n        // Return null so libraries like bluebird do not warn about\n        // subsequently constructed Promises.\n        return null;\n      }, function (reason) {\n        done(reason || new Error('Promise rejected with no or falsy reason'));\n      });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n      done();\n    }\n  }\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'));\n      }\n      done();\n    });\n  }\n};\n\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\nRunnable.prototype._timeoutError = function (ms) {\n  let msg = `Timeout of ${ms}ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.`;\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n  return createTimeoutError(msg, ms, this.file);\n};\nvar constants = utils.defineConstants(\n/**\n * {@link Runnable}-related constants.\n * @public\n * @memberof Runnable\n * @readonly\n * @static\n * @alias constants\n * @enum {string}\n */\n{\n  /**\n   * Value of `state` prop when a `Runnable` has failed\n   */\n  STATE_FAILED: 'failed',\n  /**\n   * Value of `state` prop when a `Runnable` has passed\n   */\n  STATE_PASSED: 'passed',\n  /**\n   * Value of `state` prop when a `Runnable` has been skipped by user\n   */\n  STATE_PENDING: 'pending'\n});\n\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\nRunnable.toValueOrError = function (value) {\n  return value || createInvalidExceptionError('Runnable failed with falsy or undefined exception. Please throw an Error instead.', value);\n};\nRunnable.constants = constants;","map":{"version":3,"names":["EventEmitter","require","Pending","debug","milliseconds","utils","createInvalidExceptionError","createMultipleDoneError","createTimeoutError","Date","global","setTimeout","clearTimeout","toString","Object","prototype","module","exports","Runnable","title","fn","body","async","length","sync","_timeout","_slow","_retries","assignNewMochaID","defineProperty","get","getMochaID","reset","inherits","timedOut","_currentRetry","pending","state","err","timeout","ms","arguments","INT_MAX","Math","pow","range","clamp","timer","resetTimeout","slow","skip","isPending","parent","isFailed","constants","STATE_FAILED","isPassed","STATE_PASSED","retries","n","currentRetry","fullTitle","titlePath","join","concat","self","callback","_timeoutError","globals","_allowedGlobals","run","start","ctx","finished","errorWasHandled","runnable","multiple","emit","done","duration","call","TypeError","asyncSkip","callFnAsync","allowUncaught","toValueOrError","callFn","result","then","reason","Error","asyncOnly","JSON","stringify","isPromise","msg","file","defineConstants","STATE_PENDING","value"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/runnable.js"],"sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('ms');\nvar utils = require('./utils');\nconst {\n  createInvalidExceptionError,\n  createMultipleDoneError,\n  createTimeoutError\n} = require('./errors');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n * @private\n */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._retries = -1;\n  utils.assignNewMochaID(this);\n  Object.defineProperty(this, 'id', {\n    get() {\n      return utils.getMochaID(this);\n    }\n  });\n  this.reset();\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nRunnable.prototype.reset = function () {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  // Clamp to range\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range);\n\n  // see #1652 for reasoning\n  if (ms === range[0] || ms === range[1]) {\n    this._timeout = 0;\n  } else {\n    this._timeout = ms;\n  }\n  debug('timeout %d', this._timeout);\n\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\nRunnable.prototype.skip = function () {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\nRunnable.prototype.isPending = function () {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isFailed = function () {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isPassed = function () {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n\n/**\n * Set or get number of retries.\n *\n * @private\n */\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @private\n */\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function () {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string[]}\n */\nRunnable.prototype.titlePath = function () {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @private\n */\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n};\n\n/**\n * Reset the timeout.\n *\n * @private\n */\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout();\n\n  if (ms === 0) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (self.timeout() === 0) {\n      return;\n    }\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n\n  if (this.isPending()) return fn();\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && ms > 0) {\n      err = self._timeoutError(ms);\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout() and Runner#uncaught()\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(\n      new TypeError(\n        'A runnable must be passed a function as its second argument.'\n      )\n    );\n    return;\n  }\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done();\n      // halt execution, the uncaught handler will ignore the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    callFn(this.fn);\n  } catch (err) {\n    errorWasHandled = true;\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function () {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function (reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        }\n      );\n    } else {\n      if (self.asyncOnly) {\n        return done(\n          new Error(\n            '--async-only option in use without declaring `done()` or returning a promise'\n          )\n        );\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(\n            new Error('done() invoked with non-Error: ' + JSON.stringify(err))\n          );\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(\n          new Error(\n            'Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'\n          )\n        );\n      }\n\n      done();\n    });\n  }\n};\n\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\nRunnable.prototype._timeoutError = function (ms) {\n  let msg = `Timeout of ${ms}ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.`;\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n  return createTimeoutError(msg, ms, this.file);\n};\n\nvar constants = utils.defineConstants(\n  /**\n   * {@link Runnable}-related constants.\n   * @public\n   * @memberof Runnable\n   * @readonly\n   * @static\n   * @alias constants\n   * @enum {string}\n   */\n  {\n    /**\n     * Value of `state` prop when a `Runnable` has failed\n     */\n    STATE_FAILED: 'failed',\n    /**\n     * Value of `state` prop when a `Runnable` has passed\n     */\n    STATE_PASSED: 'passed',\n    /**\n     * Value of `state` prop when a `Runnable` has been skipped by user\n     */\n    STATE_PENDING: 'pending'\n  }\n);\n\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\nRunnable.toValueOrError = function (value) {\n  return (\n    value ||\n    createInvalidExceptionError(\n      'Runnable failed with falsy or undefined exception. Please throw an Error instead.',\n      value\n    )\n  );\n};\n\nRunnable.constants = constants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}