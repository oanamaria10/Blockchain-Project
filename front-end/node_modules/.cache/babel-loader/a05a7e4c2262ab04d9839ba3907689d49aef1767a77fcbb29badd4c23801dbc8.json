{"ast":null,"code":"'use strict';\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n};\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n};\nmodule.exports = class Pluralizer {\n  constructor(singular, plural) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n  pluralize(count) {\n    const one = count === 1;\n    const keys = one ? singulars : plurals;\n    const noun = one ? this.singular : this.plural;\n    return {\n      ...keys,\n      count,\n      noun\n    };\n  }\n};","map":{"version":3,"names":["singulars","pronoun","is","was","this","plurals","module","exports","Pluralizer","constructor","singular","plural","pluralize","count","one","keys","noun"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/undici/lib/mock/pluralizer.js"],"sourcesContent":["'use strict'\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n}\n\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n}\n\nmodule.exports = class Pluralizer {\n  constructor (singular, plural) {\n    this.singular = singular\n    this.plural = plural\n  }\n\n  pluralize (count) {\n    const one = count === 1\n    const keys = one ? singulars : plurals\n    const noun = one ? this.singular : this.plural\n    return { ...keys, count, noun }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAG;EAChBC,OAAO,EAAE,IAAI;EACbC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAG;EACdJ,OAAO,EAAE,MAAM;EACfC,EAAE,EAAE,KAAK;EACTC,GAAG,EAAE,MAAM;EACXC,IAAI,EAAE;AACR,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG,MAAMC,UAAU,CAAC;EAChCC,WAAWA,CAAEC,QAAQ,EAAEC,MAAM,EAAE;IAC7B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EAEAC,SAASA,CAAEC,KAAK,EAAE;IAChB,MAAMC,GAAG,GAAGD,KAAK,KAAK,CAAC;IACvB,MAAME,IAAI,GAAGD,GAAG,GAAGd,SAAS,GAAGK,OAAO;IACtC,MAAMW,IAAI,GAAGF,GAAG,GAAG,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACC,MAAM;IAC9C,OAAO;MAAE,GAAGI,IAAI;MAAEF,KAAK;MAAEG;IAAK,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}