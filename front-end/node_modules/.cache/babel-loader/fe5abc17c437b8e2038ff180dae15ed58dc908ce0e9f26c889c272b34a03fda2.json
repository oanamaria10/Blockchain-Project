{"ast":null,"code":"'use strict';\n\nvar BufferList = require('bl/BufferList.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList__default[\"default\"]();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList__default[\"default\"]();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList__default[\"default\"]();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\nmodule.exports = fixedSizeChunker;","map":{"version":3,"names":["BufferList","require","_interopDefaultLegacy","e","BufferList__default","fixedSizeChunker","source","options","bl","currentLength","emitted","maxChunkSize","buffer","append","length","slice","newBl","shallowSlice","module","exports"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/chunker/fixed-size.js"],"sourcesContent":["'use strict';\n\nvar BufferList = require('bl/BufferList.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\n\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList__default[\"default\"]();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList__default[\"default\"]();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList__default[\"default\"]();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\n\nmodule.exports = fixedSizeChunker;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAE5C,SAASC,qBAAqBA,CAAEC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,SAAS,IAAIA,CAAC,GAAGA,CAAC,GAAG;IAAE,SAAS,EAAEA;EAAE,CAAC;AAAE;AAEjH,IAAIC,mBAAmB,GAAG,aAAaF,qBAAqB,CAACF,UAAU,CAAC;AAExE,gBAAgBK,gBAAgBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAChD,IAAIC,EAAE,GAAG,IAAIJ,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;EAC7C,IAAIK,aAAa,GAAG,CAAC;EACrB,IAAIC,OAAO,GAAG,KAAK;EACnB,MAAMC,YAAY,GAAGJ,OAAO,CAACI,YAAY;EACzC,WAAW,MAAMC,MAAM,IAAIN,MAAM,EAAE;IACjCE,EAAE,CAACK,MAAM,CAACD,MAAM,CAAC;IACjBH,aAAa,IAAIG,MAAM,CAACE,MAAM;IAC9B,OAAOL,aAAa,IAAIE,YAAY,EAAE;MACpC,MAAMH,EAAE,CAACO,KAAK,CAAC,CAAC,EAAEJ,YAAY,CAAC;MAC/BD,OAAO,GAAG,IAAI;MACd,IAAIC,YAAY,KAAKH,EAAE,CAACM,MAAM,EAAE;QAC9BN,EAAE,GAAG,IAAIJ,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;QACzCK,aAAa,GAAG,CAAC;MACnB,CAAC,MAAM;QACL,MAAMO,KAAK,GAAG,IAAIZ,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;QAClDY,KAAK,CAACH,MAAM,CAACL,EAAE,CAACS,YAAY,CAACN,YAAY,CAAC,CAAC;QAC3CH,EAAE,GAAGQ,KAAK;QACVP,aAAa,IAAIE,YAAY;MAC/B;IACF;EACF;EACA,IAAI,CAACD,OAAO,IAAID,aAAa,EAAE;IAC7B,MAAMD,EAAE,CAACO,KAAK,CAAC,CAAC,EAAEN,aAAa,CAAC;EAClC;AACF;AAEAS,MAAM,CAACC,OAAO,GAAGd,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}