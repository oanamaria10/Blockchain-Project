{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rares\\\\Desktop\\\\Blockchain\\\\Proiect\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport tokenAbi from \"./RealEstateToken.json\";\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\nimport Login from './Login'; // Import the Login component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealEstateTokenInteraction() {\n  _s();\n  const [tokenId, setTokenId] = useState('');\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [pay, setpay] = useState('');\n  const [tokenId1, setTokenId1] = useState('');\n  const [location, setLocation] = useState('');\n  const [price, setPrice] = useState('');\n  const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\n  const [index, new1] = useState(\"\"); // Get signer for issuing token // Get signer for buying tokens\n\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login statusS\n\n  useEffect(() => {\n    // Fetch private keys from Hardhat network\n    async function fetchAccountData() {\n      try {\n        const accounts = await provider.listAccounts();\n        //console.log(accounts);\n\n        // Create a dictionary with addresses and private keys\n        const accountDictionary = [];\n        accounts.forEach(account => {\n          console.log(account);\n          accountDictionary.push(account);\n        });\n        setAccountData(accountDictionary);\n      } catch (error) {\n        console.error('Error fetching account data:', error);\n      }\n    }\n    fetchAccountData();\n    console.log(accountData);\n  }, []);\n  useEffect(() => {\n    async function fetchAccountInfo() {\n      try {\n        const accounts = await provider.listAccounts();\n        if (accounts.length > 0) {\n          const balance = await provider.getBalance(accounts[1]);\n          setAccountAddress(accounts[1]);\n          setAccountBalance(ethers.utils.formatEther(balance));\n        }\n      } catch (error) {\n        console.error('Error fetching account info:', error);\n      }\n    }\n    fetchAccountInfo();\n  }, []);\n  async function issueToken() {\n    try {\n      // Replace with your deployed RealEstateToken contract address\n      const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n      const token = new ethers.Contract(tokenAddress, tokenAbi[\"abi\"], signerIssue);\n      const signer = provider.getSigner(index);\n\n      // Example: Call a state-changing method (issueToken)\n      const issueTx = await token.connect(signer).issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\n      await issueTx.wait();\n      console.log(\"Token Issued Successfully!\");\n\n      // Update UI or handle success\n    } catch (error) {\n      // Handle errors\n      console.error('Error:', error);\n    }\n  }\n  async function handleLogin(address) {\n    setIsLoggedIn(true);\n    setAccountAddress(address);\n    console.log(address);\n    const balance = await provider.getBalance(address);\n    console.log(balance);\n    setAccountBalance(ethers.utils.formatEther(balance));\n    new1(accountData.indexOf(address));\n  }\n  async function buyToken() {\n    try {\n      // Replace with the deployed RealEstateMarketplace contract address\n      const signer = provider.getSigner(index);\n      const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"; // Your deployed RealEstateMarketplace contract address\n      const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi[\"abi\"], signer);\n\n      // Call the buyToken function in the RealEstateMarketplace contract\n      const buyTx = await marketplace.buyToken(tokenId, {\n        value: ethers.utils.parseEther(pay)\n      });\n      await buyTx.wait();\n      console.log(\"Token bought successfully!\");\n      const updatedBalance = await provider.getBalance(accountAddress);\n      setAccountBalance(ethers.utils.formatEther(updatedBalance));\n\n      // Update UI or handle success\n    } catch (error) {\n      // Handle errors\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ?\n    /*#__PURE__*/\n    // Render login component if not logged in\n    _jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Real Estate Token Interaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connected Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", accountAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", accountBalance, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Request New Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        children: \"Issue Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenId1,\n        onChange: e => setTokenId1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"How much will you pay:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: pay,\n        onChange: e => setpay(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyToken,\n        children: \"Buy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(RealEstateTokenInteraction, \"YZOZBE8rx4uq0UPXgHl8zkzraSU=\");\n_c = RealEstateTokenInteraction;\nexport default RealEstateTokenInteraction;\nvar _c;\n$RefreshReg$(_c, \"RealEstateTokenInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","tokenAbi","marketplaceAbi","Login","jsxDEV","_jsxDEV","RealEstateTokenInteraction","_s","tokenId","setTokenId","accountAddress","setAccountAddress","accountBalance","setAccountBalance","pay","setpay","tokenId1","setTokenId1","location","setLocation","price","setPrice","provider","providers","JsonRpcProvider","index","new1","accountData","setAccountData","isLoggedIn","setIsLoggedIn","fetchAccountData","accounts","listAccounts","accountDictionary","forEach","account","console","log","push","error","fetchAccountInfo","length","balance","getBalance","utils","formatEther","issueToken","tokenAddress","token","Contract","signerIssue","signer","getSigner","issueTx","connect","parseInt","parseEther","wait","handleLogin","address","indexOf","buyToken","marketplaceAddress","marketplace","buyTx","value","updatedBalance","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport tokenAbi from \"./RealEstateToken.json\";\r\nimport marketplaceAbi from \"./RealEstateMarketplace.json\";\r\nimport Login from './Login'; // Import the Login component\r\nimport './App.css';\r\n\r\nfunction RealEstateTokenInteraction() {\r\n    const [tokenId, setTokenId] = useState('');\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [pay, setpay] = useState('');\r\n    const [tokenId1, setTokenId1] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [provider] = useState(new ethers.providers.JsonRpcProvider(\"http://localhost:8545\"));\r\n    const [index,new1] = useState(\"\"); // Get signer for issuing token // Get signer for buying tokens\r\n   \r\n\r\n const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Add state for login statusS\r\n\r\n\r\n    useEffect(() => {\r\n        // Fetch private keys from Hardhat network\r\n        async function fetchAccountData() {\r\n            try {\r\n\r\n                const accounts = await provider.listAccounts();\r\n                //console.log(accounts);\r\n\r\n                // Create a dictionary with addresses and private keys\r\n                const accountDictionary = []\r\n                accounts.forEach(account => {\r\n                    console.log(account)\r\n                    accountDictionary.push(account)\r\n                });\r\n\r\n                setAccountData(accountDictionary);\r\n            } catch (error) {\r\n                console.error('Error fetching account data:', error);\r\n            }\r\n        }\r\n\r\n        fetchAccountData();\r\n        console.log(accountData);\r\n    }, []);\r\n    useEffect(() => {\r\n        async function fetchAccountInfo() {\r\n            try {\r\n                const accounts = await provider.listAccounts();\r\n                if (accounts.length > 0) {\r\n                    const balance = await provider.getBalance(accounts[1]);\r\n                    setAccountAddress(accounts[1]);\r\n                    setAccountBalance(ethers.utils.formatEther(balance));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching account info:', error);\r\n            }\r\n        }\r\n\r\n        fetchAccountInfo();\r\n    }, []);\r\n\r\n    async function issueToken() {\r\n        try {\r\n            // Replace with your deployed RealEstateToken contract address\r\n            const tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n            const token = new ethers.Contract(tokenAddress, tokenAbi[\"abi\"], signerIssue);\r\n            const signer = provider.getSigner(index);\r\n\r\n            // Example: Call a state-changing method (issueToken)\r\n            const issueTx = await token.connect(signer).issueToken(parseInt(tokenId), location, ethers.utils.parseEther(price));\r\n            await issueTx.wait();\r\n            console.log(\"Token Issued Successfully!\");\r\n\r\n            // Update UI or handle success\r\n        } catch (error) {\r\n            // Handle errors\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    async function handleLogin(address) {\r\n        setIsLoggedIn(true);\r\n        setAccountAddress(address);\r\n        console.log(address);\r\n        const balance = await provider.getBalance(address);\r\n        console.log(balance);\r\n        setAccountBalance(ethers.utils.formatEther(balance));\r\n        new1(accountData.indexOf(address));\r\n    }\r\n\r\n    async function buyToken() {\r\n        try {\r\n            // Replace with the deployed RealEstateMarketplace contract address\r\n            const signer = provider.getSigner(index);\r\n            const marketplaceAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"; // Your deployed RealEstateMarketplace contract address\r\n            const marketplace = new ethers.Contract(marketplaceAddress, marketplaceAbi[\"abi\"], signer);\r\n\r\n            // Call the buyToken function in the RealEstateMarketplace contract\r\n            const buyTx = await marketplace.buyToken(tokenId, { value: ethers.utils.parseEther(pay) });\r\n            await buyTx.wait();\r\n            console.log(\"Token bought successfully!\");\r\n\r\n            const updatedBalance = await provider.getBalance(accountAddress);\r\n            setAccountBalance(ethers.utils.formatEther(updatedBalance));\r\n\r\n            // Update UI or handle success\r\n        } catch (error) {\r\n            // Handle errors\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn ? ( // Render login component if not logged in\r\n                <Login accountData={accountData} onLogin={handleLogin} />\r\n            ) : (\r\n                <div>\r\n                    <h1>Real Estate Token Interaction</h1>\r\n\r\n                    <div>\r\n                        <h2>Connected Account Information</h2>\r\n                        <p>Address: {accountAddress}</p>\r\n                        <p>Balance: {accountBalance} ETH</p>\r\n                    </div>\r\n\r\n                    <h2>Request New Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId} onChange={(e) => setTokenId(e.target.value)} /><br />\r\n                    <label>Location:</label>\r\n                    <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} /><br />\r\n                    <label>Price (ETH):</label>\r\n                    <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} /><br />\r\n                    <button onClick={issueToken}>Issue Token</button>\r\n\r\n                    <hr />\r\n\r\n                    <h2>Buy Token</h2>\r\n                    <label>Token ID:</label>\r\n                    <input type=\"number\" value={tokenId1} onChange={(e) => setTokenId1(e.target.value)} /><br />\r\n                    <label>How much will you pay:</label>\r\n                    <input type=\"text\" value={pay} onChange={(e) => setpay(e.target.value)} /><br />\r\n                    <button onClick={buyToken}>Buy Token</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default RealEstateTokenInteraction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}