{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProjectPackageJson = exports.getHardhatVersion = exports.getPackageJson = exports.getPackageName = exports.findClosestPackageJson = exports.getPackageRoot = exports.getPackageJsonPath = void 0;\nconst find_up_1 = __importDefault(require(\"find-up\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst errors_1 = require(\"../core/errors\");\nfunction getPackageJsonPath() {\n  return findClosestPackageJson(__filename);\n}\nexports.getPackageJsonPath = getPackageJsonPath;\nfunction getPackageRoot() {\n  const packageJsonPath = getPackageJsonPath();\n  return path_1.default.dirname(packageJsonPath);\n}\nexports.getPackageRoot = getPackageRoot;\nfunction findClosestPackageJson(file) {\n  return find_up_1.default.sync(\"package.json\", {\n    cwd: path_1.default.dirname(file)\n  });\n}\nexports.findClosestPackageJson = findClosestPackageJson;\nasync function getPackageName(file) {\n  const packageJsonPath = findClosestPackageJson(file);\n  if (packageJsonPath !== null && packageJsonPath !== \"\") {\n    const packageJson = await fs_extra_1.default.readJSON(packageJsonPath);\n    return packageJson.name;\n  }\n  return \"\";\n}\nexports.getPackageName = getPackageName;\nasync function getPackageJson() {\n  const root = getPackageRoot();\n  return fs_extra_1.default.readJSON(path_1.default.join(root, \"package.json\"));\n}\nexports.getPackageJson = getPackageJson;\nfunction getHardhatVersion() {\n  const packageJsonPath = findClosestPackageJson(__filename);\n  (0, errors_1.assertHardhatInvariant)(packageJsonPath !== null, \"There should be a package.json in hardhat-core's root directory\");\n  const packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);\n  return packageJson.version;\n}\nexports.getHardhatVersion = getHardhatVersion;\n/**\n * Return the contents of the package.json in the user's project\n */\nfunction getProjectPackageJson() {\n  const packageJsonPath = find_up_1.default.sync(\"package.json\");\n  (0, errors_1.assertHardhatInvariant)(packageJsonPath !== null, \"Expected a package.json file in the current directory or in an ancestor directory\");\n  return fs_extra_1.default.readJson(packageJsonPath);\n}\nexports.getProjectPackageJson = getProjectPackageJson;","map":{"version":3,"names":["find_up_1","__importDefault","require","fs_extra_1","path_1","errors_1","getPackageJsonPath","findClosestPackageJson","__filename","exports","getPackageRoot","packageJsonPath","default","dirname","file","sync","cwd","getPackageName","packageJson","readJSON","name","getPackageJson","root","join","getHardhatVersion","assertHardhatInvariant","readJsonSync","version","getProjectPackageJson","readJson"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\util\\packageInfo.ts"],"sourcesContent":["import findup from \"find-up\";\nimport fsExtra from \"fs-extra\";\nimport path from \"path\";\n\nimport { assertHardhatInvariant } from \"../core/errors\";\n\nexport function getPackageJsonPath(): string {\n  return findClosestPackageJson(__filename)!;\n}\n\nexport function getPackageRoot(): string {\n  const packageJsonPath = getPackageJsonPath();\n\n  return path.dirname(packageJsonPath);\n}\n\nexport interface PackageJson {\n  name: string;\n  version: string;\n  type?: \"commonjs\" | \"module\";\n  engines: {\n    node: string;\n  };\n}\n\nexport function findClosestPackageJson(file: string): string | null {\n  return findup.sync(\"package.json\", { cwd: path.dirname(file) });\n}\n\nexport async function getPackageName(file: string): Promise<string> {\n  const packageJsonPath = findClosestPackageJson(file);\n  if (packageJsonPath !== null && packageJsonPath !== \"\") {\n    const packageJson: PackageJson = await fsExtra.readJSON(packageJsonPath);\n    return packageJson.name;\n  }\n  return \"\";\n}\n\nexport async function getPackageJson(): Promise<PackageJson> {\n  const root = getPackageRoot();\n  return fsExtra.readJSON(path.join(root, \"package.json\"));\n}\n\nexport function getHardhatVersion(): string {\n  const packageJsonPath = findClosestPackageJson(__filename);\n\n  assertHardhatInvariant(\n    packageJsonPath !== null,\n    \"There should be a package.json in hardhat-core's root directory\"\n  );\n\n  const packageJson = fsExtra.readJsonSync(packageJsonPath);\n  return packageJson.version;\n}\n\n/**\n * Return the contents of the package.json in the user's project\n */\nexport function getProjectPackageJson(): Promise<any> {\n  const packageJsonPath = findup.sync(\"package.json\");\n\n  assertHardhatInvariant(\n    packageJsonPath !== null,\n    \"Expected a package.json file in the current directory or in an ancestor directory\"\n  );\n\n  return fsExtra.readJson(packageJsonPath);\n}\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,SAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,UAAA,GAAAF,eAAA,CAAAC,OAAA;AACA,MAAAE,MAAA,GAAAH,eAAA,CAAAC,OAAA;AAEA,MAAAG,QAAA,GAAAH,OAAA;AAEA,SAAgBI,kBAAkBA,CAAA;EAChC,OAAOC,sBAAsB,CAACC,UAAU,CAAE;AAC5C;AAFAC,OAAA,CAAAH,kBAAA,GAAAA,kBAAA;AAIA,SAAgBI,cAAcA,CAAA;EAC5B,MAAMC,eAAe,GAAGL,kBAAkB,EAAE;EAE5C,OAAOF,MAAA,CAAAQ,OAAI,CAACC,OAAO,CAACF,eAAe,CAAC;AACtC;AAJAF,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAeA,SAAgBH,sBAAsBA,CAACO,IAAY;EACjD,OAAOd,SAAA,CAAAY,OAAM,CAACG,IAAI,CAAC,cAAc,EAAE;IAAEC,GAAG,EAAEZ,MAAA,CAAAQ,OAAI,CAACC,OAAO,CAACC,IAAI;EAAC,CAAE,CAAC;AACjE;AAFAL,OAAA,CAAAF,sBAAA,GAAAA,sBAAA;AAIO,eAAeU,cAAcA,CAACH,IAAY;EAC/C,MAAMH,eAAe,GAAGJ,sBAAsB,CAACO,IAAI,CAAC;EACpD,IAAIH,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,EAAE,EAAE;IACtD,MAAMO,WAAW,GAAgB,MAAMf,UAAA,CAAAS,OAAO,CAACO,QAAQ,CAACR,eAAe,CAAC;IACxE,OAAOO,WAAW,CAACE,IAAI;;EAEzB,OAAO,EAAE;AACX;AAPAX,OAAA,CAAAQ,cAAA,GAAAA,cAAA;AASO,eAAeI,cAAcA,CAAA;EAClC,MAAMC,IAAI,GAAGZ,cAAc,EAAE;EAC7B,OAAOP,UAAA,CAAAS,OAAO,CAACO,QAAQ,CAACf,MAAA,CAAAQ,OAAI,CAACW,IAAI,CAACD,IAAI,EAAE,cAAc,CAAC,CAAC;AAC1D;AAHAb,OAAA,CAAAY,cAAA,GAAAA,cAAA;AAKA,SAAgBG,iBAAiBA,CAAA;EAC/B,MAAMb,eAAe,GAAGJ,sBAAsB,CAACC,UAAU,CAAC;EAE1D,IAAAH,QAAA,CAAAoB,sBAAsB,EACpBd,eAAe,KAAK,IAAI,EACxB,iEAAiE,CAClE;EAED,MAAMO,WAAW,GAAGf,UAAA,CAAAS,OAAO,CAACc,YAAY,CAACf,eAAe,CAAC;EACzD,OAAOO,WAAW,CAACS,OAAO;AAC5B;AAVAlB,OAAA,CAAAe,iBAAA,GAAAA,iBAAA;AAYA;;;AAGA,SAAgBI,qBAAqBA,CAAA;EACnC,MAAMjB,eAAe,GAAGX,SAAA,CAAAY,OAAM,CAACG,IAAI,CAAC,cAAc,CAAC;EAEnD,IAAAV,QAAA,CAAAoB,sBAAsB,EACpBd,eAAe,KAAK,IAAI,EACxB,mFAAmF,CACpF;EAED,OAAOR,UAAA,CAAAS,OAAO,CAACiB,QAAQ,CAAClB,eAAe,CAAC;AAC1C;AATAF,OAAA,CAAAmB,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}