{"ast":null,"code":"/**\n * stack-trace - Parses node.js stack traces\n *\n * This was originally forked to fix this issue:\n * https://github.com/felixge/node-stack-trace/issues/31\n *\n * Mar 19,2019 - #4fd379e\n *\n * https://github.com/felixge/node-stack-trace/\n * @license MIT\n */\n/** Extracts StackFrames from the Error */\nexport function parse(err) {\n  if (!err.stack) {\n    return [];\n  }\n  var lines = err.stack.split('\\n').slice(1);\n  return lines.map(function (line) {\n    if (line.match(/^\\s*[-]{4,}$/)) {\n      return {\n        columnNumber: null,\n        fileName: line,\n        functionName: null,\n        lineNumber: null,\n        methodName: null,\n        native: null,\n        typeName: null\n      };\n    }\n    var lineMatch = line.match(/at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n    if (!lineMatch) {\n      return undefined;\n    }\n    var object = null;\n    var method = null;\n    var functionName = null;\n    var typeName = null;\n    var methodName = null;\n    var isNative = lineMatch[5] === 'native';\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n      var methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        // eslint-disable-next-line no-plusplus\n        methodStart--;\n      }\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = null;\n    }\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n    if (method === '<anonymous>') {\n      methodName = null;\n      functionName = null;\n    }\n    var properties = {\n      columnNumber: parseInt(lineMatch[4], 10) || null,\n      fileName: lineMatch[2] || null,\n      functionName: functionName,\n      lineNumber: parseInt(lineMatch[3], 10) || null,\n      methodName: methodName,\n      native: isNative,\n      typeName: typeName\n    };\n    return properties;\n  }).filter(function (callSite) {\n    return !!callSite;\n  });\n}","map":{"version":3,"names":["parse","err","stack","lines","split","slice","map","line","match","columnNumber","fileName","functionName","lineNumber","methodName","native","typeName","lineMatch","undefined","object","method","isNative","methodStart","lastIndexOf","substr","objectEnd","indexOf","properties","parseInt","filter","callSite"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@sentry\\node\\src\\stacktrace.ts"],"sourcesContent":["/**\n * stack-trace - Parses node.js stack traces\n *\n * This was originally forked to fix this issue:\n * https://github.com/felixge/node-stack-trace/issues/31\n *\n * Mar 19,2019 - #4fd379e\n *\n * https://github.com/felixge/node-stack-trace/\n * @license MIT\n */\n\n/** Decoded StackFrame */\nexport interface StackFrame {\n  fileName: string;\n  lineNumber: number;\n  functionName: string;\n  typeName: string;\n  methodName: string;\n  native: boolean;\n  columnNumber: number;\n}\n\n/** Extracts StackFrames from the Error */\nexport function parse(err: Error): StackFrame[] {\n  if (!err.stack) {\n    return [];\n  }\n\n  const lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(line => {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return {\n          columnNumber: null,\n          fileName: line,\n          functionName: null,\n          lineNumber: null,\n          methodName: null,\n          native: null,\n          typeName: null,\n        };\n      }\n\n      const lineMatch = line.match(/at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return undefined;\n      }\n\n      let object = null;\n      let method = null;\n      let functionName = null;\n      let typeName = null;\n      let methodName = null;\n      const isNative = lineMatch[5] === 'native';\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          // eslint-disable-next-line no-plusplus\n          methodStart--;\n        }\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      const properties = {\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        fileName: lineMatch[2] || null,\n        functionName,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        methodName,\n        native: isNative,\n        typeName,\n      };\n\n      return properties;\n    })\n    .filter(callSite => !!callSite) as StackFrame[];\n}\n"],"mappings":"AAAA;;;;;;;;;;;AAuBA;AACA,OAAM,SAAUA,KAAKA,CAACC,GAAU;EAC9B,IAAI,CAACA,GAAG,CAACC,KAAK,EAAE;IACd,OAAO,EAAE;;EAGX,IAAMC,KAAK,GAAGF,GAAG,CAACC,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAE5C,OAAOF,KAAK,CACTG,GAAG,CAAC,UAAAC,IAAI;IACP,IAAIA,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC,EAAE;MAC9B,OAAO;QACLC,YAAY,EAAE,IAAI;QAClBC,QAAQ,EAAEH,IAAI;QACdI,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE;OACX;;IAGH,IAAMC,SAAS,GAAGT,IAAI,CAACC,KAAK,CAAC,yDAAyD,CAAC;IACvF,IAAI,CAACQ,SAAS,EAAE;MACd,OAAOC,SAAS;;IAGlB,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIR,YAAY,GAAG,IAAI;IACvB,IAAII,QAAQ,GAAG,IAAI;IACnB,IAAIF,UAAU,GAAG,IAAI;IACrB,IAAMO,QAAQ,GAAGJ,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ;IAE1C,IAAIA,SAAS,CAAC,CAAC,CAAC,EAAE;MAChBL,YAAY,GAAGK,SAAS,CAAC,CAAC,CAAC;MAC3B,IAAIK,WAAW,GAAGV,YAAY,CAACW,WAAW,CAAC,GAAG,CAAC;MAC/C,IAAIX,YAAY,CAACU,WAAW,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QACzC;QACAA,WAAW,EAAE;;MAEf,IAAIA,WAAW,GAAG,CAAC,EAAE;QACnBH,MAAM,GAAGP,YAAY,CAACY,MAAM,CAAC,CAAC,EAAEF,WAAW,CAAC;QAC5CF,MAAM,GAAGR,YAAY,CAACY,MAAM,CAACF,WAAW,GAAG,CAAC,CAAC;QAC7C,IAAMG,SAAS,GAAGN,MAAM,CAACO,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAID,SAAS,GAAG,CAAC,EAAE;UACjBb,YAAY,GAAGA,YAAY,CAACY,MAAM,CAACC,SAAS,GAAG,CAAC,CAAC;UACjDN,MAAM,GAAGA,MAAM,CAACK,MAAM,CAAC,CAAC,EAAEC,SAAS,CAAC;;;MAGxCT,QAAQ,GAAG,IAAI;;IAGjB,IAAII,MAAM,EAAE;MACVJ,QAAQ,GAAGG,MAAM;MACjBL,UAAU,GAAGM,MAAM;;IAGrB,IAAIA,MAAM,KAAK,aAAa,EAAE;MAC5BN,UAAU,GAAG,IAAI;MACjBF,YAAY,GAAG,IAAI;;IAGrB,IAAMe,UAAU,GAAG;MACjBjB,YAAY,EAAEkB,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI;MAChDN,QAAQ,EAAEM,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI;MAC9BL,YAAY,EAAAA,YAAA;MACZC,UAAU,EAAEe,QAAQ,CAACX,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI;MAC9CH,UAAU,EAAAA,UAAA;MACVC,MAAM,EAAEM,QAAQ;MAChBL,QAAQ,EAAAA;KACT;IAED,OAAOW,UAAU;EACnB,CAAC,CAAC,CACDE,MAAM,CAAC,UAAAC,QAAQ;IAAI,QAAC,CAACA,QAAQ;EAAV,CAAU,CAAiB;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}