{"ast":null,"code":"/**\n * Space Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Space from '@web3-storage/capabilities/space'\n * ```\n *\n * @module\n */\n\nimport * as Store from './store.js';\nimport { capability, Schema, ok, fail } from '@ucanto/validator';\nimport { SpaceDID, equalWith } from './utils.js';\nimport * as Upload from './upload.js';\nexport { top } from './top.js';\n\n// Need this to workaround TS bug\n// @see https://github.com/microsoft/TypeScript/issues/51548\nexport { Store };\nexport const space = capability({\n  can: 'space/*',\n  with: SpaceDID,\n  derives: equalWith\n});\n\n/**\n * `space/info` can be derived from any of the `store/*`\n * capability that has matching `with`. This allows store service\n * to identify account based on any user request.\n */\nexport const info = Store.add.or(Store.list).or(Store.remove).or(Upload.add).or(Upload.list).or(Upload.remove).derive({\n  to: capability({\n    can: 'space/info',\n    with: SpaceDID\n  }),\n  derives: equalWith\n});\nexport const allocate = capability({\n  can: 'space/allocate',\n  with: SpaceDID,\n  nb: Schema.struct({\n    size: Schema.integer()\n  }),\n  derives: (child, parent) => {\n    const result = equalWith(child, parent);\n    if (result.ok) {\n      return child.nb.size <= parent.nb.size ? ok({}) : fail(`Claimed size ${child.nb.size} escalates delegated size ${parent.nb.size}`);\n    } else {\n      return result;\n    }\n  }\n});\n\n/**\n * The capability grants permission for all content serve operations that fall under the \"space/content/serve\" namespace.\n * It can be derived from any of the `space/*` capability that has matching `with`.\n */\n\nexport const contentServe = capability({\n  can: 'space/content/serve/*',\n  with: SpaceDID,\n  derives: equalWith\n});\n\n/**\n * Capability can be invoked by an agent to record egress data for a given resource.\n * It can be derived from any of the `space/content/serve/*` capability that has matching `with`.\n */\nexport const egressRecord = capability({\n  can: 'space/content/serve/egress/record',\n  with: SpaceDID,\n  nb: Schema.struct({\n    /** CID of the resource that was served. */\n    resource: Schema.link(),\n    /** Amount of bytes served. */\n    bytes: Schema.integer().greaterThan(0),\n    /** Timestamp of the event in milliseconds after Unix epoch. */\n    servedAt: Schema.integer().greaterThan(-1)\n  }),\n  derives: equalWith\n});","map":{"version":3,"names":["Store","capability","Schema","ok","fail","SpaceDID","equalWith","Upload","top","space","can","with","derives","info","add","or","list","remove","derive","to","allocate","nb","struct","size","integer","child","parent","result","contentServe","egressRecord","resource","link","bytes","greaterThan","servedAt"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/capabilities/src/space.js"],"sourcesContent":["/**\n * Space Capabilities\n *\n * These can be imported directly with:\n * ```js\n * import * as Space from '@web3-storage/capabilities/space'\n * ```\n *\n * @module\n */\n\nimport * as Store from './store.js'\nimport { capability, Schema, ok, fail } from '@ucanto/validator'\nimport { SpaceDID, equalWith } from './utils.js'\nimport * as Upload from './upload.js'\nexport { top } from './top.js'\n\n// Need this to workaround TS bug\n// @see https://github.com/microsoft/TypeScript/issues/51548\nexport { Store }\n\nexport const space = capability({\n  can: 'space/*',\n  with: SpaceDID,\n  derives: equalWith,\n})\n\n/**\n * `space/info` can be derived from any of the `store/*`\n * capability that has matching `with`. This allows store service\n * to identify account based on any user request.\n */\nexport const info = Store.add\n  .or(Store.list)\n  .or(Store.remove)\n  .or(Upload.add)\n  .or(Upload.list)\n  .or(Upload.remove)\n  .derive({\n    to: capability({\n      can: 'space/info',\n      with: SpaceDID,\n    }),\n    derives: equalWith,\n  })\n\nexport const allocate = capability({\n  can: 'space/allocate',\n  with: SpaceDID,\n  nb: Schema.struct({\n    size: Schema.integer(),\n  }),\n  derives: (child, parent) => {\n    const result = equalWith(child, parent)\n    if (result.ok) {\n      return child.nb.size <= parent.nb.size\n        ? ok({})\n        : fail(\n            `Claimed size ${child.nb.size} escalates delegated size ${parent.nb.size}`\n          )\n    } else {\n      return result\n    }\n  },\n})\n\n/**\n * The capability grants permission for all content serve operations that fall under the \"space/content/serve\" namespace.\n * It can be derived from any of the `space/*` capability that has matching `with`.\n */\n\nexport const contentServe = capability({\n  can: 'space/content/serve/*',\n  with: SpaceDID,\n  derives: equalWith,\n})\n\n/**\n * Capability can be invoked by an agent to record egress data for a given resource.\n * It can be derived from any of the `space/content/serve/*` capability that has matching `with`.\n */\nexport const egressRecord = capability({\n  can: 'space/content/serve/egress/record',\n  with: SpaceDID,\n  nb: Schema.struct({\n    /** CID of the resource that was served. */\n    resource: Schema.link(),\n    /** Amount of bytes served. */\n    bytes: Schema.integer().greaterThan(0),\n    /** Timestamp of the event in milliseconds after Unix epoch. */\n    servedAt: Schema.integer().greaterThan(-1),\n  }),\n  derives: equalWith,\n})\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,KAAK,MAAM,YAAY;AACnC,SAASC,UAAU,EAAEC,MAAM,EAAEC,EAAE,EAAEC,IAAI,QAAQ,mBAAmB;AAChE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,SAASC,GAAG,QAAQ,UAAU;;AAE9B;AACA;AACA,SAASR,KAAK;AAEd,OAAO,MAAMS,KAAK,GAAGR,UAAU,CAAC;EAC9BS,GAAG,EAAE,SAAS;EACdC,IAAI,EAAEN,QAAQ;EACdO,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMO,IAAI,GAAGb,KAAK,CAACc,GAAG,CAC1BC,EAAE,CAACf,KAAK,CAACgB,IAAI,CAAC,CACdD,EAAE,CAACf,KAAK,CAACiB,MAAM,CAAC,CAChBF,EAAE,CAACR,MAAM,CAACO,GAAG,CAAC,CACdC,EAAE,CAACR,MAAM,CAACS,IAAI,CAAC,CACfD,EAAE,CAACR,MAAM,CAACU,MAAM,CAAC,CACjBC,MAAM,CAAC;EACNC,EAAE,EAAElB,UAAU,CAAC;IACbS,GAAG,EAAE,YAAY;IACjBC,IAAI,EAAEN;EACR,CAAC,CAAC;EACFO,OAAO,EAAEN;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMc,QAAQ,GAAGnB,UAAU,CAAC;EACjCS,GAAG,EAAE,gBAAgB;EACrBC,IAAI,EAAEN,QAAQ;EACdgB,EAAE,EAAEnB,MAAM,CAACoB,MAAM,CAAC;IAChBC,IAAI,EAAErB,MAAM,CAACsB,OAAO,CAAC;EACvB,CAAC,CAAC;EACFZ,OAAO,EAAEA,CAACa,KAAK,EAAEC,MAAM,KAAK;IAC1B,MAAMC,MAAM,GAAGrB,SAAS,CAACmB,KAAK,EAAEC,MAAM,CAAC;IACvC,IAAIC,MAAM,CAACxB,EAAE,EAAE;MACb,OAAOsB,KAAK,CAACJ,EAAE,CAACE,IAAI,IAAIG,MAAM,CAACL,EAAE,CAACE,IAAI,GAClCpB,EAAE,CAAC,CAAC,CAAC,CAAC,GACNC,IAAI,CACD,gBAAeqB,KAAK,CAACJ,EAAE,CAACE,IAAK,6BAA4BG,MAAM,CAACL,EAAE,CAACE,IAAK,EAC3E,CAAC;IACP,CAAC,MAAM;MACL,OAAOI,MAAM;IACf;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG3B,UAAU,CAAC;EACrCS,GAAG,EAAE,uBAAuB;EAC5BC,IAAI,EAAEN,QAAQ;EACdO,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,OAAO,MAAMuB,YAAY,GAAG5B,UAAU,CAAC;EACrCS,GAAG,EAAE,mCAAmC;EACxCC,IAAI,EAAEN,QAAQ;EACdgB,EAAE,EAAEnB,MAAM,CAACoB,MAAM,CAAC;IAChB;IACAQ,QAAQ,EAAE5B,MAAM,CAAC6B,IAAI,CAAC,CAAC;IACvB;IACAC,KAAK,EAAE9B,MAAM,CAACsB,OAAO,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC;IACtC;IACAC,QAAQ,EAAEhC,MAAM,CAACsB,OAAO,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;EACFrB,OAAO,EAAEN;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}