{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignerWithAddress = void 0;\nconst ethers_1 = require(\"ethers\");\nclass SignerWithAddress extends ethers_1.ethers.Signer {\n  constructor(address, _signer) {\n    super();\n    this.address = address;\n    this._signer = _signer;\n    this.provider = _signer.provider;\n  }\n  static async create(signer) {\n    return new SignerWithAddress(await signer.getAddress(), signer);\n  }\n  async getAddress() {\n    return this.address;\n  }\n  signMessage(message) {\n    return this._signer.signMessage(message);\n  }\n  signTransaction(transaction) {\n    return this._signer.signTransaction(transaction);\n  }\n  sendTransaction(transaction) {\n    return this._signer.sendTransaction(transaction);\n  }\n  connect(provider) {\n    return new SignerWithAddress(this.address, this._signer.connect(provider));\n  }\n  _signTypedData(...params) {\n    return this._signer._signTypedData(...params);\n  }\n  toJSON() {\n    return `<SignerWithAddress ${this.address}>`;\n  }\n}\nexports.SignerWithAddress = SignerWithAddress;","map":{"version":3,"names":["ethers_1","require","SignerWithAddress","ethers","Signer","constructor","address","_signer","provider","create","signer","getAddress","signMessage","message","signTransaction","transaction","sendTransaction","connect","_signTypedData","params","toJSON","exports"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@nomiclabs\\hardhat-ethers\\src\\signers.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport class SignerWithAddress extends ethers.Signer {\n  public static async create(signer: ethers.providers.JsonRpcSigner) {\n    return new SignerWithAddress(await signer.getAddress(), signer);\n  }\n\n  private constructor(\n    public readonly address: string,\n    private readonly _signer: ethers.providers.JsonRpcSigner\n  ) {\n    super();\n    (this as any).provider = _signer.provider;\n  }\n\n  public async getAddress(): Promise<string> {\n    return this.address;\n  }\n\n  public signMessage(message: string | ethers.utils.Bytes): Promise<string> {\n    return this._signer.signMessage(message);\n  }\n\n  public signTransaction(\n    transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>\n  ): Promise<string> {\n    return this._signer.signTransaction(transaction);\n  }\n\n  public sendTransaction(\n    transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>\n  ): Promise<ethers.providers.TransactionResponse> {\n    return this._signer.sendTransaction(transaction);\n  }\n\n  public connect(provider: ethers.providers.Provider): SignerWithAddress {\n    return new SignerWithAddress(this.address, this._signer.connect(provider));\n  }\n\n  public _signTypedData(\n    ...params: Parameters<ethers.providers.JsonRpcSigner[\"_signTypedData\"]>\n  ): Promise<string> {\n    return this._signer._signTypedData(...params);\n  }\n\n  public toJSON() {\n    return `<SignerWithAddress ${this.address}>`;\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAaC,iBAAkB,SAAQF,QAAA,CAAAG,MAAM,CAACC,MAAM;EAKlDC,YACkBC,OAAe,EACdC,OAAuC;IAExD,KAAK,EAAE;IAHS,KAAAD,OAAO,GAAPA,OAAO;IACN,KAAAC,OAAO,GAAPA,OAAO;IAGvB,IAAY,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;EAC3C;EAVO,aAAaC,MAAMA,CAACC,MAAsC;IAC/D,OAAO,IAAIR,iBAAiB,CAAC,MAAMQ,MAAM,CAACC,UAAU,EAAE,EAAED,MAAM,CAAC;EACjE;EAUO,MAAMC,UAAUA,CAAA;IACrB,OAAO,IAAI,CAACL,OAAO;EACrB;EAEOM,WAAWA,CAACC,OAAoC;IACrD,OAAO,IAAI,CAACN,OAAO,CAACK,WAAW,CAACC,OAAO,CAAC;EAC1C;EAEOC,eAAeA,CACpBC,WAAyE;IAEzE,OAAO,IAAI,CAACR,OAAO,CAACO,eAAe,CAACC,WAAW,CAAC;EAClD;EAEOC,eAAeA,CACpBD,WAAyE;IAEzE,OAAO,IAAI,CAACR,OAAO,CAACS,eAAe,CAACD,WAAW,CAAC;EAClD;EAEOE,OAAOA,CAACT,QAAmC;IAChD,OAAO,IAAIN,iBAAiB,CAAC,IAAI,CAACI,OAAO,EAAE,IAAI,CAACC,OAAO,CAACU,OAAO,CAACT,QAAQ,CAAC,CAAC;EAC5E;EAEOU,cAAcA,CACnB,GAAGC,MAAoE;IAEvE,OAAO,IAAI,CAACZ,OAAO,CAACW,cAAc,CAAC,GAAGC,MAAM,CAAC;EAC/C;EAEOC,MAAMA,CAAA;IACX,OAAO,sBAAsB,IAAI,CAACd,OAAO,GAAG;EAC9C;;AA7CFe,OAAA,CAAAnB,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}