{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar fs = require('fs');\nvar stream = require('stream');\nvar cid = require('multiformats/cid');\nvar indexer = require('./indexer.js');\nvar reader = require('./reader.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\nclass CarIndexedReader {\n  constructor(version, path, roots, index, order) {\n    this._version = version;\n    this._path = path;\n    this._roots = roots;\n    this._index = index;\n    this._order = order;\n    this._fd = null;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._index.has(key.toString());\n  }\n  async get(key) {\n    const blockIndex = this._index.get(key.toString());\n    if (!blockIndex) {\n      return undefined;\n    }\n    if (!this._fd) {\n      this._fd = await fs__default[\"default\"].promises.open(this._path, 'r');\n    }\n    const readIndex = {\n      cid: key,\n      length: 0,\n      offset: 0,\n      blockLength: blockIndex.blockLength,\n      blockOffset: blockIndex.blockOffset\n    };\n    return reader.CarReader.readRaw(this._fd, readIndex);\n  }\n  async *blocks() {\n    for (const cidStr of this._order) {\n      const block = await this.get(cid.CID.parse(cidStr));\n      if (!block) {\n        throw new Error('Unexpected internal error');\n      }\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const cidStr of this._order) {\n      yield cid.CID.parse(cidStr);\n    }\n  }\n  async close() {\n    if (this._fd) {\n      return this._fd.close();\n    }\n  }\n  static async fromFile(path) {\n    if (typeof path !== 'string') {\n      throw new TypeError('fromFile() requires a file path string');\n    }\n    const iterable = await indexer.CarIndexer.fromIterable(stream.Readable.from(fs__default[\"default\"].createReadStream(path)));\n    const index = new Map();\n    const order = [];\n    for await (const {\n      cid,\n      blockLength,\n      blockOffset\n    } of iterable) {\n      const cidStr = cid.toString();\n      index.set(cidStr, {\n        blockLength,\n        blockOffset\n      });\n      order.push(cidStr);\n    }\n    return new CarIndexedReader(iterable.version, path, await iterable.getRoots(), index, order);\n  }\n}\nconst __browser = false;\nexports.CarIndexedReader = CarIndexedReader;\nexports.__browser = __browser;","map":{"version":3,"names":["Object","defineProperty","exports","value","fs","require","stream","cid","indexer","reader","_interopDefaultLegacy","e","fs__default","CarIndexedReader","constructor","version","path","roots","index","order","_version","_path","_roots","_index","_order","_fd","getRoots","has","key","toString","get","blockIndex","undefined","promises","open","readIndex","length","offset","blockLength","blockOffset","CarReader","readRaw","blocks","cidStr","block","CID","parse","Error","cids","close","fromFile","TypeError","iterable","CarIndexer","fromIterable","Readable","from","createReadStream","Map","set","push","__browser"],"sources":["C:/FACULTATE/Proiect/node_modules/@ipld/car/cjs/lib/indexed-reader.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar fs = require('fs');\nvar stream = require('stream');\nvar cid = require('multiformats/cid');\nvar indexer = require('./indexer.js');\nvar reader = require('./reader.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\n\nclass CarIndexedReader {\n  constructor(version, path, roots, index, order) {\n    this._version = version;\n    this._path = path;\n    this._roots = roots;\n    this._index = index;\n    this._order = order;\n    this._fd = null;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._index.has(key.toString());\n  }\n  async get(key) {\n    const blockIndex = this._index.get(key.toString());\n    if (!blockIndex) {\n      return undefined;\n    }\n    if (!this._fd) {\n      this._fd = await fs__default[\"default\"].promises.open(this._path, 'r');\n    }\n    const readIndex = {\n      cid: key,\n      length: 0,\n      offset: 0,\n      blockLength: blockIndex.blockLength,\n      blockOffset: blockIndex.blockOffset\n    };\n    return reader.CarReader.readRaw(this._fd, readIndex);\n  }\n  async *blocks() {\n    for (const cidStr of this._order) {\n      const block = await this.get(cid.CID.parse(cidStr));\n      if (!block) {\n        throw new Error('Unexpected internal error');\n      }\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const cidStr of this._order) {\n      yield cid.CID.parse(cidStr);\n    }\n  }\n  async close() {\n    if (this._fd) {\n      return this._fd.close();\n    }\n  }\n  static async fromFile(path) {\n    if (typeof path !== 'string') {\n      throw new TypeError('fromFile() requires a file path string');\n    }\n    const iterable = await indexer.CarIndexer.fromIterable(stream.Readable.from(fs__default[\"default\"].createReadStream(path)));\n    const index = new Map();\n    const order = [];\n    for await (const {cid, blockLength, blockOffset} of iterable) {\n      const cidStr = cid.toString();\n      index.set(cidStr, {\n        blockLength,\n        blockOffset\n      });\n      order.push(cidStr);\n    }\n    return new CarIndexedReader(iterable.version, path, await iterable.getRoots(), index, order);\n  }\n}\nconst __browser = false;\n\nexports.CarIndexedReader = CarIndexedReader;\nexports.__browser = __browser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}