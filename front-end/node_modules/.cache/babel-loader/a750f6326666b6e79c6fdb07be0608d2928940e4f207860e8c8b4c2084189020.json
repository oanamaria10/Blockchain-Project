{"ast":null,"code":"var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n  if (!parts) {\n    return null;\n  }\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n  if (!parts) {\n    return null;\n  }\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n  if (!parts) {\n    return null;\n  }\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n  if (!parts) {\n    return null;\n  }\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n  if (!parts) {\n    return null;\n  }\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\nexport { parse };","map":{"version":3,"names":["UNKNOWN_FUNCTION","parse","stackString","lines","split","reduce","stack","line","parseResult","parseChrome","parseWinjs","parseGecko","parseNode","parseJSC","push","chromeRe","chromeEvalRe","parts","exec","isNative","indexOf","isEval","submatch","file","methodName","arguments","lineNumber","column","winjsRe","geckoRe","geckoEvalRe","javaScriptCoreRe","nodeRe"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js"],"sourcesContent":["var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}