{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst mkdirp = require('../mkdirs').mkdirs;\nconst pathExists = require('../path-exists').pathExists;\nconst utimes = require('../util/utimes').utimesMillis;\nconst notExist = Symbol('notExist');\nfunction copy(src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts;\n    opts = {};\n  } else if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n  cb = cb || function () {};\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  }\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err);\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb);\n    return checkParentDir(destStat, src, dest, opts, cb);\n  });\n}\nfunction checkParentDir(destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest);\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err);\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb);\n    mkdirp(destParent, err => {\n      if (err) return cb(err);\n      return startCopy(destStat, src, dest, opts, cb);\n    });\n  });\n}\nfunction handleFilter(onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb);\n      return onInclude(src, dest, opts, cb);\n    }\n    return cb();\n  }, error => cb(error));\n}\nfunction startCopy(destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb);\n  return getStats(destStat, src, dest, opts, cb);\n}\nfunction getStats(destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat;\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb);\n  });\n}\nfunction onFile(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb);\n  return mayCopyFile(srcStat, src, dest, opts, cb);\n}\nfunction mayCopyFile(srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err);\n      return copyFile(srcStat, src, dest, opts, cb);\n    });\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`));\n  } else return cb();\n}\nfunction copyFile(srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err);\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb);\n    });\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb);\n}\nfunction copyFileFallback(srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src);\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, {\n      mode: srcStat.mode\n    });\n    ws.on('error', err => cb(err)).on('open', () => rs.pipe(ws)).once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb));\n  });\n}\nfunction setDestModeAndTimestamps(srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err);\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb);\n    }\n    return cb();\n  });\n}\nfunction onDir(srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb);\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`));\n  }\n  return copyDir(src, dest, opts, cb);\n}\nfunction mkDirAndCopy(srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err);\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err);\n      return fs.chmod(dest, srcStat.mode, cb);\n    });\n  });\n}\nfunction copyDir(src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err);\n    return copyDirItems(items, src, dest, opts, cb);\n  });\n}\nfunction copyDirItems(items, src, dest, opts, cb) {\n  const item = items.pop();\n  if (!item) return cb();\n  return copyDirItem(items, item, src, dest, opts, cb);\n}\nfunction copyDirItem(items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err);\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err);\n      return copyDirItems(items, src, dest, opts, cb);\n    });\n  });\n}\nfunction onLink(destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err);\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n    }\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb);\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb);\n          return cb(err);\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest);\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`));\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`));\n        }\n        return copyLink(resolvedSrc, dest, cb);\n      });\n    }\n  });\n}\nfunction copyLink(resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err);\n    return fs.symlink(resolvedSrc, dest, cb);\n  });\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir(src, dest) {\n  const srcArray = path.resolve(src).split(path.sep);\n  const destArray = path.resolve(dest).split(path.sep);\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true);\n}\nfunction checkStats(src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {\n          srcStat,\n          destStat: notExist\n        });\n        return cb(err);\n      }\n      return cb(null, {\n        srcStat,\n        destStat\n      });\n    });\n  });\n}\nfunction checkPaths(src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err);\n    const {\n      srcStat,\n      destStat\n    } = stats;\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'));\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`));\n    }\n    return cb(null, destStat);\n  });\n}\nmodule.exports = copy;","map":{"version":3,"names":["fs","require","path","mkdirp","mkdirs","pathExists","utimes","utimesMillis","notExist","Symbol","copy","src","dest","opts","cb","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPaths","err","destStat","handleFilter","checkParentDir","destParent","dirname","dirExists","startCopy","onInclude","Promise","resolve","then","include","error","getStats","stat","dereference","lstat","srcStat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlink","errorOnExist","Error","setDestModeAndTimestamps","copyFileFallback","rs","createReadStream","on","once","ws","createWriteStream","mode","pipe","chmod","atime","mtime","mkDirAndCopy","copyDir","mkdir","readdir","items","copyDirItems","item","pop","copyDirItem","srcItem","join","destItem","readlink","resolvedSrc","cwd","symlink","resolvedDest","code","isSrcSubdir","copyLink","srcArray","split","sep","destArray","reduce","acc","current","i","checkStats","stats","ino","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirp = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimes = require('../util/utimes').utimesMillis\n\nconst notExist = Symbol('notExist')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err)\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n    return checkParentDir(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirp(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb)\n      return onInclude(src, dest, opts, cb)\n    }\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err)\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb)\n    })\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src)\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })\n    ws.on('error', err => cb(err))\n      .on('open', () => rs.pipe(ws))\n      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))\n  })\n}\n\nfunction setDestModeAndTimestamps (srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb)\n    }\n    return cb()\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return fs.chmod(dest, srcStat.mode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err)\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {srcStat, destStat: notExist})\n        return cb(err)\n      }\n      return cb(null, {srcStat, destStat})\n    })\n  })\n}\n\nfunction checkPaths (src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const {srcStat, destStat} = stats\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    return cb(null, destStat)\n  })\n}\n\nmodule.exports = copy\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}