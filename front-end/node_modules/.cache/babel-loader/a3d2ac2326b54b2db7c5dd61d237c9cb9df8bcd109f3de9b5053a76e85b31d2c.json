{"ast":null,"code":"'use strict';\n\nvar Runnable = require('./runnable');\nvar utils = require('./utils');\nvar errors = require('./errors');\nvar createInvalidArgumentTypeError = errors.createInvalidArgumentTypeError;\nvar isString = utils.isString;\nconst {\n  MOCHA_ID_PROP_NAME\n} = utils.constants;\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @public\n * @class\n * @extends Runnable\n * @param {String} title - Test title (required)\n * @param {Function} [fn] - Test callback.  If omitted, the Test is considered \"pending\"\n */\nfunction Test(title, fn) {\n  if (!isString(title)) {\n    throw createInvalidArgumentTypeError('Test argument \"title\" should be a string. Received type \"' + typeof title + '\"', 'title', 'string');\n  }\n  this.type = 'test';\n  Runnable.call(this, title, fn);\n  this.reset();\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\nutils.inherits(Test, Runnable);\n\n/**\n * Resets the state initially or for a next run.\n */\nTest.prototype.reset = function () {\n  Runnable.prototype.reset.call(this);\n  this.pending = !this.fn;\n  delete this.state;\n};\n\n/**\n * Set or get retried test\n *\n * @private\n */\nTest.prototype.retriedTest = function (n) {\n  if (!arguments.length) {\n    return this._retriedTest;\n  }\n  this._retriedTest = n;\n};\n\n/**\n * Add test to the list of tests marked `only`.\n *\n * @private\n */\nTest.prototype.markOnly = function () {\n  this.parent.appendOnlyTest(this);\n};\nTest.prototype.clone = function () {\n  var test = new Test(this.title, this.fn);\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.retries(this.retries());\n  test.currentRetry(this.currentRetry());\n  test.retriedTest(this.retriedTest() || this);\n  test.globals(this.globals());\n  test.parent = this.parent;\n  test.file = this.file;\n  test.ctx = this.ctx;\n  return test;\n};\n\n/**\n * Returns an minimal object suitable for transmission over IPC.\n * Functions are represented by keys beginning with `$$`.\n * @private\n * @returns {Object}\n */\nTest.prototype.serialize = function serialize() {\n  return {\n    $$currentRetry: this._currentRetry,\n    $$fullTitle: this.fullTitle(),\n    $$isPending: Boolean(this.pending),\n    $$retriedTest: this._retriedTest || null,\n    $$slow: this._slow,\n    $$titlePath: this.titlePath(),\n    body: this.body,\n    duration: this.duration,\n    err: this.err,\n    parent: {\n      $$fullTitle: this.parent.fullTitle(),\n      [MOCHA_ID_PROP_NAME]: this.parent.id\n    },\n    speed: this.speed,\n    state: this.state,\n    title: this.title,\n    type: this.type,\n    file: this.file,\n    [MOCHA_ID_PROP_NAME]: this.id\n  };\n};","map":{"version":3,"names":["Runnable","require","utils","errors","createInvalidArgumentTypeError","isString","MOCHA_ID_PROP_NAME","constants","module","exports","Test","title","fn","type","call","reset","inherits","prototype","pending","state","retriedTest","n","arguments","length","_retriedTest","markOnly","parent","appendOnlyTest","clone","test","timeout","slow","retries","currentRetry","globals","file","ctx","serialize","$$currentRetry","_currentRetry","$$fullTitle","fullTitle","$$isPending","Boolean","$$retriedTest","$$slow","_slow","$$titlePath","titlePath","body","duration","err","id","speed"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/test.js"],"sourcesContent":["'use strict';\nvar Runnable = require('./runnable');\nvar utils = require('./utils');\nvar errors = require('./errors');\nvar createInvalidArgumentTypeError = errors.createInvalidArgumentTypeError;\nvar isString = utils.isString;\n\nconst {MOCHA_ID_PROP_NAME} = utils.constants;\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @public\n * @class\n * @extends Runnable\n * @param {String} title - Test title (required)\n * @param {Function} [fn] - Test callback.  If omitted, the Test is considered \"pending\"\n */\nfunction Test(title, fn) {\n  if (!isString(title)) {\n    throw createInvalidArgumentTypeError(\n      'Test argument \"title\" should be a string. Received type \"' +\n        typeof title +\n        '\"',\n      'title',\n      'string'\n    );\n  }\n  this.type = 'test';\n  Runnable.call(this, title, fn);\n  this.reset();\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\nutils.inherits(Test, Runnable);\n\n/**\n * Resets the state initially or for a next run.\n */\nTest.prototype.reset = function () {\n  Runnable.prototype.reset.call(this);\n  this.pending = !this.fn;\n  delete this.state;\n};\n\n/**\n * Set or get retried test\n *\n * @private\n */\nTest.prototype.retriedTest = function (n) {\n  if (!arguments.length) {\n    return this._retriedTest;\n  }\n  this._retriedTest = n;\n};\n\n/**\n * Add test to the list of tests marked `only`.\n *\n * @private\n */\nTest.prototype.markOnly = function () {\n  this.parent.appendOnlyTest(this);\n};\n\nTest.prototype.clone = function () {\n  var test = new Test(this.title, this.fn);\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.retries(this.retries());\n  test.currentRetry(this.currentRetry());\n  test.retriedTest(this.retriedTest() || this);\n  test.globals(this.globals());\n  test.parent = this.parent;\n  test.file = this.file;\n  test.ctx = this.ctx;\n  return test;\n};\n\n/**\n * Returns an minimal object suitable for transmission over IPC.\n * Functions are represented by keys beginning with `$$`.\n * @private\n * @returns {Object}\n */\nTest.prototype.serialize = function serialize() {\n  return {\n    $$currentRetry: this._currentRetry,\n    $$fullTitle: this.fullTitle(),\n    $$isPending: Boolean(this.pending),\n    $$retriedTest: this._retriedTest || null,\n    $$slow: this._slow,\n    $$titlePath: this.titlePath(),\n    body: this.body,\n    duration: this.duration,\n    err: this.err,\n    parent: {\n      $$fullTitle: this.parent.fullTitle(),\n      [MOCHA_ID_PROP_NAME]: this.parent.id\n    },\n    speed: this.speed,\n    state: this.state,\n    title: this.title,\n    type: this.type,\n    file: this.file,\n    [MOCHA_ID_PROP_NAME]: this.id\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}