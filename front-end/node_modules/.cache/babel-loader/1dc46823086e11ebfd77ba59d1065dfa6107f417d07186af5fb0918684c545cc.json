{"ast":null,"code":"import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key) {\n  let pubkey;\n  if (typeof key === \"string\") {\n    pubkey = SigningKey.computePublicKey(key, false);\n  } else {\n    pubkey = key.publicKey;\n  }\n  return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest, signature) {\n  return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}","map":{"version":3,"names":["getAddress","keccak256","SigningKey","computeAddress","key","pubkey","computePublicKey","publicKey","substring","recoverAddress","digest","signature","recoverPublicKey"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/node_modules/ethers/lib.esm/transaction/address.js"],"sourcesContent":["import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key) {\n    let pubkey;\n    if (typeof (key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n//# sourceMappingURL=address.js.map"],"mappings":"AAAA,SAASA,UAAU,QAAQ,qBAAqB;AAChD,SAASC,SAAS,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,GAAG,EAAE;EAChC,IAAIC,MAAM;EACV,IAAI,OAAQD,GAAI,KAAK,QAAQ,EAAE;IAC3BC,MAAM,GAAGH,UAAU,CAACI,gBAAgB,CAACF,GAAG,EAAE,KAAK,CAAC;EACpD,CAAC,MACI;IACDC,MAAM,GAAGD,GAAG,CAACG,SAAS;EAC1B;EACA,OAAOP,UAAU,CAACC,SAAS,CAAC,IAAI,GAAGI,MAAM,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAACA,SAAS,CAAC,EAAE,CAAC,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,MAAM,EAAEC,SAAS,EAAE;EAC9C,OAAOR,cAAc,CAACD,UAAU,CAACU,gBAAgB,CAACF,MAAM,EAAEC,SAAS,CAAC,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}