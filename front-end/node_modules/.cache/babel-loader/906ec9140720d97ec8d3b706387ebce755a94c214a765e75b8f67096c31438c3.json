{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oana\\\\Desktop\\\\Blockchain\\\\Blockchain-Project\\\\front-end\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [accountAddress, setAccountAddress] = useState(null);\n  const [accountBalance, setAccountBalance] = useState(null);\n  async function connectWallet() {\n    if (!window.ethereum) {\n      setErrorMessage(\"Please install MetaMask!\");\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      const balance = await provider.getBalance(address);\n      const formattedBalance = ethers.utils.formatEther(balance);\n      setAccountAddress(address);\n      setAccountBalance(formattedBalance);\n      onLogin(true, address, formattedBalance);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n      setErrorMessage(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!accountAddress ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect with MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", accountAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", accountBalance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), errorMessage && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"65q8Mlz7+qnTVPHz/lO/Upx8aRo=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onLogin","_s","errorMessage","setErrorMessage","accountAddress","setAccountAddress","accountBalance","setAccountBalance","connectWallet","window","ethereum","provider","providers","Web3Provider","send","signer","getSigner","address","getAddress","balance","getBalance","formattedBalance","utils","formatEther","error","console","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/front-end/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [accountAddress, setAccountAddress] = useState(null);\r\n    const [accountBalance, setAccountBalance] = useState(null);\r\n\r\n    async function connectWallet() {\r\n        if (!window.ethereum) {\r\n            setErrorMessage(\"Please install MetaMask!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            await provider.send(\"eth_requestAccounts\", []);\r\n\r\n            const signer = provider.getSigner();\r\n            const address = await signer.getAddress();\r\n            const balance = await provider.getBalance(address);\r\n\r\n            const formattedBalance = ethers.utils.formatEther(balance);\r\n\r\n            setAccountAddress(address);\r\n            setAccountBalance(formattedBalance);\r\n\r\n            onLogin(true, address, formattedBalance);\r\n        } catch (error) {\r\n            console.error(\"Error connecting to wallet:\", error);\r\n            setErrorMessage(error.message);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {!accountAddress ? (\r\n                <button onClick={connectWallet}>Connect with MetaMask</button>\r\n            ) : (\r\n                <>\r\n                    <h3>Address: {accountAddress}</h3>\r\n                    <h3>Balance: {accountBalance} ETH</h3>\r\n                </>\r\n            )}\r\n            {errorMessage && <h3 style={{ color: \"red\" }}>{errorMessage}</h3>}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1D,eAAee,aAAaA,CAAA,EAAG;IAC3B,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MAClBP,eAAe,CAAC,0BAA0B,CAAC;MAC3C;IACJ;IAEA,IAAI;MACA,MAAMQ,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMC,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAE9C,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MACnC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzC,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,UAAU,CAACH,OAAO,CAAC;MAElD,MAAMI,gBAAgB,GAAG3B,MAAM,CAAC4B,KAAK,CAACC,WAAW,CAACJ,OAAO,CAAC;MAE1Dd,iBAAiB,CAACY,OAAO,CAAC;MAC1BV,iBAAiB,CAACc,gBAAgB,CAAC;MAEnCrB,OAAO,CAAC,IAAI,EAAEiB,OAAO,EAAEI,gBAAgB,CAAC;IAC5C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDrB,eAAe,CAACqB,KAAK,CAACE,OAAO,CAAC;IAClC;EACJ;EAEA,oBACI9B,OAAA;IAAA+B,QAAA,GACK,CAACvB,cAAc,gBACZR,OAAA;MAAQgC,OAAO,EAAEpB,aAAc;MAAAmB,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE9DpC,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,GAAI,WAAS,EAACvB,cAAc;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClCpC,OAAA;QAAA+B,QAAA,GAAI,WAAS,EAACrB,cAAc,EAAC,MAAI;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACxC,CACL,EACA9B,YAAY,iBAAIN,OAAA;MAAIqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEzB;IAAY;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA5CIF,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}