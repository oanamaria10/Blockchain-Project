{"ast":null,"code":"'use strict';\n\n// We include a version number for the Dispatcher API. In case of breaking changes,\n// this version number must be increased to avoid conflicts.\nconst globalDispatcher = Symbol.for('undici.globalDispatcher.1');\nconst {\n  InvalidArgumentError\n} = require('./core/errors');\nconst Agent = require('./agent');\nif (getGlobalDispatcher() === undefined) {\n  setGlobalDispatcher(new Agent());\n}\nfunction setGlobalDispatcher(agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent');\n  }\n  Object.defineProperty(globalThis, globalDispatcher, {\n    value: agent,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  });\n}\nfunction getGlobalDispatcher() {\n  return globalThis[globalDispatcher];\n}\nmodule.exports = {\n  setGlobalDispatcher,\n  getGlobalDispatcher\n};","map":{"version":3,"names":["globalDispatcher","Symbol","for","InvalidArgumentError","require","Agent","getGlobalDispatcher","undefined","setGlobalDispatcher","agent","dispatch","Object","defineProperty","globalThis","value","writable","enumerable","configurable","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/undici/lib/global.js"],"sourcesContent":["'use strict'\n\n// We include a version number for the Dispatcher API. In case of breaking changes,\n// this version number must be increased to avoid conflicts.\nconst globalDispatcher = Symbol.for('undici.globalDispatcher.1')\nconst { InvalidArgumentError } = require('./core/errors')\nconst Agent = require('./agent')\n\nif (getGlobalDispatcher() === undefined) {\n  setGlobalDispatcher(new Agent())\n}\n\nfunction setGlobalDispatcher (agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent')\n  }\n  Object.defineProperty(globalThis, globalDispatcher, {\n    value: agent,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nfunction getGlobalDispatcher () {\n  return globalThis[globalDispatcher]\n}\n\nmodule.exports = {\n  setGlobalDispatcher,\n  getGlobalDispatcher\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA,MAAMA,gBAAgB,GAAGC,MAAM,CAACC,GAAG,CAAC,2BAA2B,CAAC;AAChE,MAAM;EAAEC;AAAqB,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACzD,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAEhC,IAAIE,mBAAmB,CAAC,CAAC,KAAKC,SAAS,EAAE;EACvCC,mBAAmB,CAAC,IAAIH,KAAK,CAAC,CAAC,CAAC;AAClC;AAEA,SAASG,mBAAmBA,CAAEC,KAAK,EAAE;EACnC,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,CAACC,QAAQ,KAAK,UAAU,EAAE;IAClD,MAAM,IAAIP,oBAAoB,CAAC,qCAAqC,CAAC;EACvE;EACAQ,MAAM,CAACC,cAAc,CAACC,UAAU,EAAEb,gBAAgB,EAAE;IAClDc,KAAK,EAAEL,KAAK;IACZM,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ;AAEA,SAASX,mBAAmBA,CAAA,EAAI;EAC9B,OAAOO,UAAU,CAACb,gBAAgB,CAAC;AACrC;AAEAkB,MAAM,CAACC,OAAO,GAAG;EACfX,mBAAmB;EACnBF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}