{"ast":null,"code":"'use strict';\n\nvar BufferList = require('bl/BufferList.js');\nvar rabinWasm = require('rabin-wasm');\nvar errCode = require('err-code');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errCode__default[\"default\"](new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errCode__default[\"default\"](new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk;\n  }\n}\nasync function* rabin(source, options) {\n  const r = await rabinWasm.create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList__default[\"default\"]();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}\nmodule.exports = rabinChunker;","map":{"version":3,"names":["BufferList","require","rabinWasm","errCode","_interopDefaultLegacy","e","BufferList__default","errCode__default","rabinChunker","source","options","min","max","avg","minChunkSize","maxChunkSize","avgChunkSize","Error","sizepow","Math","floor","log2","chunk","rabin","bits","window","polynomial","r","create","buffers","append","sizes","fingerprint","i","length","size","buf","slice","consume","module","exports"],"sources":["C:/FACULTATE/Proiect/node_modules/ipfs-unixfs-importer/cjs/src/chunker/rabin.js"],"sourcesContent":["'use strict';\n\nvar BufferList = require('bl/BufferList.js');\nvar rabinWasm = require('rabin-wasm');\nvar errCode = require('err-code');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar BufferList__default = /*#__PURE__*/_interopDefaultLegacy(BufferList);\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errCode__default[\"default\"](new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errCode__default[\"default\"](new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nasync function* rabin(source, options) {\n  const r = await rabinWasm.create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList__default[\"default\"]();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}\n\nmodule.exports = rabinChunker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}