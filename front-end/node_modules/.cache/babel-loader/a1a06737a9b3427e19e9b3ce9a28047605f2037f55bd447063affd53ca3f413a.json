{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf, SyncPromise } from '@sentry/utils';\nimport { getExceptionFromError } from '../parsers';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */function () {\n  /**\n   * @inheritDoc\n   */\n  function LinkedErrors(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event, hint) {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        var handler = self._handler && self._handler.bind(self);\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype._handler = function (event, hint) {\n    var _this = this;\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return SyncPromise.resolve(event);\n    }\n    return new SyncPromise(function (resolve) {\n      _this._walkErrorTree(hint.originalException, _this._key).then(function (linkedErrors) {\n        if (event && event.exception && event.exception.values) {\n          event.exception.values = __spread(linkedErrors, event.exception.values);\n        }\n        resolve(event);\n      }).then(null, function () {\n        resolve(event);\n      });\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n    var _this = this;\n    if (stack === void 0) {\n      stack = [];\n    }\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return SyncPromise.resolve(stack);\n    }\n    return new SyncPromise(function (resolve, reject) {\n      getExceptionFromError(error[key]).then(function (exception) {\n        _this._walkErrorTree(error[key], key, __spread([exception], stack)).then(resolve).then(null, function () {\n          reject();\n        });\n      }).then(null, function () {\n        reject();\n      });\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n  LinkedErrors.id = 'LinkedErrors';\n  return LinkedErrors;\n}();\nexport { LinkedErrors };","map":{"version":3,"names":["addGlobalEventProcessor","getCurrentHub","isInstanceOf","SyncPromise","getExceptionFromError","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","options","name","id","_key","key","_limit","limit","prototype","setupOnce","event","hint","self","getIntegration","handler","_handler","bind","_this","exception","values","originalException","Error","resolve","_walkErrorTree","then","linkedErrors","__spread","error","stack","length","reject"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@sentry\\node\\src\\integrations\\linkederrors.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf, SyncPromise } from '@sentry/utils';\n\nimport { getExceptionFromError } from '../parsers';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        const handler = self._handler && self._handler.bind(self);\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): PromiseLike<Event> {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return SyncPromise.resolve(event);\n    }\n\n    return new SyncPromise<Event>(resolve => {\n      this._walkErrorTree(hint.originalException as Error, this._key)\n        .then((linkedErrors: Exception[]) => {\n          if (event && event.exception && event.exception.values) {\n            event.exception.values = [...linkedErrors, ...event.exception.values];\n          }\n          resolve(event);\n        })\n        .then(null, () => {\n          resolve(event);\n        });\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): PromiseLike<Exception[]> {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return SyncPromise.resolve(stack);\n    }\n    return new SyncPromise<Exception[]>((resolve, reject) => {\n      getExceptionFromError(error[key])\n        .then((exception: Exception) => {\n          this._walkErrorTree(error[key], key, [exception, ...stack])\n            .then(resolve)\n            .then(null, () => {\n              reject();\n            });\n        })\n        .then(null, () => {\n          reject();\n        });\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}