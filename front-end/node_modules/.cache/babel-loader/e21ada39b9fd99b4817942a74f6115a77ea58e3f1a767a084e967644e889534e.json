{"ast":null,"code":"import { capability, DID, struct, ok, Schema } from '@ucanto/validator';\nimport { AccountDID, equalWith, and, equal } from './utils.js';\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nexport const ProviderDID = DID.match({\n  method: 'web'\n});\n\n/**\n * Capability can be invoked by a provider to get information about a subscription.\n */\nexport const get = capability({\n  can: 'subscription/get',\n  with: ProviderDID,\n  nb: struct({\n    subscription: Schema.string()\n  }),\n  derives: (child, parent) => {\n    return and(equalWith(child, parent)) || and(equal(child.nb.subscription, parent.nb.subscription, 'consumer')) || ok({});\n  }\n});\n\n/**\n * Capability can be invoked to retrieve the list of subscriptions for an\n * account.\n */\nexport const list = capability({\n  can: 'subscription/list',\n  with: AccountDID,\n  derives: equalWith\n});","map":{"version":3,"names":["capability","DID","struct","ok","Schema","AccountDID","equalWith","and","equal","ProviderDID","match","method","get","can","with","nb","subscription","string","derives","child","parent","list"],"sources":["C:/FACULTATE/Proiect/node_modules/@web3-storage/capabilities/src/subscription.js"],"sourcesContent":["import { capability, DID, struct, ok, Schema } from '@ucanto/validator'\nimport { AccountDID, equalWith, and, equal } from './utils.js'\n\n// e.g. did:web:web3.storage or did:web:staging.web3.storage\nexport const ProviderDID = DID.match({ method: 'web' })\n\n/**\n * Capability can be invoked by a provider to get information about a subscription.\n */\nexport const get = capability({\n  can: 'subscription/get',\n  with: ProviderDID,\n  nb: struct({\n    subscription: Schema.string(),\n  }),\n  derives: (child, parent) => {\n    return (\n      and(equalWith(child, parent)) ||\n      and(equal(child.nb.subscription, parent.nb.subscription, 'consumer')) ||\n      ok({})\n    )\n  },\n})\n\n/**\n * Capability can be invoked to retrieve the list of subscriptions for an\n * account.\n */\nexport const list = capability({\n  can: 'subscription/list',\n  with: AccountDID,\n  derives: equalWith,\n})\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,EAAE,EAAEC,MAAM,QAAQ,mBAAmB;AACvE,SAASC,UAAU,EAAEC,SAAS,EAAEC,GAAG,EAAEC,KAAK,QAAQ,YAAY;;AAE9D;AACA,OAAO,MAAMC,WAAW,GAAGR,GAAG,CAACS,KAAK,CAAC;EAAEC,MAAM,EAAE;AAAM,CAAC,CAAC;;AAEvD;AACA;AACA;AACA,OAAO,MAAMC,GAAG,GAAGZ,UAAU,CAAC;EAC5Ba,GAAG,EAAE,kBAAkB;EACvBC,IAAI,EAAEL,WAAW;EACjBM,EAAE,EAAEb,MAAM,CAAC;IACTc,YAAY,EAAEZ,MAAM,CAACa,MAAM,CAAC;EAC9B,CAAC,CAAC;EACFC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC1B,OACEb,GAAG,CAACD,SAAS,CAACa,KAAK,EAAEC,MAAM,CAAC,CAAC,IAC7Bb,GAAG,CAACC,KAAK,CAACW,KAAK,CAACJ,EAAE,CAACC,YAAY,EAAEI,MAAM,CAACL,EAAE,CAACC,YAAY,EAAE,UAAU,CAAC,CAAC,IACrEb,EAAE,CAAC,CAAC,CAAC,CAAC;EAEV;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,OAAO,MAAMkB,IAAI,GAAGrB,UAAU,CAAC;EAC7Ba,GAAG,EAAE,mBAAmB;EACxBC,IAAI,EAAET,UAAU;EAChBa,OAAO,EAAEZ;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}