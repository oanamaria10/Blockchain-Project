{"ast":null,"code":"/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var bindReporter = function (callback, metric, po, observeAllUpdates) {\n  var prevValue;\n  return function () {\n    if (po && metric.isFinal) {\n      po.disconnect();\n    }\n    if (metric.value >= 0) {\n      if (observeAllUpdates || metric.isFinal || document.visibilityState === 'hidden') {\n        metric.delta = metric.value - (prevValue || 0);\n        // Report the metric if there's a non-zero delta, if the metric is\n        // final, or if no previous value exists (which can happen in the case\n        // of the document becoming hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || metric.isFinal || prevValue === undefined) {\n          callback(metric);\n          prevValue = metric.value;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["bindReporter","callback","metric","po","observeAllUpdates","prevValue","isFinal","disconnect","value","document","visibilityState","delta","undefined"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\@sentry\\tracing\\src\\browser\\web-vitals\\lib\\bindReporter.ts"],"sourcesContent":["/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Metric, ReportHandler } from '../types';\n\nexport const bindReporter = (\n  callback: ReportHandler,\n  metric: Metric,\n  po: PerformanceObserver | undefined,\n  observeAllUpdates?: boolean,\n): (() => void) => {\n  let prevValue: number;\n  return () => {\n    if (po && metric.isFinal) {\n      po.disconnect();\n    }\n    if (metric.value >= 0) {\n      if (observeAllUpdates || metric.isFinal || document.visibilityState === 'hidden') {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta, if the metric is\n        // final, or if no previous value exists (which can happen in the case\n        // of the document becoming hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || metric.isFinal || prevValue === undefined) {\n          callback(metric);\n          prevValue = metric.value;\n        }\n      }\n    }\n  };\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMA,YAAY,GAAG,SAAAA,CAC1BC,QAAuB,EACvBC,MAAc,EACdC,EAAmC,EACnCC,iBAA2B;EAE3B,IAAIC,SAAiB;EACrB,OAAO;IACL,IAAIF,EAAE,IAAID,MAAM,CAACI,OAAO,EAAE;MACxBH,EAAE,CAACI,UAAU,EAAE;;IAEjB,IAAIL,MAAM,CAACM,KAAK,IAAI,CAAC,EAAE;MACrB,IAAIJ,iBAAiB,IAAIF,MAAM,CAACI,OAAO,IAAIG,QAAQ,CAACC,eAAe,KAAK,QAAQ,EAAE;QAChFR,MAAM,CAACS,KAAK,GAAGT,MAAM,CAACM,KAAK,IAAIH,SAAS,IAAI,CAAC,CAAC;QAE9C;QACA;QACA;QACA;QACA,IAAIH,MAAM,CAACS,KAAK,IAAIT,MAAM,CAACI,OAAO,IAAID,SAAS,KAAKO,SAAS,EAAE;UAC7DX,QAAQ,CAACC,MAAM,CAAC;UAChBG,SAAS,GAAGH,MAAM,CAACM,KAAK;;;;EAIhC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}