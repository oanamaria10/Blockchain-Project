{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oana\\\\Desktop\\\\Blockchain\\\\Blockchain-Project\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport campaignAbi from './Campaign.json';\nimport donationTokenAbi from './DonationToken.json';\nimport proposalAbi from './Proposal.json';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CampaignInteraction() {\n  _s();\n  const [accountAddress, setAccountAddress] = useState('');\n  const [accountBalance, setAccountBalance] = useState('');\n  const [donationAmount, setDonationAmount] = useState('');\n  const [targetAmount, setTargetAmount] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalDonations, setTotalDonations] = useState(0);\n  const [provider, setProvider] = useState(null);\n  const [signerIndex, setSignerIndex] = useState(null);\n  const [isTargetReached, setIsTargetReached] = useState(false);\n  const [campaignContract, setCampaignContract] = useState(null);\n  const [donationTokenContract, setDonationTokenContract] = useState(null);\n  const [proposalContract, setProposalContract] = useState(null);\n  const [accountData, setAccountData] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isContractsLoaded, setIsContractsLoaded] = useState(false);\n  const [showThankYouPopup, setShowThankYouPopup] = useState(false);\n  const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [campaignDescription, setCampaignDescription] = useState(null);\n  const [descriptions, setDescriptions] = useState([]);\n  const [showCampaignInfoPopup, setShowCampaignInfoPopup] = useState(false);\n  const [showCampaignCausesPopup, setShowCampaignCausesPopup] = useState(false);\n  const [showVotePopup, setShowVotePopup] = useState(false);\n  const [proposals, setProposals] = useState([]);\n  const [proposalsDetails, setProposalsDetails] = useState([]);\n  const [currentProposalIndex, setCurrentProposalIndex] = useState(0);\n  const [donationPercentages, setDonationPercentages] = useState([]);\n  const [tokenBalance, setTokenBalance] = useState(0);\n  const [humanitarianAddresses, setHumanitarianAddresses] = useState([]);\n  const [isActive, setIsActive] = useState(true);\n  const [fundsDistributed, setFundsDistributed] = useState(false);\n  const [userVotes, setUserVotes] = useState({});\n  const [userTokens, setUserTokens] = useState([]);\n  const [selectedTokenId, setSelectedTokenId] = useState(null);\n  async function fetchUserNFTs() {\n    if (!donationTokenContract || !accountAddress) return;\n    try {\n      const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\n      setUserTokens(tokens.map(tokenId => tokenId.toNumber())); // Convertim BigNumber în numere normale\n    } catch (error) {\n      console.error(\"Error fetching user NFTs:\", error);\n      setUserTokens([]);\n    }\n  }\n  useEffect(() => {\n    if (donationTokenContract && accountAddress) {\n      fetchUserNFTs();\n    }\n  }, [donationTokenContract, accountAddress]);\n  useEffect(() => {\n    async function fetchHumanitarianAddresses() {\n      if (!proposalContract) return;\n      let addresses = [];\n      for (let i = 0; i < proposals.length; i++) {\n        const beneficiary = await proposalContract.getProposalBeneficiary(i);\n        addresses.push(beneficiary.toLowerCase());\n      }\n      setHumanitarianAddresses(addresses);\n    }\n    fetchHumanitarianAddresses();\n  }, [proposalContract, proposals]);\n  const fetchBalance = async address => {\n    if (window.ethereum) {\n      try {\n        const balance = await window.ethereum.request({\n          method: 'eth_getBalance',\n          params: [address, 'latest']\n        });\n        setAccountBalance(ethers.utils.formatEther(balance));\n      } catch (error) {\n        console.error(\"Error fetching balance: \", error);\n      }\n    }\n  };\n  async function fetchTokenBalance() {\n    if (donationTokenContract && accountAddress) {\n      const balance = await donationTokenContract.balanceOf(accountAddress);\n      setTokenBalance(ethers.utils.formatEther(balance));\n    }\n  }\n  useEffect(() => {\n    async function initializeContracts() {\n      if (provider) {\n        const signer = provider.getSigner();\n        try {\n          const campaignAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\n          const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\n          setCampaignContract(campaign);\n          const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n          const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\n          setDonationTokenContract(donationToken);\n          const proposalAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\n          const proposal = new ethers.Contract(proposalAddress, proposalAbi.abi, signer);\n          setProposalContract(proposal);\n          const owner = await campaign.owner();\n          setIsOwner((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) === owner.toLowerCase());\n          setIsContractsLoaded(true);\n        } catch (error) {\n          alert('Error initializing contracts: ' + error.message);\n        }\n      }\n    }\n    initializeContracts();\n  }, [provider, accountAddress]);\n  useEffect(() => {\n    async function fetchCampaignData() {\n      if (campaignContract) {\n        try {\n          const currentTotalDonations = await campaignContract.totalDonations();\n          const currentTargetAmount = await campaignContract.targetAmount();\n          const formattedDonations = ethers.utils.formatEther(currentTotalDonations);\n          const formattedTarget = ethers.utils.formatEther(currentTargetAmount);\n          setTotalDonations(formattedDonations);\n          setTargetAmount(formattedTarget);\n          const progress = parseFloat(formattedDonations) * 100 / parseFloat(formattedTarget);\n          setProgress(progress || 0);\n          setIsTargetReached(parseFloat(formattedDonations) >= parseFloat(formattedTarget));\n        } catch (error) {\n          alert('Error fetching campaign data: ' + error.message);\n        }\n      }\n    }\n    fetchCampaignData();\n  }, [campaignContract]);\n  async function handleLogin(isLoggedIn, address, balance) {\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed!\");\n        return;\n      }\n      setIsLoggedIn(isLoggedIn);\n      setAccountAddress(address);\n      setAccountBalance(balance);\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      alert(\"Logged in successfully.\");\n    } catch (error) {\n      alert('Error during login: ' + error.message);\n    }\n  }\n  async function handleLogout() {\n    try {\n      setIsLoggedIn(false);\n      setAccountAddress(null);\n      setAccountBalance(null);\n      setProvider(null);\n      setCampaignContract(null);\n      setDonationTokenContract(null);\n      setProposalContract(null);\n      setTotalDonations(0);\n      setTargetAmount('');\n      setProgress(0);\n      setIsTargetReached(false);\n      setIsContractsLoaded(false);\n      setIsOwner(false);\n      setUserTokens([]);\n      setUserVotes({});\n      setDonationPercentages([]);\n      alert(\"✅ Logged out successfully.\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n  }\n  async function donate() {\n    try {\n      if (!isContractsLoaded || !campaignContract) {\n        alert(\"Contracts are still loading. Please wait.\");\n        return;\n      }\n      if (!ethers.utils.isAddress(accountAddress)) {\n        alert(\"Invalid account address.\");\n        return;\n      }\n      if (!donationAmount || parseFloat(donationAmount) <= 0) {\n        alert(\"Please enter a valid donation amount.\");\n        return;\n      }\n      const donationValue = ethers.utils.parseEther(donationAmount);\n\n      // Check if the owner is trying to make a donation\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) === contractOwner.toLowerCase()) {\n        alert(\"The owner cannot make donations.\");\n        return;\n      }\n\n      // **Estimate Gas Cost**\n      const estimatedGas = await campaignContract.estimateGas.donate({\n        value: donationValue\n      });\n      const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer +20%\n\n      console.log(\"Estimated Gas Cost:\", ethers.utils.formatUnits(estimatedGas, \"gwei\"));\n\n      // Send the donation transaction\n      const donationTx = await campaignContract.donate({\n        value: donationValue,\n        gasLimit: gasLimit\n      });\n      console.log(\"Transaction sent:\", donationTx.hash);\n\n      // Wait for the transaction to be confirmed\n      await donationTx.wait();\n      console.log(\"Transaction confirmed:\", donationTx.hash);\n      fetchTokenBalance();\n      fetchDonationPercentages();\n      setAccountBalance(ethers.utils.formatEther(await provider.getBalance(accountAddress)));\n      setTotalDonations(ethers.utils.formatEther(await campaignContract.totalDonations()));\n      setTargetAmount(ethers.utils.formatEther(await campaignContract.targetAmount()));\n      setDonationAmount(\"\");\n      setShowThankYouPopup(true);\n      fetchProposals();\n      console.log(\"Donation successful!\");\n    } catch (error) {\n      console.error(\"Error during donation:\", error);\n      if (error.code === \"INSUFFICIENT_FUNDS\") {\n        alert(\"❌ Insufficient funds to complete this transaction.\");\n      } else if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\n        alert(\"⚠️ Transaction might fail. Please try with a different amount.\");\n      } else {\n        alert(\"⚠️ An unexpected error occurred. Please try again later.\");\n      }\n    }\n  }\n  async function setCampaignTarget() {\n    try {\n      if (!campaignContract) {\n        alert(\"❌ Campaign contract is not initialized.\");\n        console.error(\"❌ Error: campaignContract is undefined.\");\n        return;\n      }\n      if (parseFloat(targetAmount) <= 0) {\n        alert(\"❌ Please enter a valid target amount.\");\n        return;\n      }\n\n      // ✅ Debugging: Afișează contractul în consolă\n      console.log(\"✅ Campaign Contract Instance:\", campaignContract);\n\n      // ✅ Verifică dacă metoda `owner()` există în ABI\n      if (!campaignContract.owner()) {\n        alert(\"❌ owner() method is not defined in the contract.\");\n        console.error(\"❌ Error: owner() method not found in campaignContract.\");\n        return;\n      }\n      const campaignOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== campaignOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can set the target amount.\");\n        return;\n      }\n\n      // Convertim targetAmount la BigNumber pentru Ethereum\n      const targetValue = ethers.utils.parseEther(targetAmount);\n\n      // Obține valoarea actuală a totalDonations\n      const currentTotalDonations = await campaignContractgetTotalDonations();\n      const currentTotalDonationsBN = ethers.BigNumber.from(currentTotalDonations);\n      console.log(\"New Target Value:\", targetValue.toString());\n      console.log(\"Current Total Donations:\", currentTotalDonationsBN.toString());\n\n      // Verificăm dacă targetValue este mai mic sau egal cu totalDonations\n      if (targetValue.lte(currentTotalDonationsBN)) {\n        alert(\"❌ Target amount must be greater than total donations.\");\n        return;\n      }\n\n      // Estimare manuală a gas-ului cu un buffer de 20%\n      let estimatedGas;\n      try {\n        estimatedGas = await campaignContract.setTargetAmount(targetValue).estimateGas({\n          from: accountAddress\n        });\n      } catch (gasError) {\n        console.error(\"⛽ Gas estimation failed:\", gasError);\n        alert(\"⚠️ Gas estimation failed. Please check the console for details.\");\n        return;\n      }\n      const gasLimit = estimatedGas.mul(120).div(100); // Adăugăm un buffer de 20%\n\n      // Executăm tranzacția\n      const setTargetTx = await campaignContract.setTargetAmount(targetValue).send({\n        from: accountAddress,\n        gas: gasLimit.toString()\n      });\n      await setTargetTx.wait();\n      alert(\"✅ Target amount set successfully!\");\n\n      // Actualizăm UI-ul cu noul target\n      setTargetAmount(ethers.utils.formatEther(targetValue));\n    } catch (error) {\n      console.error(\"❌ Error setting campaign target:\", error);\n      alert(\"❌ An error occurred while setting the target amount. Check console for details.\");\n    }\n  }\n  async function fetchProposals() {\n    try {\n      if (!proposalContract) {\n        console.warn(\"Proposal contract not loaded.\");\n        return;\n      }\n      const fundsDistributed = await campaignContract.fundsDistributed();\n      if (!fundsDistributed) {\n        console.log(\"Funds have not been distributed yet.\");\n        return;\n      }\n      const fetchedProposals = await proposalContract.getProposals();\n      const formattedProposals = fetchedProposals.map((proposal, index) => ({\n        id: proposal.id.toNumber(),\n        voteCount: proposal.voteCount.toNumber()\n      }));\n      const proposalsDetails = [{\n        id: 1,\n        descriptionUrl: 'https://bafybeig7eytlutb4bhjt7hp35py6uyhdbdeqayr2dzddkbrjjd5eoon4im.ipfs.w3s.link/proposal1.txt',\n        imageUrl: 'https://bafybeidemydfmxzi22eitoto6ypgdbvythlpwxp7esnydjedj734t5p3w4.ipfs.w3s.link/proposal1.webp'\n      }, {\n        id: 2,\n        descriptionUrl: 'https://bafybeigkod6hknxfrfs4yvjkwq6yqkly2ug3t47knigd4senza5y2arivm.ipfs.w3s.link/proposal2.txt',\n        imageUrl: 'https://bafybeiccplvm3a4s4ullyli65y3222bhwiia25b3xjvtmbk57whcwp6rgm.ipfs.w3s.link/proposal2.jpeg'\n      }, {\n        id: 3,\n        descriptionUrl: 'https://bafybeihd5on7ovlevvz6hmnbejuk5gzenfoilba4qlhymtmbugl7eotduy.ipfs.w3s.link/proposal3.txt',\n        imageUrl: 'https://bafybeifipnkxtonmy4xcj2lwg6hbg36ovr45tt4wzll2go6k2ib3jqcfdm.ipfs.w3s.link/proposal3.webp'\n      }];\n      const descriptions = await Promise.all(proposalsDetails.map(async proposal => {\n        try {\n          const response = await fetch(proposal.descriptionUrl);\n          if (!response.ok) throw new Error(`Failed to fetch: ${proposal.descriptionUrl}`);\n          return await response.text();\n        } catch (error) {\n          console.error(`Error fetching description for proposal ${proposal.id}:`, error);\n          return \"Description not available.\";\n        }\n      }));\n      const proposalsWithFunds = await Promise.all(formattedProposals.map(async proposal => {\n        try {\n          const funds = await proposalContract.getProposalFunds(proposal.id);\n          return {\n            ...proposal,\n            funds: ethers.utils.formatEther(funds)\n          };\n        } catch (error) {\n          console.error(`Error fetching funds for proposal ${proposal.id}:`, error);\n          return {\n            ...proposal,\n            funds: \"N/A\"\n          };\n        }\n      }));\n      setProposalsDetails(proposalsDetails);\n      setProposals(proposalsWithFunds);\n      setDescriptions(descriptions);\n      setShowVotePopup(true);\n    } catch (error) {\n      console.error(\"Error fetching proposals:\", error);\n      alert(\"❌ An error occurred while fetching proposals.\");\n    }\n  }\n  async function fetchDonationPercentages() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract is not initialized.\");\n        return;\n      }\n      const percentages = await campaignContract.getDonationPercentages();\n      if (percentages.length === 0) {\n        console.warn(\"No donation percentages available.\");\n        setDonationPercentages([]);\n        return;\n      }\n      setDonationPercentages(percentages.map(p => p.toNumber())); // ✅ Conversie sigură\n    } catch (error) {\n      console.error(\"❌ Error fetching donation percentages:\", error);\n    }\n  }\n  useEffect(() => {\n    if (isContractsLoaded) {\n      fetchDonationPercentages();\n      fetchProposals();\n    }\n  }, [isContractsLoaded]);\n  const handleNextProposal = () => {\n    setCurrentProposalIndex(prevIndex => Math.min(prevIndex + 1, proposalsDetails.length - 1));\n  };\n  const handlePrevProposal = () => {\n    setCurrentProposalIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  async function checkUserVotes() {\n    if (!proposalContract || !accountAddress) return;\n    let votes = {};\n    for (let i = 0; i < proposals.length; i++) {\n      const hasVoted = await proposalContract.hasVoted(proposals[i].id, accountAddress);\n      votes[proposals[i].id] = hasVoted;\n    }\n    setUserVotes(votes);\n  }\n  useEffect(() => {\n    if (proposalContract) {\n      checkUserVotes();\n    }\n  }, [proposalContract, accountAddress, proposals]);\n  async function handleVote(proposalId, tokenId) {\n    try {\n      if (!proposalContract) {\n        console.warn(\"Proposal contract not loaded.\");\n        return;\n      }\n      if (!tokenId) {\n        alert(\"❌ You must select an NFT to vote.\");\n        return;\n      }\n      if (userTokens.length === 0) {\n        alert(\"❌ You need at least one DONATE NFT to vote.\");\n        return;\n      }\n      if (userVotes[proposalId]) {\n        alert(\"❌ You have already voted for this proposal.\");\n        return;\n      }\n\n      // ✅ Estimăm gas pentru vot\n      const estimatedGas = await proposalContract.estimateGas.vote(proposalId, tokenId);\n      const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer de 20%\n\n      const voteTx = await proposalContract.vote(proposalId, tokenId, {\n        gasLimit\n      });\n      await voteTx.wait();\n\n      // ✅ Actualizăm voturile utilizatorului după vot\n      setUserVotes(prevVotes => ({\n        ...prevVotes,\n        [proposalId]: true\n      }));\n      fetchTokenBalance();\n      fetchDonationPercentages();\n      fetchUserNFTs();\n      setShowVotePopup(false);\n      alert(\"✅ Vote successful!\");\n    } catch (error) {\n      console.error(\"Error during voting:\", error);\n      if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\n        alert(\"⚠️ Transaction might fail due to gas estimation issues.\");\n      } else if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ You may not have permission to vote with this NFT.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  async function distributeFunds() {\n    try {\n      if (!campaignContract) {\n        alert(\"❌ Campaign contract is not loaded.\");\n        return;\n      }\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== contractOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can distribute funds.\");\n        return;\n      }\n      const estimatedGas = await campaignContract.estimateGas.distributeFunds();\n      const gasLimit = estimatedGas.mul(120).div(100);\n      const tx = await campaignContract.distributeFunds({\n        gasLimit\n      });\n      await tx.wait();\n      alert(\"✅ Funds distributed successfully!\");\n      fetchProposals();\n      setFundsDistributed(true);\n    } catch (error) {\n      console.error(\"❌ Error distributing funds:\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ Transaction failed. You might not be the owner.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  async function withdrawFunds() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract not loaded.\");\n        return;\n      }\n      const estimatedGas = await campaignContract.estimateGas.withdrawFunds();\n      const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer mai mic pentru optimizare\n\n      console.log(\"Estimated Gas Cost for Withdrawal:\", ethers.utils.formatUnits(estimatedGas, \"gwei\"));\n      const tx = await campaignContract.withdrawFunds({\n        gasLimit\n      });\n      await tx.wait();\n      alert(\"✅ Funds withdrawn successfully! Check your wallet balance.\");\n      fetchBalance(accountAddress);\n      setFundsDistributed(true);\n    } catch (error) {\n      console.error(\"❌ Error withdrawing funds:\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ Transaction failed. You might not be eligible to withdraw.\");\n      } else if (error.code === \"INSUFFICIENT_FUNDS\") {\n        alert(\"❌ Insufficient gas balance for transaction.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  async function stopCampaign() {\n    try {\n      if (!campaignContract) {\n        console.warn(\"Campaign contract not loaded.\");\n        return;\n      }\n      if (!isTargetReached) {\n        alert(\"❌ You cannot stop the campaign until the target is reached.\");\n        return;\n      }\n      const contractOwner = await campaignContract.owner();\n      if ((accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase()) !== contractOwner.toLowerCase()) {\n        alert(\"❌ Only the campaign owner can stop the campaign.\");\n        return;\n      }\n      const estimatedGas = await campaignContract.estimateGas.stopCampaign();\n      const gasLimit = estimatedGas.mul(120).div(100);\n      const tx = await campaignContract.stopCampaign({\n        gasLimit\n      });\n      await tx.wait();\n      alert(\"✅ Campaign stopped successfully!\");\n      setIsActive(false);\n    } catch (error) {\n      console.error(\"❌ Error stopping campaign:\", error);\n      if (error.code === \"CALL_EXCEPTION\") {\n        alert(\"❌ Transaction failed. You might not be the owner.\");\n      } else if (error.code === \"INSUFFICIENT_FUNDS\") {\n        alert(\"❌ Insufficient gas balance for transaction.\");\n      } else {\n        alert(\"❌ An unexpected error occurred. Check the console for details.\");\n      }\n    }\n  }\n  const campaignImageUrl = \"https://bafybeia3oxbhfxrzyrvrgnp2gft3tvi7zhcqdvo2nyher2qna72agkaabq.ipfs.w3s.link/photo2.webp\";\n  const campaignDescriptionUrl = \"https://bafybeibq7ek3iezsk75gjfmqdn7yz7haw5f54l3uk5ky3yzmvwsxfuj65m.ipfs.w3s.link/description.txt\";\n  useEffect(() => {\n    async function fetchCampaignDescription() {\n      try {\n        const response = await fetch(campaignDescriptionUrl);\n        if (!response.ok) throw new Error(`Failed to fetch description: ${response.status}`);\n        const data = await response.text();\n        setCampaignDescription(data);\n      } catch (error) {\n        console.error(\"❌ Error fetching campaign description:\", error);\n        setCampaignDescription(\"Description not available.\");\n      }\n    }\n    fetchCampaignDescription();\n  }, [campaignDescriptionUrl]);\n\n  // Event listeners for contract events\n  useEffect(() => {\n    if (!campaignContract || !proposalContract) return;\n    const handleDonationReceived = (donor, amount, tokenId) => {\n      console.log(`💰 Donation received from ${donor}: ${ethers.utils.formatEther(amount)} ETH. Token ID: ${tokenId}`);\n      fetchBalance(accountAddress);\n      fetchDonationPercentages();\n    };\n    const handleFundsDistributed = () => {\n      console.log(\"✅ Funds have been distributed successfully!\");\n      fetchProposals();\n    };\n    const handleCampaignClosed = () => {\n      console.log(\"⚠️ Campaign has been closed by the owner.\");\n      setIsActive(false); // ✅ Actualizăm UI-ul\n    };\n    const handleFundsWithdrawn = (beneficiary, amount) => {\n      console.log(`🏦 ${beneficiary} withdrew ${ethers.utils.formatEther(amount)} ETH.`);\n    };\n    const handleVoteCast = (voter, proposalId) => {\n      console.log(`🗳️ ${voter} voted for proposal ID: ${proposalId}`);\n      fetchDonationPercentages();\n    };\n    campaignContract.removeAllListeners(\"DonationReceived\");\n    campaignContract.removeAllListeners(\"FundsDistributed\");\n    campaignContract.removeAllListeners(\"CampaignClosed\");\n    campaignContract.removeAllListeners(\"FundsWithdrawn\");\n    proposalContract.removeAllListeners(\"VoteCast\");\n    campaignContract.on(\"DonationReceived\", handleDonationReceived);\n    campaignContract.on(\"FundsDistributed\", handleFundsDistributed);\n    campaignContract.on(\"CampaignClosed\", handleCampaignClosed);\n    campaignContract.on(\"FundsWithdrawn\", handleFundsWithdrawn);\n    proposalContract.on(\"VoteCast\", handleVoteCast);\n    return () => {\n      campaignContract.off(\"DonationReceived\", handleDonationReceived);\n      campaignContract.off(\"FundsDistributed\", handleFundsDistributed);\n      campaignContract.off(\"CampaignClosed\", handleCampaignClosed);\n      campaignContract.off(\"FundsWithdrawn\", handleFundsWithdrawn);\n      proposalContract.off(\"VoteCast\", handleVoteCast);\n    };\n  }, [campaignContract, proposalContract, accountAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      accountData: accountData,\n      onLogin: handleLogin,\n      placeholder: \"Enter address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"campaign-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Support Our Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowAccountInfoPopup(true),\n          children: \"Account Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 15\n      }, this), showAccountInfoPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowAccountInfoPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Account: \", accountAddress]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: \", accountBalance, \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowCampaignInfoPopup(true),\n        children: \"Campaign Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 15\n      }, this), showCampaignInfoPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowCampaignInfoPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Campaign Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: campaignDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: campaignImageUrl,\n            alt: \"Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-button\",\n        onClick: () => setShowCampaignCausesPopup(true),\n        children: \"Campaign Percentages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 15\n      }, this), showCampaignCausesPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowCampaignCausesPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Campaign Percentages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: proposalsDetails.map((proposal, index) => {\n              var _proposals$index;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: proposal.imageUrl,\n                  style: {\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                    marginBottom: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: descriptions[index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Funds Allocated: \", ((_proposals$index = proposals[index]) === null || _proposals$index === void 0 ? void 0 : _proposals$index.funds) || \"0\", \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Donation Percentage: \", donationPercentages[index], \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 39\n                }, this)]\n              }, proposal.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 35\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campaign-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Campaign Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Donations: \", totalDonations, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 19\n        }, this), targetAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Target Amount: \", targetAmount, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", progress.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 15\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manage Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 23\n        }, this), isActive && isTargetReached && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopCampaign,\n          children: \"Stop Campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 27\n        }, this), !isActive && !fundsDistributed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: distributeFunds,\n          children: \"Distribute Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 19\n      }, this), humanitarianAddresses.includes(accountAddress.toLowerCase()) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Withdraw Your Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: withdrawFunds,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Make a Donation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount (ETH):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: donationAmount,\n            onChange: e => setDonationAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: donate,\n            children: \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The campaign is closed. Donations are no longer accepted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 19\n      }, this), showVotePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup-button\",\n            onClick: () => setShowVotePopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Donate for a Cause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"proposal\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: proposalsDetails[currentProposalIndex].imageUrl,\n              style: {\n                width: '300px',\n                height: '300px',\n                objectFit: 'cover',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: descriptions[currentProposalIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setSelectedTokenId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 35\n              }, this), userTokens.map(tokenId => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tokenId,\n                children: [\"Token #\", tokenId]\n              }, tokenId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 39\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(proposalsDetails[currentProposalIndex].id, selectedTokenId),\n              disabled: userVotes[proposalsDetails[currentProposalIndex].id] || !selectedTokenId,\n              children: userVotes[proposalsDetails[currentProposalIndex].id] ? \"Already Voted\" : \"Choose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handlePrevProposal,\n              disabled: currentProposalIndex === 0,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-button\",\n              onClick: handleNextProposal,\n              disabled: currentProposalIndex === proposalsDetails.length - 1,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 19\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set-target-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Campaign Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Amount (ETH):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetAmount,\n          onChange: e => setTargetAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setCampaignTarget,\n          children: \"Set Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 19\n      }, this), showThankYouPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Thank You!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your generosity makes a difference. Thank you for your support!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowThankYouPopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 17\n      }, this), isTargetReached && showThankYouPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDF89 Target Reached! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We have reached our goal, thanks to your kindness and support!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowThankYouPopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 695,\n    columnNumber: 7\n  }, this);\n}\n_s(CampaignInteraction, \"qgvEnTiMPTgGmMZoEXjASNjw1a4=\");\n_c = CampaignInteraction;\nexport default CampaignInteraction;\nvar _c;\n$RefreshReg$(_c, \"CampaignInteraction\");","map":{"version":3,"names":["React","useEffect","useState","ethers","campaignAbi","donationTokenAbi","proposalAbi","Login","jsxDEV","_jsxDEV","CampaignInteraction","_s","accountAddress","setAccountAddress","accountBalance","setAccountBalance","donationAmount","setDonationAmount","targetAmount","setTargetAmount","progress","setProgress","totalDonations","setTotalDonations","provider","setProvider","signerIndex","setSignerIndex","isTargetReached","setIsTargetReached","campaignContract","setCampaignContract","donationTokenContract","setDonationTokenContract","proposalContract","setProposalContract","accountData","setAccountData","isLoggedIn","setIsLoggedIn","isContractsLoaded","setIsContractsLoaded","showThankYouPopup","setShowThankYouPopup","showAccountInfoPopup","setShowAccountInfoPopup","isOwner","setIsOwner","campaignDescription","setCampaignDescription","descriptions","setDescriptions","showCampaignInfoPopup","setShowCampaignInfoPopup","showCampaignCausesPopup","setShowCampaignCausesPopup","showVotePopup","setShowVotePopup","proposals","setProposals","proposalsDetails","setProposalsDetails","currentProposalIndex","setCurrentProposalIndex","donationPercentages","setDonationPercentages","tokenBalance","setTokenBalance","humanitarianAddresses","setHumanitarianAddresses","isActive","setIsActive","fundsDistributed","setFundsDistributed","userVotes","setUserVotes","userTokens","setUserTokens","selectedTokenId","setSelectedTokenId","fetchUserNFTs","tokens","getTokensByOwner","map","tokenId","toNumber","error","console","fetchHumanitarianAddresses","addresses","i","length","beneficiary","getProposalBeneficiary","push","toLowerCase","fetchBalance","address","window","ethereum","balance","request","method","params","utils","formatEther","fetchTokenBalance","balanceOf","initializeContracts","signer","getSigner","campaignAddress","campaign","Contract","abi","donationTokenAddress","donationToken","proposalAddress","proposal","owner","alert","message","fetchCampaignData","currentTotalDonations","currentTargetAmount","formattedDonations","formattedTarget","parseFloat","handleLogin","web3Provider","providers","Web3Provider","handleLogout","donate","isAddress","donationValue","parseEther","contractOwner","estimatedGas","estimateGas","value","gasLimit","mul","div","log","formatUnits","donationTx","hash","wait","fetchDonationPercentages","getBalance","fetchProposals","code","setCampaignTarget","campaignOwner","targetValue","campaignContractgetTotalDonations","currentTotalDonationsBN","BigNumber","from","toString","lte","gasError","setTargetTx","send","gas","warn","fetchedProposals","getProposals","formattedProposals","index","id","voteCount","descriptionUrl","imageUrl","Promise","all","response","fetch","ok","Error","text","proposalsWithFunds","funds","getProposalFunds","percentages","getDonationPercentages","p","handleNextProposal","prevIndex","Math","min","handlePrevProposal","max","checkUserVotes","votes","hasVoted","handleVote","proposalId","vote","voteTx","prevVotes","distributeFunds","tx","withdrawFunds","stopCampaign","campaignImageUrl","campaignDescriptionUrl","fetchCampaignDescription","status","data","handleDonationReceived","donor","amount","handleFundsDistributed","handleCampaignClosed","handleFundsWithdrawn","handleVoteCast","voter","removeAllListeners","on","off","className","children","onLogin","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_proposals$index","style","marginBottom","width","height","objectFit","toFixed","includes","type","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Oana/Desktop/Blockchain/Blockchain-Project/front-end/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport campaignAbi from './Campaign.json';\r\nimport donationTokenAbi from './DonationToken.json';\r\nimport proposalAbi from './Proposal.json';\r\nimport Login from './Login';\r\nimport './App.css';\r\n\r\nfunction CampaignInteraction() {\r\n    const [accountAddress, setAccountAddress] = useState('');\r\n    const [accountBalance, setAccountBalance] = useState('');\r\n    const [donationAmount, setDonationAmount] = useState('');\r\n    const [targetAmount, setTargetAmount] = useState('');\r\n    const [progress, setProgress] = useState(0);\r\n    const [totalDonations, setTotalDonations] = useState(0);\r\n    const [provider, setProvider] = useState(null);\r\n    const [signerIndex, setSignerIndex] = useState(null);\r\n    const [isTargetReached, setIsTargetReached] = useState(false);\r\n    const [campaignContract, setCampaignContract] = useState(null);\r\n    const [donationTokenContract, setDonationTokenContract] = useState(null);\r\n    const [proposalContract, setProposalContract] = useState(null);\r\n    const [accountData, setAccountData] = useState([]);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isContractsLoaded, setIsContractsLoaded] = useState(false);\r\n    const [showThankYouPopup, setShowThankYouPopup] = useState(false);\r\n    const [showAccountInfoPopup, setShowAccountInfoPopup] = useState(false);\r\n    const [isOwner, setIsOwner] = useState(false);\r\n    const [campaignDescription, setCampaignDescription] = useState(null);\r\n    const [descriptions, setDescriptions] = useState([]);\r\n    const [showCampaignInfoPopup, setShowCampaignInfoPopup] = useState(false);\r\n    const [showCampaignCausesPopup, setShowCampaignCausesPopup] = useState(false);\r\n    const [showVotePopup, setShowVotePopup] = useState(false); \r\n    const [proposals, setProposals] = useState([]);\r\n    const [proposalsDetails, setProposalsDetails] = useState([]);\r\n    const [currentProposalIndex, setCurrentProposalIndex] = useState(0); \r\n    const [donationPercentages, setDonationPercentages] = useState([]);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [humanitarianAddresses, setHumanitarianAddresses] = useState([]);\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [fundsDistributed, setFundsDistributed] = useState(false);\r\n    const [userVotes, setUserVotes] = useState({});\r\n    const [userTokens, setUserTokens] = useState([]);\r\n    const [selectedTokenId, setSelectedTokenId] = useState(null);\r\n    async function fetchUserNFTs() {\r\n        if (!donationTokenContract || !accountAddress) return;\r\n    \r\n        try {\r\n            const tokens = await donationTokenContract.getTokensByOwner(accountAddress);\r\n            setUserTokens(tokens.map(tokenId => tokenId.toNumber())); // Convertim BigNumber în numere normale\r\n        } catch (error) {\r\n            console.error(\"Error fetching user NFTs:\", error);\r\n            setUserTokens([]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (donationTokenContract && accountAddress) {\r\n            fetchUserNFTs();\r\n        }\r\n    }, [donationTokenContract, accountAddress]);\r\n    useEffect(() => {\r\n        async function fetchHumanitarianAddresses() {\r\n            if (!proposalContract) return;\r\n            let addresses = [];\r\n            for (let i = 0; i < proposals.length; i++) {\r\n                const beneficiary = await proposalContract.getProposalBeneficiary(i);\r\n                addresses.push(beneficiary.toLowerCase());\r\n            }\r\n            setHumanitarianAddresses(addresses);\r\n        }\r\n        fetchHumanitarianAddresses();\r\n    }, [proposalContract, proposals]);\r\n    \r\n    const fetchBalance = async (address) => {\r\n        if (window.ethereum) {\r\n            try {\r\n                const balance = await window.ethereum.request({\r\n                    method: 'eth_getBalance',\r\n                    params: [address, 'latest'],\r\n                });\r\n                setAccountBalance(ethers.utils.formatEther(balance));\r\n            } catch (error) {\r\n                console.error(\"Error fetching balance: \", error);\r\n            }\r\n        }\r\n    };\r\n    \r\n    async function fetchTokenBalance() {\r\n        if (donationTokenContract && accountAddress) {\r\n            const balance = await donationTokenContract.balanceOf(accountAddress);\r\n            setTokenBalance(ethers.utils.formatEther(balance));\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        async function initializeContracts() {\r\n            if (provider) {\r\n                const signer = provider.getSigner();\r\n    \r\n                try {\r\n                    const campaignAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\r\n                    const campaign = new ethers.Contract(campaignAddress, campaignAbi.abi, signer);\r\n                    setCampaignContract(campaign);\r\n    \r\n                    const donationTokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n                    const donationToken = new ethers.Contract(donationTokenAddress, donationTokenAbi.abi, signer);\r\n                    setDonationTokenContract(donationToken);\r\n    \r\n                    const proposalAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\";\r\n                    const proposal = new ethers.Contract(proposalAddress, proposalAbi.abi, signer);\r\n                    setProposalContract(proposal);\r\n    \r\n                    const owner = await campaign.owner();\r\n                    setIsOwner(accountAddress?.toLowerCase() === owner.toLowerCase());\r\n                    setIsContractsLoaded(true);\r\n                } catch (error) {\r\n                    alert('Error initializing contracts: ' + error.message);\r\n                }\r\n            }\r\n        }\r\n        initializeContracts();\r\n    }, [provider, accountAddress]); \r\n    \r\n    useEffect(() => {\r\n        async function fetchCampaignData() {\r\n            if (campaignContract) {\r\n                try {\r\n                    const currentTotalDonations = await campaignContract.totalDonations();\r\n                    const currentTargetAmount = await campaignContract.targetAmount();\r\n                    \r\n                    const formattedDonations = ethers.utils.formatEther(currentTotalDonations);\r\n                    const formattedTarget = ethers.utils.formatEther(currentTargetAmount);\r\n                    \r\n                    setTotalDonations(formattedDonations);\r\n                    setTargetAmount(formattedTarget);\r\n    \r\n                    const progress = (parseFloat(formattedDonations) * 100) / parseFloat(formattedTarget);\r\n                    setProgress(progress || 0);\r\n    \r\n                    setIsTargetReached(parseFloat(formattedDonations) >= parseFloat(formattedTarget)); \r\n                } catch (error) {\r\n                    alert('Error fetching campaign data: ' + error.message);\r\n                }\r\n            }\r\n        }\r\n        fetchCampaignData();\r\n    }, [campaignContract]);\r\n\r\n    async function handleLogin(isLoggedIn, address, balance) {\r\n        try {\r\n            if (!window.ethereum) {\r\n                alert(\"MetaMask is not installed!\");\r\n                return;\r\n            }\r\n    \r\n            setIsLoggedIn(isLoggedIn);\r\n            setAccountAddress(address);\r\n            setAccountBalance(balance);\r\n    \r\n            const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            setProvider(web3Provider); \r\n            alert(\"Logged in successfully.\");\r\n        } catch (error) {\r\n            alert('Error during login: ' + error.message);\r\n        }\r\n    }\r\n    \r\n    async function handleLogout() {\r\n        try {\r\n            setIsLoggedIn(false);\r\n            setAccountAddress(null);\r\n            setAccountBalance(null);\r\n            setProvider(null);\r\n            setCampaignContract(null);\r\n            setDonationTokenContract(null);\r\n            setProposalContract(null);\r\n            setTotalDonations(0);\r\n            setTargetAmount('');\r\n            setProgress(0);\r\n            setIsTargetReached(false);\r\n            setIsContractsLoaded(false);\r\n            setIsOwner(false);\r\n            setUserTokens([]);\r\n            setUserVotes({});\r\n            setDonationPercentages([]);\r\n            alert(\"✅ Logged out successfully.\");\r\n        } catch (error) {\r\n            console.error(\"Logout error:\", error);\r\n        }\r\n    }\r\n  \r\n\r\n    async function donate() {\r\n        try {\r\n            if (!isContractsLoaded || !campaignContract) {\r\n                alert(\"Contracts are still loading. Please wait.\");\r\n                return;\r\n            }\r\n    \r\n            if (!ethers.utils.isAddress(accountAddress)) {\r\n                alert(\"Invalid account address.\");\r\n                return;\r\n            }\r\n    \r\n            if (!donationAmount || parseFloat(donationAmount) <= 0) {\r\n                alert(\"Please enter a valid donation amount.\");\r\n                return;\r\n            }\r\n    \r\n            const donationValue = ethers.utils.parseEther(donationAmount);\r\n    \r\n            // Check if the owner is trying to make a donation\r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() === contractOwner.toLowerCase()) {\r\n                alert(\"The owner cannot make donations.\");\r\n                return;\r\n            }\r\n    \r\n            // **Estimate Gas Cost**\r\n            const estimatedGas = await campaignContract.estimateGas.donate({ value: donationValue });\r\n            const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer +20%\r\n    \r\n            console.log(\"Estimated Gas Cost:\", ethers.utils.formatUnits(estimatedGas, \"gwei\"));\r\n    \r\n            // Send the donation transaction\r\n            const donationTx = await campaignContract.donate({\r\n                value: donationValue,\r\n                gasLimit: gasLimit\r\n            });\r\n    \r\n            console.log(\"Transaction sent:\", donationTx.hash);\r\n    \r\n            // Wait for the transaction to be confirmed\r\n            await donationTx.wait();\r\n            console.log(\"Transaction confirmed:\", donationTx.hash);\r\n    \r\n            fetchTokenBalance();\r\n            fetchDonationPercentages();\r\n    \r\n            setAccountBalance(ethers.utils.formatEther(await provider.getBalance(accountAddress)));\r\n            setTotalDonations(ethers.utils.formatEther(await campaignContract.totalDonations()));\r\n            setTargetAmount(ethers.utils.formatEther(await campaignContract.targetAmount()));\r\n    \r\n            setDonationAmount(\"\"); \r\n            setShowThankYouPopup(true);\r\n            fetchProposals();\r\n    \r\n            console.log(\"Donation successful!\");\r\n        } catch (error) {\r\n            console.error(\"Error during donation:\", error);\r\n    \r\n            if (error.code === \"INSUFFICIENT_FUNDS\") {\r\n                alert(\"❌ Insufficient funds to complete this transaction.\");\r\n            } else if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\r\n                alert(\"⚠️ Transaction might fail. Please try with a different amount.\");\r\n            } else {\r\n                alert(\"⚠️ An unexpected error occurred. Please try again later.\");\r\n            }\r\n        }\r\n    }  \r\n    async function setCampaignTarget() {\r\n        try {\r\n            if (!campaignContract) {\r\n                alert(\"❌ Campaign contract is not initialized.\");\r\n                console.error(\"❌ Error: campaignContract is undefined.\");\r\n                return;\r\n            }\r\n    \r\n            if (parseFloat(targetAmount) <= 0) {\r\n                alert(\"❌ Please enter a valid target amount.\");\r\n                return;\r\n            }\r\n    \r\n            // ✅ Debugging: Afișează contractul în consolă\r\n            console.log(\"✅ Campaign Contract Instance:\", campaignContract);\r\n    \r\n            // ✅ Verifică dacă metoda `owner()` există în ABI\r\n            if (!campaignContract.owner()) {\r\n                alert(\"❌ owner() method is not defined in the contract.\");\r\n                console.error(\"❌ Error: owner() method not found in campaignContract.\");\r\n                return;\r\n            }\r\n    \r\n            const campaignOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() !== campaignOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can set the target amount.\");\r\n                return;\r\n            }\r\n    \r\n            // Convertim targetAmount la BigNumber pentru Ethereum\r\n            const targetValue = ethers.utils.parseEther(targetAmount);\r\n            \r\n            // Obține valoarea actuală a totalDonations\r\n            const currentTotalDonations = await campaignContractgetTotalDonations();\r\n            const currentTotalDonationsBN = ethers.BigNumber.from(currentTotalDonations);\r\n    \r\n            console.log(\"New Target Value:\", targetValue.toString());\r\n            console.log(\"Current Total Donations:\", currentTotalDonationsBN.toString());\r\n    \r\n            // Verificăm dacă targetValue este mai mic sau egal cu totalDonations\r\n            if (targetValue.lte(currentTotalDonationsBN)) {\r\n                alert(\"❌ Target amount must be greater than total donations.\");\r\n                return;\r\n            }\r\n    \r\n            // Estimare manuală a gas-ului cu un buffer de 20%\r\n            let estimatedGas;\r\n            try {\r\n                estimatedGas = await campaignContract.setTargetAmount(targetValue).estimateGas({\r\n                    from: accountAddress\r\n                });\r\n            } catch (gasError) {\r\n                console.error(\"⛽ Gas estimation failed:\", gasError);\r\n                alert(\"⚠️ Gas estimation failed. Please check the console for details.\");\r\n                return;\r\n            }\r\n    \r\n            const gasLimit = estimatedGas.mul(120).div(100); // Adăugăm un buffer de 20%\r\n    \r\n            // Executăm tranzacția\r\n            const setTargetTx = await campaignContract.setTargetAmount(targetValue).send({\r\n                from: accountAddress,\r\n                gas: gasLimit.toString()\r\n            });\r\n    \r\n            await setTargetTx.wait();\r\n            alert(\"✅ Target amount set successfully!\");\r\n    \r\n            // Actualizăm UI-ul cu noul target\r\n            setTargetAmount(ethers.utils.formatEther(targetValue));\r\n        } catch (error) {\r\n            console.error(\"❌ Error setting campaign target:\", error);\r\n            alert(\"❌ An error occurred while setting the target amount. Check console for details.\");\r\n        }\r\n    }\r\n    async function fetchProposals() {\r\n        try {\r\n            if (!proposalContract) {\r\n                console.warn(\"Proposal contract not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            const fundsDistributed = await campaignContract.fundsDistributed();\r\n            if (!fundsDistributed) {\r\n                console.log(\"Funds have not been distributed yet.\");\r\n                return;\r\n            }\r\n    \r\n            const fetchedProposals = await proposalContract.getProposals();\r\n    \r\n            const formattedProposals = fetchedProposals.map((proposal, index) => ({\r\n                id: proposal.id.toNumber(), \r\n                voteCount: proposal.voteCount.toNumber()\r\n            }));\r\n    \r\n            const proposalsDetails = [\r\n                {\r\n                    id: 1,\r\n                    descriptionUrl: 'https://bafybeig7eytlutb4bhjt7hp35py6uyhdbdeqayr2dzddkbrjjd5eoon4im.ipfs.w3s.link/proposal1.txt',\r\n                    imageUrl: 'https://bafybeidemydfmxzi22eitoto6ypgdbvythlpwxp7esnydjedj734t5p3w4.ipfs.w3s.link/proposal1.webp',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    descriptionUrl: 'https://bafybeigkod6hknxfrfs4yvjkwq6yqkly2ug3t47knigd4senza5y2arivm.ipfs.w3s.link/proposal2.txt',\r\n                    imageUrl: 'https://bafybeiccplvm3a4s4ullyli65y3222bhwiia25b3xjvtmbk57whcwp6rgm.ipfs.w3s.link/proposal2.jpeg',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    descriptionUrl: 'https://bafybeihd5on7ovlevvz6hmnbejuk5gzenfoilba4qlhymtmbugl7eotduy.ipfs.w3s.link/proposal3.txt',\r\n                    imageUrl: 'https://bafybeifipnkxtonmy4xcj2lwg6hbg36ovr45tt4wzll2go6k2ib3jqcfdm.ipfs.w3s.link/proposal3.webp',\r\n                },\r\n            ];\r\n    \r\n            const descriptions = await Promise.all(proposalsDetails.map(async (proposal) => {\r\n                try {\r\n                    const response = await fetch(proposal.descriptionUrl);\r\n                    if (!response.ok) throw new Error(`Failed to fetch: ${proposal.descriptionUrl}`);\r\n                    return await response.text();\r\n                } catch (error) {\r\n                    console.error(`Error fetching description for proposal ${proposal.id}:`, error);\r\n                    return \"Description not available.\";\r\n                }\r\n            }));\r\n    \r\n            const proposalsWithFunds = await Promise.all(formattedProposals.map(async (proposal) => {\r\n                try {\r\n                    const funds = await proposalContract.getProposalFunds(proposal.id);\r\n                    return { \r\n                        ...proposal, \r\n                        funds: ethers.utils.formatEther(funds)\r\n                    };\r\n                } catch (error) {\r\n                    console.error(`Error fetching funds for proposal ${proposal.id}:`, error);\r\n                    return { ...proposal, funds: \"N/A\" };\r\n                }\r\n            }));\r\n    \r\n            setProposalsDetails(proposalsDetails);\r\n            setProposals(proposalsWithFunds);\r\n            setDescriptions(descriptions);\r\n            setShowVotePopup(true);\r\n        } catch (error) {\r\n            console.error(\"Error fetching proposals:\", error);\r\n            alert(\"❌ An error occurred while fetching proposals.\");\r\n        }\r\n    }\r\n\r\n    async function fetchDonationPercentages() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract is not initialized.\");\r\n                return;\r\n            }\r\n    \r\n            const percentages = await campaignContract.getDonationPercentages();\r\n            \r\n            if (percentages.length === 0) {\r\n                console.warn(\"No donation percentages available.\");\r\n                setDonationPercentages([]);\r\n                return;\r\n            }\r\n    \r\n            setDonationPercentages(percentages.map(p => p.toNumber())); // ✅ Conversie sigură\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching donation percentages:\", error);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (isContractsLoaded) {\r\n            fetchDonationPercentages();\r\n            fetchProposals();\r\n        }\r\n    }, [isContractsLoaded]);\r\n    \r\n    const handleNextProposal = () => {\r\n        setCurrentProposalIndex((prevIndex) => Math.min(prevIndex + 1, proposalsDetails.length - 1)); \r\n    };\r\n    \r\n    const handlePrevProposal = () => {\r\n        setCurrentProposalIndex((prevIndex) => Math.max(prevIndex - 1, 0)); \r\n    };\r\n\r\n    async function checkUserVotes() {\r\n        if (!proposalContract || !accountAddress) return;\r\n    \r\n        let votes = {};\r\n        for (let i = 0; i < proposals.length; i++) {\r\n            const hasVoted = await proposalContract.hasVoted(proposals[i].id, accountAddress);\r\n            votes[proposals[i].id] = hasVoted;\r\n        }\r\n        setUserVotes(votes);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (proposalContract) {\r\n            checkUserVotes();\r\n        }\r\n    }, [proposalContract, accountAddress, proposals]);\r\n\r\n    async function handleVote(proposalId, tokenId) {\r\n      try {\r\n          if (!proposalContract) {\r\n              console.warn(\"Proposal contract not loaded.\");\r\n              return;\r\n          }\r\n\r\n          if (!tokenId) {\r\n              alert(\"❌ You must select an NFT to vote.\");\r\n              return;\r\n          }\r\n\r\n          if (userTokens.length === 0) {\r\n              alert(\"❌ You need at least one DONATE NFT to vote.\");\r\n              return;\r\n          }\r\n\r\n          if (userVotes[proposalId]) {\r\n              alert(\"❌ You have already voted for this proposal.\");\r\n              return;\r\n          }\r\n\r\n          // ✅ Estimăm gas pentru vot\r\n          const estimatedGas = await proposalContract.estimateGas.vote(proposalId, tokenId);\r\n          const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer de 20%\r\n\r\n          const voteTx = await proposalContract.vote(proposalId, tokenId, { gasLimit });\r\n          await voteTx.wait();\r\n\r\n          // ✅ Actualizăm voturile utilizatorului după vot\r\n          setUserVotes((prevVotes) => ({\r\n              ...prevVotes,\r\n              [proposalId]: true,\r\n          }));\r\n\r\n          fetchTokenBalance();\r\n          fetchDonationPercentages();\r\n          fetchUserNFTs();\r\n\r\n          setShowVotePopup(false);\r\n          alert(\"✅ Vote successful!\");\r\n      } catch (error) {\r\n          console.error(\"Error during voting:\", error);\r\n\r\n          if (error.code === \"UNPREDICTABLE_GAS_LIMIT\") {\r\n              alert(\"⚠️ Transaction might fail due to gas estimation issues.\");\r\n          } else if (error.code === \"CALL_EXCEPTION\") {\r\n              alert(\"❌ You may not have permission to vote with this NFT.\");\r\n          } else {\r\n              alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n          }\r\n      }\r\n  }\r\n\r\n    async function distributeFunds() {\r\n        try {\r\n            if (!campaignContract) {\r\n                alert(\"❌ Campaign contract is not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() !== contractOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can distribute funds.\");\r\n                return;\r\n            }\r\n    \r\n            const estimatedGas = await campaignContract.estimateGas.distributeFunds();\r\n            const gasLimit = estimatedGas.mul(120).div(100);\r\n    \r\n            const tx = await campaignContract.distributeFunds({ gasLimit });\r\n            await tx.wait();\r\n    \r\n            alert(\"✅ Funds distributed successfully!\");\r\n            \r\n            fetchProposals();\r\n            setFundsDistributed(true);\r\n    \r\n        } catch (error) {\r\n            console.error(\"❌ Error distributing funds:\", error);\r\n    \r\n            if (error.code === \"CALL_EXCEPTION\") {\r\n                alert(\"❌ Transaction failed. You might not be the owner.\");\r\n            } else {\r\n                alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n            }\r\n        }\r\n    }\r\n  \r\n    async function withdrawFunds() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract not loaded.\");\r\n                return;\r\n            }\r\n    \r\n            const estimatedGas = await campaignContract.estimateGas.withdrawFunds();\r\n            const gasLimit = estimatedGas.mul(120).div(100); // ✅ Buffer mai mic pentru optimizare\r\n    \r\n            console.log(\"Estimated Gas Cost for Withdrawal:\", ethers.utils.formatUnits(estimatedGas, \"gwei\"));\r\n    \r\n            const tx = await campaignContract.withdrawFunds({ gasLimit });\r\n            await tx.wait();\r\n    \r\n            alert(\"✅ Funds withdrawn successfully! Check your wallet balance.\");\r\n            \r\n            fetchBalance(accountAddress);\r\n            setFundsDistributed(true);\r\n    \r\n        } catch (error) {\r\n            console.error(\"❌ Error withdrawing funds:\", error);\r\n    \r\n            if (error.code === \"CALL_EXCEPTION\") {\r\n                alert(\"❌ Transaction failed. You might not be eligible to withdraw.\");\r\n            } else if (error.code === \"INSUFFICIENT_FUNDS\") {\r\n                alert(\"❌ Insufficient gas balance for transaction.\");\r\n            } else {\r\n                alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    async function stopCampaign() {\r\n        try {\r\n            if (!campaignContract) {\r\n                console.warn(\"Campaign contract not loaded.\");\r\n                return;\r\n            }\r\n\r\n            if (!isTargetReached) {\r\n                alert(\"❌ You cannot stop the campaign until the target is reached.\");\r\n                return;\r\n            }\r\n\r\n            const contractOwner = await campaignContract.owner();\r\n            if (accountAddress?.toLowerCase() !== contractOwner.toLowerCase()) {\r\n                alert(\"❌ Only the campaign owner can stop the campaign.\");\r\n                return;\r\n            }\r\n    \r\n            const estimatedGas = await campaignContract.estimateGas.stopCampaign();\r\n            const gasLimit = estimatedGas.mul(120).div(100);\r\n    \r\n            const tx = await campaignContract.stopCampaign({ gasLimit });\r\n            await tx.wait();\r\n    \r\n            alert(\"✅ Campaign stopped successfully!\");\r\n            \r\n            setIsActive(false);\r\n    \r\n        } catch (error) {\r\n            console.error(\"❌ Error stopping campaign:\", error);\r\n    \r\n            if (error.code === \"CALL_EXCEPTION\") {\r\n                alert(\"❌ Transaction failed. You might not be the owner.\");\r\n            } else if (error.code === \"INSUFFICIENT_FUNDS\") {\r\n                alert(\"❌ Insufficient gas balance for transaction.\");\r\n            } else {\r\n                alert(\"❌ An unexpected error occurred. Check the console for details.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const campaignImageUrl = \"https://bafybeia3oxbhfxrzyrvrgnp2gft3tvi7zhcqdvo2nyher2qna72agkaabq.ipfs.w3s.link/photo2.webp\";\r\n    const campaignDescriptionUrl = \"https://bafybeibq7ek3iezsk75gjfmqdn7yz7haw5f54l3uk5ky3yzmvwsxfuj65m.ipfs.w3s.link/description.txt\";\r\n    \r\n    useEffect(() => {\r\n        async function fetchCampaignDescription() {\r\n            try {\r\n                const response = await fetch(campaignDescriptionUrl);\r\n                if (!response.ok) throw new Error(`Failed to fetch description: ${response.status}`);\r\n    \r\n                const data = await response.text();\r\n                setCampaignDescription(data);\r\n            } catch (error) {\r\n                console.error(\"❌ Error fetching campaign description:\", error);\r\n                setCampaignDescription(\"Description not available.\");\r\n            }\r\n        }\r\n    \r\n        fetchCampaignDescription();\r\n    }, [campaignDescriptionUrl]);\r\n\r\n    // Event listeners for contract events\r\n    useEffect(() => {\r\n        if (!campaignContract || !proposalContract) return;\r\n\r\n        const handleDonationReceived = (donor, amount, tokenId) => {\r\n            console.log(`💰 Donation received from ${donor}: ${ethers.utils.formatEther(amount)} ETH. Token ID: ${tokenId}`);\r\n            fetchBalance(accountAddress);\r\n            fetchDonationPercentages();\r\n        };\r\n\r\n        const handleFundsDistributed = () => {\r\n            console.log(\"✅ Funds have been distributed successfully!\");\r\n            fetchProposals();\r\n        };\r\n\r\n        const handleCampaignClosed = () => {\r\n            console.log(\"⚠️ Campaign has been closed by the owner.\");\r\n            setIsActive(false); // ✅ Actualizăm UI-ul\r\n        };\r\n\r\n        const handleFundsWithdrawn = (beneficiary, amount) => {\r\n            console.log(`🏦 ${beneficiary} withdrew ${ethers.utils.formatEther(amount)} ETH.`);\r\n        };\r\n\r\n        const handleVoteCast = (voter, proposalId) => {\r\n            console.log(`🗳️ ${voter} voted for proposal ID: ${proposalId}`);\r\n            fetchDonationPercentages();\r\n        };\r\n\r\n        campaignContract.removeAllListeners(\"DonationReceived\");\r\n        campaignContract.removeAllListeners(\"FundsDistributed\");\r\n        campaignContract.removeAllListeners(\"CampaignClosed\");\r\n        campaignContract.removeAllListeners(\"FundsWithdrawn\");\r\n        proposalContract.removeAllListeners(\"VoteCast\");\r\n\r\n        campaignContract.on(\"DonationReceived\", handleDonationReceived);\r\n        campaignContract.on(\"FundsDistributed\", handleFundsDistributed);\r\n        campaignContract.on(\"CampaignClosed\", handleCampaignClosed);\r\n        campaignContract.on(\"FundsWithdrawn\", handleFundsWithdrawn);\r\n        proposalContract.on(\"VoteCast\", handleVoteCast);\r\n\r\n        return () => {\r\n            campaignContract.off(\"DonationReceived\", handleDonationReceived);\r\n            campaignContract.off(\"FundsDistributed\", handleFundsDistributed);\r\n            campaignContract.off(\"CampaignClosed\", handleCampaignClosed);\r\n            campaignContract.off(\"FundsWithdrawn\", handleFundsWithdrawn);\r\n            proposalContract.off(\"VoteCast\", handleVoteCast);\r\n        };\r\n    }, [campaignContract, proposalContract, accountAddress]);\r\n  \r\n  \r\n    return (\r\n      <div className=\"campaign-container\">\r\n          {!isLoggedIn ? (\r\n              <Login accountData={accountData} onLogin={handleLogin} placeholder=\"Enter address\" />\r\n          ) : (\r\n          <div>\r\n              <header className=\"campaign-header\">\r\n                  <h1>Support Our Campaign</h1>\r\n              </header>\r\n\r\n              <div className=\"account-info\">\r\n                  <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n                  <button className=\"button\" onClick={() => setShowAccountInfoPopup(true)}>Account Information</button>\r\n              </div>\r\n\r\n              {showAccountInfoPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowAccountInfoPopup(false)}>X</button>\r\n                          <h3>Account Information</h3>\r\n                          <p>Account: {accountAddress}</p>\r\n                          <p>Balance: {accountBalance} ETH</p>\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              <button className=\"button\" onClick={() => setShowCampaignInfoPopup(true)}>Campaign Information</button>\r\n              {showCampaignInfoPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowCampaignInfoPopup(false)}>X</button>\r\n                          <h3>Campaign Information</h3>\r\n                          <p>{campaignDescription}</p>\r\n                          <img src={campaignImageUrl} alt=\"Campaign\" />\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              <button className=\"p-button\" onClick={() => setShowCampaignCausesPopup(true)}>Campaign Percentages</button>\r\n              {showCampaignCausesPopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowCampaignCausesPopup(false)}>X</button>\r\n                          <h3>Campaign Percentages</h3>\r\n                          <ul>\r\n                              {proposalsDetails.map((proposal, index) => (\r\n                                  <li key={proposal.id} style={{ marginBottom: '20px' }}>\r\n                                      <img src={proposal.imageUrl} style={{ width: '100px', height: '100px', objectFit: 'cover', marginBottom: '10px' }} />\r\n                                      <p>{descriptions[index]}</p>\r\n                                      <p>Funds Allocated: {proposals[index]?.funds || \"0\"} ETH</p>\r\n                                      <p>Donation Percentage: {donationPercentages[index]}%</p>\r\n                                  </li>\r\n                              ))}\r\n                          </ul>\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              <div className=\"campaign-progress\">\r\n                  <h2>Campaign Progress</h2>\r\n                  <p>Total Donations: {totalDonations} ETH</p>\r\n                  {targetAmount && <p>Target Amount: {targetAmount} ETH</p>}\r\n                  <p>Progress: {progress.toFixed(2)}%</p>\r\n                  <progress value={progress} max=\"100\"></progress>\r\n              </div>\r\n\r\n              {isOwner && (\r\n                  <div>\r\n                      <h2>Manage Campaign</h2>\r\n                      {isActive && isTargetReached && (\r\n                          <button onClick={stopCampaign}>Stop Campaign</button>\r\n                      )}\r\n                      {!isActive && !fundsDistributed && (\r\n                          <button onClick={distributeFunds}>Distribute Funds</button>\r\n                      )}\r\n                  </div>\r\n              )}\r\n\r\n              {humanitarianAddresses.includes(accountAddress.toLowerCase()) ? (\r\n                  <div>\r\n                      <h2>Withdraw Your Funds</h2>\r\n                      <button onClick={withdrawFunds}>Withdraw</button>\r\n                  </div>\r\n              ) : (\r\n                  <div>\r\n                      {isActive ? (\r\n                          <div>\r\n                              <h2>Make a Donation</h2>\r\n                              <label>Amount (ETH):</label>\r\n                              <input type=\"number\" value={donationAmount} onChange={(e) => setDonationAmount(e.target.value)} />\r\n                              <button onClick={donate}>Donate</button>\r\n                          </div>\r\n                      ) : (\r\n                          <p>The campaign is closed. Donations are no longer accepted.</p>\r\n                      )}\r\n                  </div>\r\n              )}\r\n\r\n              {/* Vote Popup with NFT Selection */}\r\n              {showVotePopup && (\r\n                  <div className=\"popup\">\r\n                      <div className=\"popup-content\">\r\n                          <button className=\"close-popup-button\" onClick={() => setShowVotePopup(false)}>X</button>\r\n                          <h3>Donate for a Cause</h3>\r\n                          <div className=\"proposal\">\r\n                              <img src={proposalsDetails[currentProposalIndex].imageUrl} style={{ width: '300px', height: '300px', objectFit: 'cover', marginBottom: '10px' }} />\r\n                              <p>{descriptions[currentProposalIndex]}</p>\r\n                              <select onChange={(e) => setSelectedTokenId(e.target.value)}>\r\n                                  <option value=\"\">Select an NFT</option>\r\n                                  {userTokens.map((tokenId) => (\r\n                                      <option key={tokenId} value={tokenId}>Token #{tokenId}</option>\r\n                                  ))}\r\n                              </select>\r\n                              <button \r\n                                  onClick={() => handleVote(proposalsDetails[currentProposalIndex].id, selectedTokenId)} \r\n                                  disabled={userVotes[proposalsDetails[currentProposalIndex].id] || !selectedTokenId}\r\n                              >\r\n                                  {userVotes[proposalsDetails[currentProposalIndex].id] ? \"Already Voted\" : \"Choose\"}\r\n                              </button>\r\n                          </div>\r\n                          <div className=\"pagination-controls\">\r\n                              <button className=\"next-button\" onClick={handlePrevProposal} disabled={currentProposalIndex === 0}>Previous</button>\r\n                              <button className=\"next-button\" onClick={handleNextProposal} disabled={currentProposalIndex === proposalsDetails.length - 1}>Next</button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              )}\r\n\r\n              {isOwner && (\r\n                  <div className=\"set-target-section\">\r\n                      <h2>Set Campaign Target</h2>\r\n                      <label>Target Amount (ETH):</label>\r\n                      <input type=\"number\" value={targetAmount} onChange={(e) => setTargetAmount(e.target.value)} />\r\n                      <button onClick={setCampaignTarget}>Set Target</button>\r\n                  </div>\r\n              )}\r\n              {showThankYouPopup && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <h2>Thank You!</h2>\r\n                    <p>Your generosity makes a difference. Thank you for your support!</p>\r\n                    <button onClick={() => setShowThankYouPopup(false)}>Close</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n    \r\n              {isTargetReached && showThankYouPopup && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <h2>🎉 Target Reached! 🎉</h2>\r\n                    <p>We have reached our goal, thanks to your kindness and support!</p>\r\n                    <button onClick={() => setShowThankYouPopup(false)}>Close</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </div>\r\n          )}\r\n        </div>\r\n    );\r\n}\r\nexport default CampaignInteraction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}