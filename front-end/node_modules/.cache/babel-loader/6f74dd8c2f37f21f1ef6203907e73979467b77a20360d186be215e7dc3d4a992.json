{"ast":null,"code":"'use strict';\n\n/**\n * Provides a factory function for a {@link StatsCollector} object.\n * @module\n */\nvar constants = require('./runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\n\n/**\n * Test statistics collector.\n *\n * @public\n * @typedef {Object} StatsCollector\n * @property {number} suites - integer count of suites run.\n * @property {number} tests - integer count of tests run.\n * @property {number} passes - integer count of passing tests.\n * @property {number} pending - integer count of pending tests.\n * @property {number} failures - integer count of failed tests.\n * @property {Date} start - time when testing began.\n * @property {Date} end - time when testing concluded.\n * @property {number} duration - number of msecs that testing took.\n */\n\nvar Date = global.Date;\n\n/**\n * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n *\n * @private\n * @param {Runner} runner - Runner instance\n * @throws {TypeError} If falsy `runner`\n */\nfunction createStatsCollector(runner) {\n  /**\n   * @type StatsCollector\n   */\n  var stats = {\n    suites: 0,\n    tests: 0,\n    passes: 0,\n    pending: 0,\n    failures: 0\n  };\n  if (!runner) {\n    throw new TypeError('Missing runner argument');\n  }\n  runner.stats = stats;\n  runner.once(EVENT_RUN_BEGIN, function () {\n    stats.start = new Date();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    suite.root || stats.suites++;\n  });\n  runner.on(EVENT_TEST_PASS, function () {\n    stats.passes++;\n  });\n  runner.on(EVENT_TEST_FAIL, function () {\n    stats.failures++;\n  });\n  runner.on(EVENT_TEST_PENDING, function () {\n    stats.pending++;\n  });\n  runner.on(EVENT_TEST_END, function () {\n    stats.tests++;\n  });\n  runner.once(EVENT_RUN_END, function () {\n    stats.end = new Date();\n    stats.duration = stats.end - stats.start;\n  });\n}\nmodule.exports = createStatsCollector;","map":{"version":3,"names":["constants","require","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_SUITE_BEGIN","EVENT_RUN_BEGIN","EVENT_TEST_PENDING","EVENT_RUN_END","EVENT_TEST_END","Date","global","createStatsCollector","runner","stats","suites","tests","passes","pending","failures","TypeError","once","start","on","suite","root","end","duration","module","exports"],"sources":["C:/Users/rares/Desktop/Blockchain/Proiect/node_modules/mocha/lib/stats-collector.js"],"sourcesContent":["'use strict';\n\n/**\n * Provides a factory function for a {@link StatsCollector} object.\n * @module\n */\n\nvar constants = require('./runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_END = constants.EVENT_TEST_END;\n\n/**\n * Test statistics collector.\n *\n * @public\n * @typedef {Object} StatsCollector\n * @property {number} suites - integer count of suites run.\n * @property {number} tests - integer count of tests run.\n * @property {number} passes - integer count of passing tests.\n * @property {number} pending - integer count of pending tests.\n * @property {number} failures - integer count of failed tests.\n * @property {Date} start - time when testing began.\n * @property {Date} end - time when testing concluded.\n * @property {number} duration - number of msecs that testing took.\n */\n\nvar Date = global.Date;\n\n/**\n * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n *\n * @private\n * @param {Runner} runner - Runner instance\n * @throws {TypeError} If falsy `runner`\n */\nfunction createStatsCollector(runner) {\n  /**\n   * @type StatsCollector\n   */\n  var stats = {\n    suites: 0,\n    tests: 0,\n    passes: 0,\n    pending: 0,\n    failures: 0\n  };\n\n  if (!runner) {\n    throw new TypeError('Missing runner argument');\n  }\n\n  runner.stats = stats;\n\n  runner.once(EVENT_RUN_BEGIN, function () {\n    stats.start = new Date();\n  });\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    suite.root || stats.suites++;\n  });\n  runner.on(EVENT_TEST_PASS, function () {\n    stats.passes++;\n  });\n  runner.on(EVENT_TEST_FAIL, function () {\n    stats.failures++;\n  });\n  runner.on(EVENT_TEST_PENDING, function () {\n    stats.pending++;\n  });\n  runner.on(EVENT_TEST_END, function () {\n    stats.tests++;\n  });\n  runner.once(EVENT_RUN_END, function () {\n    stats.end = new Date();\n    stats.duration = stats.end - stats.start;\n  });\n}\n\nmodule.exports = createStatsCollector;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,UAAU,CAAC,CAACD,SAAS;AAC7C,IAAIE,eAAe,GAAGF,SAAS,CAACE,eAAe;AAC/C,IAAIC,eAAe,GAAGH,SAAS,CAACG,eAAe;AAC/C,IAAIC,iBAAiB,GAAGJ,SAAS,CAACI,iBAAiB;AACnD,IAAIC,eAAe,GAAGL,SAAS,CAACK,eAAe;AAC/C,IAAIC,kBAAkB,GAAGN,SAAS,CAACM,kBAAkB;AACrD,IAAIC,aAAa,GAAGP,SAAS,CAACO,aAAa;AAC3C,IAAIC,cAAc,GAAGR,SAAS,CAACQ,cAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,oBAAoBA,CAACC,MAAM,EAAE;EACpC;AACF;AACA;EACE,IAAIC,KAAK,GAAG;IACVC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACVC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAI,CAACN,MAAM,EAAE;IACX,MAAM,IAAIO,SAAS,CAAC,yBAAyB,CAAC;EAChD;EAEAP,MAAM,CAACC,KAAK,GAAGA,KAAK;EAEpBD,MAAM,CAACQ,IAAI,CAACf,eAAe,EAAE,YAAY;IACvCQ,KAAK,CAACQ,KAAK,GAAG,IAAIZ,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC;EACFG,MAAM,CAACU,EAAE,CAAClB,iBAAiB,EAAE,UAAUmB,KAAK,EAAE;IAC5CA,KAAK,CAACC,IAAI,IAAIX,KAAK,CAACC,MAAM,EAAE;EAC9B,CAAC,CAAC;EACFF,MAAM,CAACU,EAAE,CAACpB,eAAe,EAAE,YAAY;IACrCW,KAAK,CAACG,MAAM,EAAE;EAChB,CAAC,CAAC;EACFJ,MAAM,CAACU,EAAE,CAACnB,eAAe,EAAE,YAAY;IACrCU,KAAK,CAACK,QAAQ,EAAE;EAClB,CAAC,CAAC;EACFN,MAAM,CAACU,EAAE,CAAChB,kBAAkB,EAAE,YAAY;IACxCO,KAAK,CAACI,OAAO,EAAE;EACjB,CAAC,CAAC;EACFL,MAAM,CAACU,EAAE,CAACd,cAAc,EAAE,YAAY;IACpCK,KAAK,CAACE,KAAK,EAAE;EACf,CAAC,CAAC;EACFH,MAAM,CAACQ,IAAI,CAACb,aAAa,EAAE,YAAY;IACrCM,KAAK,CAACY,GAAG,GAAG,IAAIhB,IAAI,CAAC,CAAC;IACtBI,KAAK,CAACa,QAAQ,GAAGb,KAAK,CAACY,GAAG,GAAGZ,KAAK,CAACQ,KAAK;EAC1C,CAAC,CAAC;AACJ;AAEAM,MAAM,CAACC,OAAO,GAAGjB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}