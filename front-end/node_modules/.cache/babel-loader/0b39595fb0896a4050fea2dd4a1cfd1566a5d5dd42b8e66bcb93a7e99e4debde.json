{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rpcCompilerOutput = exports.rpcCompilerInput = void 0;\nconst t = __importStar(require(\"io-ts\"));\nexports.rpcCompilerInput = t.type({\n  language: t.string,\n  sources: t.any,\n  settings: t.any\n}, \"RpcCompilerInput\");\nexports.rpcCompilerOutput = t.type({\n  sources: t.any,\n  contracts: t.any\n}, \"RpcCompilerOutput\");","map":{"version":3,"names":["t","__importStar","require","exports","rpcCompilerInput","type","language","string","sources","any","settings","rpcCompilerOutput","contracts"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\internal\\core\\jsonrpc\\types\\input\\solc.ts"],"sourcesContent":["import * as t from \"io-ts\";\n\nexport const rpcCompilerInput = t.type(\n  {\n    language: t.string,\n    sources: t.any,\n    settings: t.any,\n  },\n  \"RpcCompilerInput\"\n);\n\nexport type RpcCompilerInput = t.TypeOf<typeof rpcCompilerInput>;\n\nexport const rpcCompilerOutput = t.type(\n  {\n    sources: t.any,\n    contracts: t.any,\n  },\n  \"RpcCompilerOutput\"\n);\n\nexport type RpcCompilerOutput = t.TypeOf<typeof rpcCompilerOutput>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,CAAA,GAAAC,YAAA,CAAAC,OAAA;AAEaC,OAAA,CAAAC,gBAAgB,GAAGJ,CAAC,CAACK,IAAI,CACpC;EACEC,QAAQ,EAAEN,CAAC,CAACO,MAAM;EAClBC,OAAO,EAAER,CAAC,CAACS,GAAG;EACdC,QAAQ,EAAEV,CAAC,CAACS;CACb,EACD,kBAAkB,CACnB;AAIYN,OAAA,CAAAQ,iBAAiB,GAAGX,CAAC,CAACK,IAAI,CACrC;EACEG,OAAO,EAAER,CAAC,CAACS,GAAG;EACdG,SAAS,EAAEZ,CAAC,CAACS;CACd,EACD,mBAAmB,CACpB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}