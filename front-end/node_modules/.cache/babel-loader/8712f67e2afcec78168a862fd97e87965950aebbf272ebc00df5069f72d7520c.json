{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst config_env_1 = require(\"../internal/core/config/config-env\");\nconst global_dir_1 = require(\"../internal/util/global-dir\");\nconst task_names_1 = require(\"./task-names\");\n(0, config_env_1.subtask)(task_names_1.TASK_CLEAN_GLOBAL, async () => {\n  const globalCacheDir = await (0, global_dir_1.getCacheDir)();\n  await fs_extra_1.default.emptyDir(globalCacheDir);\n});\n(0, config_env_1.task)(task_names_1.TASK_CLEAN, \"Clears the cache and deletes all artifacts\").addFlag(\"global\", \"Clear the global cache\").setAction(async ({\n  global\n}, {\n  config,\n  run,\n  artifacts\n}) => {\n  if (global) {\n    return run(task_names_1.TASK_CLEAN_GLOBAL);\n  }\n  await fs_extra_1.default.emptyDir(config.paths.cache);\n  await fs_extra_1.default.remove(config.paths.artifacts);\n  artifacts.clearCache?.();\n});","map":{"version":3,"names":["fs_extra_1","__importDefault","require","config_env_1","global_dir_1","task_names_1","subtask","TASK_CLEAN_GLOBAL","globalCacheDir","getCacheDir","default","emptyDir","task","TASK_CLEAN","addFlag","setAction","global","config","run","artifacts","paths","cache","remove","clearCache"],"sources":["C:\\Users\\rares\\Desktop\\Blockchain\\Proiect\\node_modules\\hardhat\\src\\builtin-tasks\\clean.ts"],"sourcesContent":["import fsExtra from \"fs-extra\";\n\nimport { subtask, task } from \"../internal/core/config/config-env\";\nimport { getCacheDir } from \"../internal/util/global-dir\";\n\nimport { TASK_CLEAN, TASK_CLEAN_GLOBAL } from \"./task-names\";\n\nsubtask(TASK_CLEAN_GLOBAL, async () => {\n  const globalCacheDir = await getCacheDir();\n  await fsExtra.emptyDir(globalCacheDir);\n});\n\ntask(TASK_CLEAN, \"Clears the cache and deletes all artifacts\")\n  .addFlag(\"global\", \"Clear the global cache\")\n  .setAction(\n    async ({ global }: { global: boolean }, { config, run, artifacts }) => {\n      if (global) {\n        return run(TASK_CLEAN_GLOBAL);\n      }\n      await fsExtra.emptyDir(config.paths.cache);\n      await fsExtra.remove(config.paths.artifacts);\n      artifacts.clearCache?.();\n    }\n  );\n"],"mappings":";;;;;;;;;;AAAA,MAAAA,UAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,MAAAC,YAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AAEA,MAAAG,YAAA,GAAAH,OAAA;AAEA,IAAAC,YAAA,CAAAG,OAAO,EAACD,YAAA,CAAAE,iBAAiB,EAAE,YAAW;EACpC,MAAMC,cAAc,GAAG,MAAM,IAAAJ,YAAA,CAAAK,WAAW,GAAE;EAC1C,MAAMT,UAAA,CAAAU,OAAO,CAACC,QAAQ,CAACH,cAAc,CAAC;AACxC,CAAC,CAAC;AAEF,IAAAL,YAAA,CAAAS,IAAI,EAACP,YAAA,CAAAQ,UAAU,EAAE,4CAA4C,CAAC,CAC3DC,OAAO,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAC3CC,SAAS,CACR,OAAO;EAAEC;AAAM,CAAuB,EAAE;EAAEC,MAAM;EAAEC,GAAG;EAAEC;AAAS,CAAE,KAAI;EACpE,IAAIH,MAAM,EAAE;IACV,OAAOE,GAAG,CAACb,YAAA,CAAAE,iBAAiB,CAAC;;EAE/B,MAAMP,UAAA,CAAAU,OAAO,CAACC,QAAQ,CAACM,MAAM,CAACG,KAAK,CAACC,KAAK,CAAC;EAC1C,MAAMrB,UAAA,CAAAU,OAAO,CAACY,MAAM,CAACL,MAAM,CAACG,KAAK,CAACD,SAAS,CAAC;EAC5CA,SAAS,CAACI,UAAU,GAAE,CAAE;AAC1B,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}