{"ast":null,"code":"import * as UploadCapabilities from '@web3-storage/capabilities/upload';\nimport { SpaceDID } from '@web3-storage/capabilities/utils';\nimport { servicePrincipal, connection } from '../service.js';\n/**\n * Remove an upload by root data CID.\n *\n * @param {import('../types.js').InvocationConfig} conf Configuration\n * for the UCAN invocation. An object with `issuer`, `with` and `proofs`.\n *\n * The `issuer` is the signing authority that is issuing the UCAN\n * invocation(s). It is typically the user _agent_.\n *\n * The `with` is the resource the invocation applies to. It is typically the\n * DID of a space.\n *\n * The `proofs` are a set of capability delegations that prove the issuer\n * has the capability to perform the action.\n *\n * The issuer needs the `upload/remove` delegated capability.\n * @param {import('multiformats').UnknownLink} root Root data CID to remove.\n * @param {import('../types.js').RequestOptions} [options]\n */\nexport async function remove({\n  issuer,\n  with: resource,\n  proofs,\n  audience\n}, root, options = {}) {\n  /* c8 ignore next */\n  const conn = options.connection ?? connection;\n  const result = await UploadCapabilities.remove.invoke({\n    issuer,\n    /* c8 ignore next */\n    audience: audience ?? servicePrincipal,\n    with: SpaceDID.from(resource),\n    nb: input(root),\n    proofs,\n    nonce: options.nonce\n  }).execute(conn);\n  if (!result.out.ok) {\n    throw new Error(`failed ${UploadCapabilities.remove.can} invocation`, {\n      cause: result.out.error\n    });\n  }\n  return result.out.ok;\n}\n/** Returns the ability used by an invocation. */\nexport const ability = UploadCapabilities.remove.can;\n/**\n * Returns required input to the invocation.\n *\n * @param {import('multiformats').UnknownLink} root\n */\nexport const input = root => ({\n  root\n});","map":{"version":3,"names":["UploadCapabilities","SpaceDID","servicePrincipal","connection","remove","issuer","with","resource","proofs","audience","root","options","conn","result","invoke","from","nb","input","nonce","execute","out","ok","Error","can","cause","error","ability"],"sources":["../../../src/upload/remove.js"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,kBAAkB,MAAM,mCAAmC;AACvE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,eAAe;AAE5D;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,eAAeC,MAAMA,CAC1B;EAAEC,MAAM;EAAEC,IAAI,EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAQ,CAAE,EAC5CC,IAAI,EACJC,OAAO,GAAG,EAAE;EAEZ;EACA,MAAMC,IAAI,GAAGD,OAAO,CAACR,UAAU,IAAIA,UAAU;EAC7C,MAAMU,MAAM,GAAG,MAAMb,kBAAkB,CAACI,MAAM,CAC3CU,MAAM,CAAC;IACNT,MAAM;IACN;IACAI,QAAQ,EAAEA,QAAQ,IAAIP,gBAAgB;IACtCI,IAAI,EAAEL,QAAQ,CAACc,IAAI,CAACR,QAAQ,CAAC;IAC7BS,EAAE,EAAEC,KAAK,CAACP,IAAI,CAAC;IACfF,MAAM;IACNU,KAAK,EAAEP,OAAO,CAACO;GAChB,CAAC,CACDC,OAAO,CAACP,IAAI,CAAC;EAEhB,IAAI,CAACC,MAAM,CAACO,GAAG,CAACC,EAAE,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,UAAUtB,kBAAkB,CAACI,MAAM,CAACmB,GAAG,aAAa,EAAE;MACpEC,KAAK,EAAEX,MAAM,CAACO,GAAG,CAACK;KACnB,CAAC;;EAGJ,OAAOZ,MAAM,CAACO,GAAG,CAACC,EAAE;AACtB;AAEA;AACA,OAAO,MAAMK,OAAO,GAAG1B,kBAAkB,CAACI,MAAM,CAACmB,GAAG;AAEpD;;;;;AAKA,OAAO,MAAMN,KAAK,GAAIP,IAAI,KAAM;EAAEA;AAAI,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}